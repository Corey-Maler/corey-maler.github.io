(function(pt,mt){typeof exports=="object"&&typeof module<"u"?mt(exports):typeof define=="function"&&define.amd?define(["exports"],mt):(pt=typeof globalThis<"u"?globalThis:pt||self,mt(pt.RWM={}))})(this,function(pt){"use strict";var qp=Object.defineProperty;var jp=(pt,mt,Rt)=>mt in pt?qp(pt,mt,{enumerable:!0,configurable:!0,writable:!0,value:Rt}):pt[mt]=Rt;var Je=(pt,mt,Rt)=>(jp(pt,typeof mt!="symbol"?mt+"":mt,Rt),Rt);/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const mt="156",Rt={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},kn={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Is=0,hr=1,Os=2,gr=1,Bs=2,Xt=3,an=0,vt=1,Kt=2,rn=0,Dn=1,br=2,yr=3,vr=4,Fs=5,Un=100,Gs=101,Hs=102,Ar=103,Sr=104,zs=200,Vs=201,Ws=202,Xs=203,Mr=204,Er=205,Ks=206,Ys=207,Zs=208,qs=209,js=210,Js=0,$s=1,Qs=2,fi=3,el=4,tl=5,nl=6,al=7,xr=0,il=1,rl=2,on=0,ol=1,sl=2,ll=3,ul=4,cl=5,wr=300,In=301,On=302,hi=303,gi=304,Ca=306,bi=1e3,Dt=1001,yi=1002,ft=1003,Tr=1004,vi=1005,Ct=1006,dl=1007,ca=1008,sn=1009,_l=1010,pl=1011,Ai=1012,Lr=1013,ln=1014,un=1015,da=1016,Rr=1017,Cr=1018,hn=1020,ml=1021,Ut=1023,fl=1024,hl=1025,gn=1026,Bn=1027,gl=1028,Pr=1029,bl=1030,Nr=1031,kr=1033,Si=33776,Mi=33777,Ei=33778,xi=33779,Dr=35840,Ur=35841,Ir=35842,Or=35843,yl=36196,Br=37492,Fr=37496,Gr=37808,Hr=37809,zr=37810,Vr=37811,Wr=37812,Xr=37813,Kr=37814,Yr=37815,Zr=37816,qr=37817,jr=37818,Jr=37819,$r=37820,Qr=37821,wi=36492,eo=36494,to=36495,vl=36283,no=36284,ao=36285,io=36286,ro=3e3,bn=3001,Al=3200,Sl=3201,Ml=0,El=1,yn="",Ke="srgb",Ht="srgb-linear",Pa="display-p3",Ti=7680,xl=519,wl=512,Tl=513,Ll=514,Rl=515,Cl=516,Pl=517,Nl=518,kl=519,Li=35044,oo="300 es",Ri=1035,Yt=2e3,Na=2001;class vn{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,s=i.length;r<s;r++)i[r].call(this,e);e.target=null}}}const ct=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let so=1234567;const _a=Math.PI/180,pa=180/Math.PI;function Zt(){const a=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(ct[a&255]+ct[a>>8&255]+ct[a>>16&255]+ct[a>>24&255]+"-"+ct[e&255]+ct[e>>8&255]+"-"+ct[e>>16&15|64]+ct[e>>24&255]+"-"+ct[t&63|128]+ct[t>>8&255]+"-"+ct[t>>16&255]+ct[t>>24&255]+ct[n&255]+ct[n>>8&255]+ct[n>>16&255]+ct[n>>24&255]).toLowerCase()}function dt(a,e,t){return Math.max(e,Math.min(t,a))}function Ci(a,e){return(a%e+e)%e}function Dl(a,e,t,n,i){return n+(a-e)*(i-n)/(t-e)}function Ul(a,e,t){return a!==e?(t-a)/(e-a):0}function ma(a,e,t){return(1-t)*a+t*e}function Il(a,e,t,n){return ma(a,e,1-Math.exp(-t*n))}function Ol(a,e=1){return e-Math.abs(Ci(a,e*2)-e)}function Bl(a,e,t){return a<=e?0:a>=t?1:(a=(a-e)/(t-e),a*a*(3-2*a))}function Fl(a,e,t){return a<=e?0:a>=t?1:(a=(a-e)/(t-e),a*a*a*(a*(a*6-15)+10))}function Gl(a,e){return a+Math.floor(Math.random()*(e-a+1))}function Hl(a,e){return a+Math.random()*(e-a)}function zl(a){return a*(.5-Math.random())}function Vl(a){a!==void 0&&(so=a);let e=so+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function Wl(a){return a*_a}function Xl(a){return a*pa}function Pi(a){return(a&a-1)===0&&a!==0}function Kl(a){return Math.pow(2,Math.ceil(Math.log(a)/Math.LN2))}function ka(a){return Math.pow(2,Math.floor(Math.log(a)/Math.LN2))}function Yl(a,e,t,n,i){const r=Math.cos,s=Math.sin,o=r(t/2),l=s(t/2),u=r((e+n)/2),c=s((e+n)/2),_=r((e-n)/2),p=s((e-n)/2),f=r((n-e)/2),h=s((n-e)/2);switch(i){case"XYX":a.set(o*c,l*_,l*p,o*u);break;case"YZY":a.set(l*p,o*c,l*_,o*u);break;case"ZXZ":a.set(l*_,l*p,o*c,o*u);break;case"XZX":a.set(o*c,l*h,l*f,o*u);break;case"YXY":a.set(l*f,o*c,l*h,o*u);break;case"ZYZ":a.set(l*h,l*f,o*c,o*u);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function zt(a,e){switch(e.constructor){case Float32Array:return a;case Uint32Array:return a/4294967295;case Uint16Array:return a/65535;case Uint8Array:return a/255;case Int32Array:return Math.max(a/2147483647,-1);case Int16Array:return Math.max(a/32767,-1);case Int8Array:return Math.max(a/127,-1);default:throw new Error("Invalid component type.")}}function ze(a,e){switch(e.constructor){case Float32Array:return a;case Uint32Array:return Math.round(a*4294967295);case Uint16Array:return Math.round(a*65535);case Uint8Array:return Math.round(a*255);case Int32Array:return Math.round(a*2147483647);case Int16Array:return Math.round(a*32767);case Int8Array:return Math.round(a*127);default:throw new Error("Invalid component type.")}}const Zl={DEG2RAD:_a,RAD2DEG:pa,generateUUID:Zt,clamp:dt,euclideanModulo:Ci,mapLinear:Dl,inverseLerp:Ul,lerp:ma,damp:Il,pingpong:Ol,smoothstep:Bl,smootherstep:Fl,randInt:Gl,randFloat:Hl,randFloatSpread:zl,seededRandom:Vl,degToRad:Wl,radToDeg:Xl,isPowerOfTwo:Pi,ceilPowerOfTwo:Kl,floorPowerOfTwo:ka,setQuaternionFromProperEuler:Yl,normalize:ze,denormalize:zt};class ve{constructor(e=0,t=0){ve.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(dt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,s=this.y-e.y;return this.x=r*n-s*i+e.x,this.y=r*i+s*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Ne{constructor(e,t,n,i,r,s,o,l,u){Ne.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,s,o,l,u)}set(e,t,n,i,r,s,o,l,u){const c=this.elements;return c[0]=e,c[1]=i,c[2]=o,c[3]=t,c[4]=r,c[5]=l,c[6]=n,c[7]=s,c[8]=u,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,s=n[0],o=n[3],l=n[6],u=n[1],c=n[4],_=n[7],p=n[2],f=n[5],h=n[8],y=i[0],m=i[3],d=i[6],E=i[1],b=i[4],L=i[7],x=i[2],P=i[5],T=i[8];return r[0]=s*y+o*E+l*x,r[3]=s*m+o*b+l*P,r[6]=s*d+o*L+l*T,r[1]=u*y+c*E+_*x,r[4]=u*m+c*b+_*P,r[7]=u*d+c*L+_*T,r[2]=p*y+f*E+h*x,r[5]=p*m+f*b+h*P,r[8]=p*d+f*L+h*T,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],s=e[4],o=e[5],l=e[6],u=e[7],c=e[8];return t*s*c-t*o*u-n*r*c+n*o*l+i*r*u-i*s*l}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],s=e[4],o=e[5],l=e[6],u=e[7],c=e[8],_=c*s-o*u,p=o*l-c*r,f=u*r-s*l,h=t*_+n*p+i*f;if(h===0)return this.set(0,0,0,0,0,0,0,0,0);const y=1/h;return e[0]=_*y,e[1]=(i*u-c*n)*y,e[2]=(o*n-i*s)*y,e[3]=p*y,e[4]=(c*t-i*l)*y,e[5]=(i*r-o*t)*y,e[6]=f*y,e[7]=(n*l-u*t)*y,e[8]=(s*t-n*r)*y,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,s,o){const l=Math.cos(r),u=Math.sin(r);return this.set(n*l,n*u,-n*(l*s+u*o)+s+e,-i*u,i*l,-i*(-u*s+l*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(Ni.makeScale(e,t)),this}rotate(e){return this.premultiply(Ni.makeRotation(-e)),this}translate(e,t){return this.premultiply(Ni.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Ni=new Ne;function lo(a){for(let e=a.length-1;e>=0;--e)if(a[e]>=65535)return!0;return!1}function Da(a){return document.createElementNS("http://www.w3.org/1999/xhtml",a)}function ql(){const a=Da("canvas");return a.style.display="block",a}const uo={};function fa(a){a in uo||(uo[a]=!0,console.warn(a))}function Fn(a){return a<.04045?a*.0773993808:Math.pow(a*.9478672986+.0521327014,2.4)}function ki(a){return a<.0031308?a*12.92:1.055*Math.pow(a,.41666)-.055}const jl=new Ne().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),Jl=new Ne().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);function $l(a){return a.convertSRGBToLinear().applyMatrix3(Jl)}function Ql(a){return a.applyMatrix3(jl).convertLinearToSRGB()}const eu={[Ht]:a=>a,[Ke]:a=>a.convertSRGBToLinear(),[Pa]:$l},tu={[Ht]:a=>a,[Ke]:a=>a.convertLinearToSRGB(),[Pa]:Ql},It={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(a){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!a},get workingColorSpace(){return Ht},set workingColorSpace(a){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(a,e,t){if(this.enabled===!1||e===t||!e||!t)return a;const n=eu[e],i=tu[t];if(n===void 0||i===void 0)throw new Error(`Unsupported color space conversion, "${e}" to "${t}".`);return i(n(a))},fromWorkingColorSpace:function(a,e){return this.convert(a,this.workingColorSpace,e)},toWorkingColorSpace:function(a,e){return this.convert(a,e,this.workingColorSpace)}};let Gn;class co{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Gn===void 0&&(Gn=Da("canvas")),Gn.width=e.width,Gn.height=e.height;const n=Gn.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Gn}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Da("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let s=0;s<r.length;s++)r[s]=Fn(r[s]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Fn(t[n]/255)*255):t[n]=Fn(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let nu=0;class _o{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:nu++}),this.uuid=Zt(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let s=0,o=i.length;s<o;s++)i[s].isDataTexture?r.push(Di(i[s].image)):r.push(Di(i[s]))}else r=Di(i);n.url=r}return t||(e.images[this.uuid]=n),n}}function Di(a){return typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&a instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&a instanceof ImageBitmap?co.getDataURL(a):a.data?{data:Array.from(a.data),width:a.width,height:a.height,type:a.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let au=0;class At extends vn{constructor(e=At.DEFAULT_IMAGE,t=At.DEFAULT_MAPPING,n=Dt,i=Dt,r=Ct,s=ca,o=Ut,l=sn,u=At.DEFAULT_ANISOTROPY,c=yn){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:au++}),this.uuid=Zt(),this.name="",this.source=new _o(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=s,this.anisotropy=u,this.format=o,this.internalFormat=null,this.type=l,this.offset=new ve(0,0),this.repeat=new ve(1,1),this.center=new ve(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ne,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof c=="string"?this.colorSpace=c:(fa("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=c===bn?Ke:yn),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==wr)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case bi:e.x=e.x-Math.floor(e.x);break;case Dt:e.x=e.x<0?0:1;break;case yi:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case bi:e.y=e.y-Math.floor(e.y);break;case Dt:e.y=e.y<0?0:1;break;case yi:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return fa("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===Ke?bn:ro}set encoding(e){fa("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===bn?Ke:yn}}At.DEFAULT_IMAGE=null,At.DEFAULT_MAPPING=wr,At.DEFAULT_ANISOTROPY=1;class Ye{constructor(e=0,t=0,n=0,i=1){Ye.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i+s[12]*r,this.y=s[1]*t+s[5]*n+s[9]*i+s[13]*r,this.z=s[2]*t+s[6]*n+s[10]*i+s[14]*r,this.w=s[3]*t+s[7]*n+s[11]*i+s[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const l=e.elements,u=l[0],c=l[4],_=l[8],p=l[1],f=l[5],h=l[9],y=l[2],m=l[6],d=l[10];if(Math.abs(c-p)<.01&&Math.abs(_-y)<.01&&Math.abs(h-m)<.01){if(Math.abs(c+p)<.1&&Math.abs(_+y)<.1&&Math.abs(h+m)<.1&&Math.abs(u+f+d-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const b=(u+1)/2,L=(f+1)/2,x=(d+1)/2,P=(c+p)/4,T=(_+y)/4,W=(h+m)/4;return b>L&&b>x?b<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(b),i=P/n,r=T/n):L>x?L<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(L),n=P/i,r=W/i):x<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(x),n=T/r,i=W/r),this.set(n,i,r,t),this}let E=Math.sqrt((m-h)*(m-h)+(_-y)*(_-y)+(p-c)*(p-c));return Math.abs(E)<.001&&(E=1),this.x=(m-h)/E,this.y=(_-y)/E,this.z=(p-c)/E,this.w=Math.acos((u+f+d-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class iu extends vn{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Ye(0,0,e,t),this.scissorTest=!1,this.viewport=new Ye(0,0,e,t);const i={width:e,height:t,depth:1};n.encoding!==void 0&&(fa("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===bn?Ke:yn),this.texture=new At(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:Ct,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new _o(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class An extends iu{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class po extends At{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=ft,this.minFilter=ft,this.wrapR=Dt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ru extends At{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=ft,this.minFilter=ft,this.wrapR=Dt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Sn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,s,o){let l=n[i+0],u=n[i+1],c=n[i+2],_=n[i+3];const p=r[s+0],f=r[s+1],h=r[s+2],y=r[s+3];if(o===0){e[t+0]=l,e[t+1]=u,e[t+2]=c,e[t+3]=_;return}if(o===1){e[t+0]=p,e[t+1]=f,e[t+2]=h,e[t+3]=y;return}if(_!==y||l!==p||u!==f||c!==h){let m=1-o;const d=l*p+u*f+c*h+_*y,E=d>=0?1:-1,b=1-d*d;if(b>Number.EPSILON){const x=Math.sqrt(b),P=Math.atan2(x,d*E);m=Math.sin(m*P)/x,o=Math.sin(o*P)/x}const L=o*E;if(l=l*m+p*L,u=u*m+f*L,c=c*m+h*L,_=_*m+y*L,m===1-o){const x=1/Math.sqrt(l*l+u*u+c*c+_*_);l*=x,u*=x,c*=x,_*=x}}e[t]=l,e[t+1]=u,e[t+2]=c,e[t+3]=_}static multiplyQuaternionsFlat(e,t,n,i,r,s){const o=n[i],l=n[i+1],u=n[i+2],c=n[i+3],_=r[s],p=r[s+1],f=r[s+2],h=r[s+3];return e[t]=o*h+c*_+l*f-u*p,e[t+1]=l*h+c*p+u*_-o*f,e[t+2]=u*h+c*f+o*p-l*_,e[t+3]=c*h-o*_-l*p-u*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,r=e._z,s=e._order,o=Math.cos,l=Math.sin,u=o(n/2),c=o(i/2),_=o(r/2),p=l(n/2),f=l(i/2),h=l(r/2);switch(s){case"XYZ":this._x=p*c*_+u*f*h,this._y=u*f*_-p*c*h,this._z=u*c*h+p*f*_,this._w=u*c*_-p*f*h;break;case"YXZ":this._x=p*c*_+u*f*h,this._y=u*f*_-p*c*h,this._z=u*c*h-p*f*_,this._w=u*c*_+p*f*h;break;case"ZXY":this._x=p*c*_-u*f*h,this._y=u*f*_+p*c*h,this._z=u*c*h+p*f*_,this._w=u*c*_-p*f*h;break;case"ZYX":this._x=p*c*_-u*f*h,this._y=u*f*_+p*c*h,this._z=u*c*h-p*f*_,this._w=u*c*_+p*f*h;break;case"YZX":this._x=p*c*_+u*f*h,this._y=u*f*_+p*c*h,this._z=u*c*h-p*f*_,this._w=u*c*_-p*f*h;break;case"XZY":this._x=p*c*_-u*f*h,this._y=u*f*_-p*c*h,this._z=u*c*h+p*f*_,this._w=u*c*_+p*f*h;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],s=t[1],o=t[5],l=t[9],u=t[2],c=t[6],_=t[10],p=n+o+_;if(p>0){const f=.5/Math.sqrt(p+1);this._w=.25/f,this._x=(c-l)*f,this._y=(r-u)*f,this._z=(s-i)*f}else if(n>o&&n>_){const f=2*Math.sqrt(1+n-o-_);this._w=(c-l)/f,this._x=.25*f,this._y=(i+s)/f,this._z=(r+u)/f}else if(o>_){const f=2*Math.sqrt(1+o-n-_);this._w=(r-u)/f,this._x=(i+s)/f,this._y=.25*f,this._z=(l+c)/f}else{const f=2*Math.sqrt(1+_-n-o);this._w=(s-i)/f,this._x=(r+u)/f,this._y=(l+c)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(dt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,s=e._w,o=t._x,l=t._y,u=t._z,c=t._w;return this._x=n*c+s*o+i*u-r*l,this._y=i*c+s*l+r*o-n*u,this._z=r*c+s*u+n*l-i*o,this._w=s*c-n*o-i*l-r*u,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,s=this._w;let o=s*e._w+n*e._x+i*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=s,this._x=n,this._y=i,this._z=r,this;const l=1-o*o;if(l<=Number.EPSILON){const f=1-t;return this._w=f*s+t*this._w,this._x=f*n+t*this._x,this._y=f*i+t*this._y,this._z=f*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const u=Math.sqrt(l),c=Math.atan2(u,o),_=Math.sin((1-t)*c)/u,p=Math.sin(t*c)/u;return this._w=s*_+this._w*p,this._x=n*_+this._x*p,this._y=i*_+this._y*p,this._z=r*_+this._z*p,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(r),n*Math.cos(r),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class C{constructor(e=0,t=0,n=0){C.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(mo.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(mo.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,s=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*s,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*s,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*s,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,s=e.y,o=e.z,l=e.w,u=l*t+s*i-o*n,c=l*n+o*t-r*i,_=l*i+r*n-s*t,p=-r*t-s*n-o*i;return this.x=u*l+p*-r+c*-o-_*-s,this.y=c*l+p*-s+_*-r-u*-o,this.z=_*l+p*-o+u*-s-c*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,s=t.x,o=t.y,l=t.z;return this.x=i*l-r*o,this.y=r*s-n*l,this.z=n*o-i*s,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Ui.copy(this).projectOnVector(e),this.sub(Ui)}reflect(e){return this.sub(Ui.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(dt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Ui=new C,mo=new Sn;class ha{constructor(e=new C(1/0,1/0,1/0),t=new C(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(jt.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(jt.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=jt.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){if(e.updateWorldMatrix(!1,!1),e.boundingBox!==void 0)e.boundingBox===null&&e.computeBoundingBox(),Hn.copy(e.boundingBox),Hn.applyMatrix4(e.matrixWorld),this.union(Hn);else{const i=e.geometry;if(i!==void 0)if(t&&i.attributes!==void 0&&i.attributes.position!==void 0){const r=i.attributes.position;for(let s=0,o=r.count;s<o;s++)jt.fromBufferAttribute(r,s).applyMatrix4(e.matrixWorld),this.expandByPoint(jt)}else i.boundingBox===null&&i.computeBoundingBox(),Hn.copy(i.boundingBox),Hn.applyMatrix4(e.matrixWorld),this.union(Hn)}const n=e.children;for(let i=0,r=n.length;i<r;i++)this.expandByObject(n[i],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,jt),jt.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ga),Ua.subVectors(this.max,ga),zn.subVectors(e.a,ga),Vn.subVectors(e.b,ga),Wn.subVectors(e.c,ga),cn.subVectors(Vn,zn),dn.subVectors(Wn,Vn),Mn.subVectors(zn,Wn);let t=[0,-cn.z,cn.y,0,-dn.z,dn.y,0,-Mn.z,Mn.y,cn.z,0,-cn.x,dn.z,0,-dn.x,Mn.z,0,-Mn.x,-cn.y,cn.x,0,-dn.y,dn.x,0,-Mn.y,Mn.x,0];return!Ii(t,zn,Vn,Wn,Ua)||(t=[1,0,0,0,1,0,0,0,1],!Ii(t,zn,Vn,Wn,Ua))?!1:(Ia.crossVectors(cn,dn),t=[Ia.x,Ia.y,Ia.z],Ii(t,zn,Vn,Wn,Ua))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,jt).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(jt).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(qt[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),qt[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),qt[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),qt[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),qt[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),qt[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),qt[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),qt[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(qt),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const qt=[new C,new C,new C,new C,new C,new C,new C,new C],jt=new C,Hn=new ha,zn=new C,Vn=new C,Wn=new C,cn=new C,dn=new C,Mn=new C,ga=new C,Ua=new C,Ia=new C,En=new C;function Ii(a,e,t,n,i){for(let r=0,s=a.length-3;r<=s;r+=3){En.fromArray(a,r);const o=i.x*Math.abs(En.x)+i.y*Math.abs(En.y)+i.z*Math.abs(En.z),l=e.dot(En),u=t.dot(En),c=n.dot(En);if(Math.max(-Math.max(l,u,c),Math.min(l,u,c))>o)return!1}return!0}const ou=new ha,ba=new C,Oi=new C;class ya{constructor(e=new C,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):ou.setFromPoints(e).getCenter(n);let i=0;for(let r=0,s=e.length;r<s;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;ba.subVectors(e,this.center);const t=ba.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(ba,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Oi.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(ba.copy(e.center).add(Oi)),this.expandByPoint(ba.copy(e.center).sub(Oi))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Jt=new C,Bi=new C,Oa=new C,_n=new C,Fi=new C,Ba=new C,Gi=new C;class Fa{constructor(e=new C,t=new C(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Jt)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Jt.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Jt.copy(this.origin).addScaledVector(this.direction,t),Jt.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Bi.copy(e).add(t).multiplyScalar(.5),Oa.copy(t).sub(e).normalize(),_n.copy(this.origin).sub(Bi);const r=e.distanceTo(t)*.5,s=-this.direction.dot(Oa),o=_n.dot(this.direction),l=-_n.dot(Oa),u=_n.lengthSq(),c=Math.abs(1-s*s);let _,p,f,h;if(c>0)if(_=s*l-o,p=s*o-l,h=r*c,_>=0)if(p>=-h)if(p<=h){const y=1/c;_*=y,p*=y,f=_*(_+s*p+2*o)+p*(s*_+p+2*l)+u}else p=r,_=Math.max(0,-(s*p+o)),f=-_*_+p*(p+2*l)+u;else p=-r,_=Math.max(0,-(s*p+o)),f=-_*_+p*(p+2*l)+u;else p<=-h?(_=Math.max(0,-(-s*r+o)),p=_>0?-r:Math.min(Math.max(-r,-l),r),f=-_*_+p*(p+2*l)+u):p<=h?(_=0,p=Math.min(Math.max(-r,-l),r),f=p*(p+2*l)+u):(_=Math.max(0,-(s*r+o)),p=_>0?r:Math.min(Math.max(-r,-l),r),f=-_*_+p*(p+2*l)+u);else p=s>0?-r:r,_=Math.max(0,-(s*p+o)),f=-_*_+p*(p+2*l)+u;return n&&n.copy(this.origin).addScaledVector(this.direction,_),i&&i.copy(Bi).addScaledVector(Oa,p),f}intersectSphere(e,t){Jt.subVectors(e.center,this.origin);const n=Jt.dot(this.direction),i=Jt.dot(Jt)-n*n,r=e.radius*e.radius;if(i>r)return null;const s=Math.sqrt(r-i),o=n-s,l=n+s;return l<0?null:o<0?this.at(l,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,s,o,l;const u=1/this.direction.x,c=1/this.direction.y,_=1/this.direction.z,p=this.origin;return u>=0?(n=(e.min.x-p.x)*u,i=(e.max.x-p.x)*u):(n=(e.max.x-p.x)*u,i=(e.min.x-p.x)*u),c>=0?(r=(e.min.y-p.y)*c,s=(e.max.y-p.y)*c):(r=(e.max.y-p.y)*c,s=(e.min.y-p.y)*c),n>s||r>i||((r>n||isNaN(n))&&(n=r),(s<i||isNaN(i))&&(i=s),_>=0?(o=(e.min.z-p.z)*_,l=(e.max.z-p.z)*_):(o=(e.max.z-p.z)*_,l=(e.min.z-p.z)*_),n>l||o>i)||((o>n||n!==n)&&(n=o),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Jt)!==null}intersectTriangle(e,t,n,i,r){Fi.subVectors(t,e),Ba.subVectors(n,e),Gi.crossVectors(Fi,Ba);let s=this.direction.dot(Gi),o;if(s>0){if(i)return null;o=1}else if(s<0)o=-1,s=-s;else return null;_n.subVectors(this.origin,e);const l=o*this.direction.dot(Ba.crossVectors(_n,Ba));if(l<0)return null;const u=o*this.direction.dot(Fi.cross(_n));if(u<0||l+u>s)return null;const c=-o*_n.dot(Gi);return c<0?null:this.at(c/s,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Ze{constructor(e,t,n,i,r,s,o,l,u,c,_,p,f,h,y,m){Ze.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,s,o,l,u,c,_,p,f,h,y,m)}set(e,t,n,i,r,s,o,l,u,c,_,p,f,h,y,m){const d=this.elements;return d[0]=e,d[4]=t,d[8]=n,d[12]=i,d[1]=r,d[5]=s,d[9]=o,d[13]=l,d[2]=u,d[6]=c,d[10]=_,d[14]=p,d[3]=f,d[7]=h,d[11]=y,d[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Ze().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Xn.setFromMatrixColumn(e,0).length(),r=1/Xn.setFromMatrixColumn(e,1).length(),s=1/Xn.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*s,t[9]=n[9]*s,t[10]=n[10]*s,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,s=Math.cos(n),o=Math.sin(n),l=Math.cos(i),u=Math.sin(i),c=Math.cos(r),_=Math.sin(r);if(e.order==="XYZ"){const p=s*c,f=s*_,h=o*c,y=o*_;t[0]=l*c,t[4]=-l*_,t[8]=u,t[1]=f+h*u,t[5]=p-y*u,t[9]=-o*l,t[2]=y-p*u,t[6]=h+f*u,t[10]=s*l}else if(e.order==="YXZ"){const p=l*c,f=l*_,h=u*c,y=u*_;t[0]=p+y*o,t[4]=h*o-f,t[8]=s*u,t[1]=s*_,t[5]=s*c,t[9]=-o,t[2]=f*o-h,t[6]=y+p*o,t[10]=s*l}else if(e.order==="ZXY"){const p=l*c,f=l*_,h=u*c,y=u*_;t[0]=p-y*o,t[4]=-s*_,t[8]=h+f*o,t[1]=f+h*o,t[5]=s*c,t[9]=y-p*o,t[2]=-s*u,t[6]=o,t[10]=s*l}else if(e.order==="ZYX"){const p=s*c,f=s*_,h=o*c,y=o*_;t[0]=l*c,t[4]=h*u-f,t[8]=p*u+y,t[1]=l*_,t[5]=y*u+p,t[9]=f*u-h,t[2]=-u,t[6]=o*l,t[10]=s*l}else if(e.order==="YZX"){const p=s*l,f=s*u,h=o*l,y=o*u;t[0]=l*c,t[4]=y-p*_,t[8]=h*_+f,t[1]=_,t[5]=s*c,t[9]=-o*c,t[2]=-u*c,t[6]=f*_+h,t[10]=p-y*_}else if(e.order==="XZY"){const p=s*l,f=s*u,h=o*l,y=o*u;t[0]=l*c,t[4]=-_,t[8]=u*c,t[1]=p*_+y,t[5]=s*c,t[9]=f*_-h,t[2]=h*_-f,t[6]=o*c,t[10]=y*_+p}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(su,e,lu)}lookAt(e,t,n){const i=this.elements;return St.subVectors(e,t),St.lengthSq()===0&&(St.z=1),St.normalize(),pn.crossVectors(n,St),pn.lengthSq()===0&&(Math.abs(n.z)===1?St.x+=1e-4:St.z+=1e-4,St.normalize(),pn.crossVectors(n,St)),pn.normalize(),Ga.crossVectors(St,pn),i[0]=pn.x,i[4]=Ga.x,i[8]=St.x,i[1]=pn.y,i[5]=Ga.y,i[9]=St.y,i[2]=pn.z,i[6]=Ga.z,i[10]=St.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,s=n[0],o=n[4],l=n[8],u=n[12],c=n[1],_=n[5],p=n[9],f=n[13],h=n[2],y=n[6],m=n[10],d=n[14],E=n[3],b=n[7],L=n[11],x=n[15],P=i[0],T=i[4],W=i[8],v=i[12],M=i[1],q=i[5],ie=i[9],F=i[13],H=i[2],G=i[6],Q=i[10],X=i[14],Y=i[3],j=i[7],J=i[11],U=i[15];return r[0]=s*P+o*M+l*H+u*Y,r[4]=s*T+o*q+l*G+u*j,r[8]=s*W+o*ie+l*Q+u*J,r[12]=s*v+o*F+l*X+u*U,r[1]=c*P+_*M+p*H+f*Y,r[5]=c*T+_*q+p*G+f*j,r[9]=c*W+_*ie+p*Q+f*J,r[13]=c*v+_*F+p*X+f*U,r[2]=h*P+y*M+m*H+d*Y,r[6]=h*T+y*q+m*G+d*j,r[10]=h*W+y*ie+m*Q+d*J,r[14]=h*v+y*F+m*X+d*U,r[3]=E*P+b*M+L*H+x*Y,r[7]=E*T+b*q+L*G+x*j,r[11]=E*W+b*ie+L*Q+x*J,r[15]=E*v+b*F+L*X+x*U,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],s=e[1],o=e[5],l=e[9],u=e[13],c=e[2],_=e[6],p=e[10],f=e[14],h=e[3],y=e[7],m=e[11],d=e[15];return h*(+r*l*_-i*u*_-r*o*p+n*u*p+i*o*f-n*l*f)+y*(+t*l*f-t*u*p+r*s*p-i*s*f+i*u*c-r*l*c)+m*(+t*u*_-t*o*f-r*s*_+n*s*f+r*o*c-n*u*c)+d*(-i*o*c-t*l*_+t*o*p+i*s*_-n*s*p+n*l*c)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],s=e[4],o=e[5],l=e[6],u=e[7],c=e[8],_=e[9],p=e[10],f=e[11],h=e[12],y=e[13],m=e[14],d=e[15],E=_*m*u-y*p*u+y*l*f-o*m*f-_*l*d+o*p*d,b=h*p*u-c*m*u-h*l*f+s*m*f+c*l*d-s*p*d,L=c*y*u-h*_*u+h*o*f-s*y*f-c*o*d+s*_*d,x=h*_*l-c*y*l-h*o*p+s*y*p+c*o*m-s*_*m,P=t*E+n*b+i*L+r*x;if(P===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const T=1/P;return e[0]=E*T,e[1]=(y*p*r-_*m*r-y*i*f+n*m*f+_*i*d-n*p*d)*T,e[2]=(o*m*r-y*l*r+y*i*u-n*m*u-o*i*d+n*l*d)*T,e[3]=(_*l*r-o*p*r-_*i*u+n*p*u+o*i*f-n*l*f)*T,e[4]=b*T,e[5]=(c*m*r-h*p*r+h*i*f-t*m*f-c*i*d+t*p*d)*T,e[6]=(h*l*r-s*m*r-h*i*u+t*m*u+s*i*d-t*l*d)*T,e[7]=(s*p*r-c*l*r+c*i*u-t*p*u-s*i*f+t*l*f)*T,e[8]=L*T,e[9]=(h*_*r-c*y*r-h*n*f+t*y*f+c*n*d-t*_*d)*T,e[10]=(s*y*r-h*o*r+h*n*u-t*y*u-s*n*d+t*o*d)*T,e[11]=(c*o*r-s*_*r-c*n*u+t*_*u+s*n*f-t*o*f)*T,e[12]=x*T,e[13]=(c*y*i-h*_*i+h*n*p-t*y*p-c*n*m+t*_*m)*T,e[14]=(h*o*i-s*y*i-h*n*l+t*y*l+s*n*m-t*o*m)*T,e[15]=(s*_*i-c*o*i+c*n*l-t*_*l-s*n*p+t*o*p)*T,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,s=e.x,o=e.y,l=e.z,u=r*s,c=r*o;return this.set(u*s+n,u*o-i*l,u*l+i*o,0,u*o+i*l,c*o+n,c*l-i*s,0,u*l-i*o,c*l+i*s,r*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,s){return this.set(1,n,r,0,e,1,s,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,s=t._y,o=t._z,l=t._w,u=r+r,c=s+s,_=o+o,p=r*u,f=r*c,h=r*_,y=s*c,m=s*_,d=o*_,E=l*u,b=l*c,L=l*_,x=n.x,P=n.y,T=n.z;return i[0]=(1-(y+d))*x,i[1]=(f+L)*x,i[2]=(h-b)*x,i[3]=0,i[4]=(f-L)*P,i[5]=(1-(p+d))*P,i[6]=(m+E)*P,i[7]=0,i[8]=(h+b)*T,i[9]=(m-E)*T,i[10]=(1-(p+y))*T,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=Xn.set(i[0],i[1],i[2]).length();const s=Xn.set(i[4],i[5],i[6]).length(),o=Xn.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],Ot.copy(this);const u=1/r,c=1/s,_=1/o;return Ot.elements[0]*=u,Ot.elements[1]*=u,Ot.elements[2]*=u,Ot.elements[4]*=c,Ot.elements[5]*=c,Ot.elements[6]*=c,Ot.elements[8]*=_,Ot.elements[9]*=_,Ot.elements[10]*=_,t.setFromRotationMatrix(Ot),n.x=r,n.y=s,n.z=o,this}makePerspective(e,t,n,i,r,s,o=Yt){const l=this.elements,u=2*r/(t-e),c=2*r/(n-i),_=(t+e)/(t-e),p=(n+i)/(n-i);let f,h;if(o===Yt)f=-(s+r)/(s-r),h=-2*s*r/(s-r);else if(o===Na)f=-s/(s-r),h=-s*r/(s-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return l[0]=u,l[4]=0,l[8]=_,l[12]=0,l[1]=0,l[5]=c,l[9]=p,l[13]=0,l[2]=0,l[6]=0,l[10]=f,l[14]=h,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(e,t,n,i,r,s,o=Yt){const l=this.elements,u=1/(t-e),c=1/(n-i),_=1/(s-r),p=(t+e)*u,f=(n+i)*c;let h,y;if(o===Yt)h=(s+r)*_,y=-2*_;else if(o===Na)h=r*_,y=-1*_;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return l[0]=2*u,l[4]=0,l[8]=0,l[12]=-p,l[1]=0,l[5]=2*c,l[9]=0,l[13]=-f,l[2]=0,l[6]=0,l[10]=y,l[14]=-h,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Xn=new C,Ot=new Ze,su=new C(0,0,0),lu=new C(1,1,1),pn=new C,Ga=new C,St=new C,fo=new Ze,ho=new Sn;class Ha{constructor(e=0,t=0,n=0,i=Ha.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],s=i[4],o=i[8],l=i[1],u=i[5],c=i[9],_=i[2],p=i[6],f=i[10];switch(t){case"XYZ":this._y=Math.asin(dt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,f),this._z=Math.atan2(-s,r)):(this._x=Math.atan2(p,u),this._z=0);break;case"YXZ":this._x=Math.asin(-dt(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(o,f),this._z=Math.atan2(l,u)):(this._y=Math.atan2(-_,r),this._z=0);break;case"ZXY":this._x=Math.asin(dt(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(-_,f),this._z=Math.atan2(-s,u)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-dt(_,-1,1)),Math.abs(_)<.9999999?(this._x=Math.atan2(p,f),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-s,u));break;case"YZX":this._z=Math.asin(dt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-c,u),this._y=Math.atan2(-_,r)):(this._x=0,this._y=Math.atan2(o,f));break;case"XZY":this._z=Math.asin(-dt(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(p,u),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-c,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return fo.makeRotationFromQuaternion(e),this.setFromRotationMatrix(fo,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return ho.setFromEuler(this),this.setFromQuaternion(ho,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ha.DEFAULT_ORDER="XYZ";class go{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let uu=0;const bo=new C,Kn=new Sn,$t=new Ze,za=new C,va=new C,cu=new C,du=new Sn,yo=new C(1,0,0),vo=new C(0,1,0),Ao=new C(0,0,1),_u={type:"added"},pu={type:"removed"};class lt extends vn{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:uu++}),this.uuid=Zt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=lt.DEFAULT_UP.clone();const e=new C,t=new Ha,n=new Sn,i=new C(1,1,1);function r(){n.setFromEuler(t,!1)}function s(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(s),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Ze},normalMatrix:{value:new Ne}}),this.matrix=new Ze,this.matrixWorld=new Ze,this.matrixAutoUpdate=lt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=lt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new go,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Kn.setFromAxisAngle(e,t),this.quaternion.multiply(Kn),this}rotateOnWorldAxis(e,t){return Kn.setFromAxisAngle(e,t),this.quaternion.premultiply(Kn),this}rotateX(e){return this.rotateOnAxis(yo,e)}rotateY(e){return this.rotateOnAxis(vo,e)}rotateZ(e){return this.rotateOnAxis(Ao,e)}translateOnAxis(e,t){return bo.copy(e).applyQuaternion(this.quaternion),this.position.add(bo.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(yo,e)}translateY(e){return this.translateOnAxis(vo,e)}translateZ(e){return this.translateOnAxis(Ao,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4($t.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?za.copy(e):za.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),va.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?$t.lookAt(va,za,this.up):$t.lookAt(za,va,this.up),this.quaternion.setFromRotationMatrix($t),i&&($t.extractRotation(i.matrixWorld),Kn.setFromRotationMatrix($t),this.quaternion.premultiply(Kn.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(_u)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(pu)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),$t.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),$t.multiply(e.parent.matrixWorld)),e.applyMatrix4($t),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const s=this.children[n].getObjectByProperty(e,t);if(s!==void 0)return s}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let i=0,r=this.children.length;i<r;i++){const s=this.children[i].getObjectsByProperty(e,t);s.length>0&&(n=n.concat(s))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(va,e,cu),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(va,du,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const r=t[n];(r.matrixWorldAutoUpdate===!0||e===!0)&&r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,s=i.length;r<s;r++){const o=i[r];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let u=0,c=l.length;u<c;u++){const _=l[u];r(e.shapes,_)}else r(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,u=this.material.length;l<u;l++)o.push(r(e.materials,this.material[l]));i.material=o}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];i.animations.push(r(e.animations,l))}}if(t){const o=s(e.geometries),l=s(e.materials),u=s(e.textures),c=s(e.images),_=s(e.shapes),p=s(e.skeletons),f=s(e.animations),h=s(e.nodes);o.length>0&&(n.geometries=o),l.length>0&&(n.materials=l),u.length>0&&(n.textures=u),c.length>0&&(n.images=c),_.length>0&&(n.shapes=_),p.length>0&&(n.skeletons=p),f.length>0&&(n.animations=f),h.length>0&&(n.nodes=h)}return n.object=i,n;function s(o){const l=[];for(const u in o){const c=o[u];delete c.metadata,l.push(c)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}lt.DEFAULT_UP=new C(0,1,0),lt.DEFAULT_MATRIX_AUTO_UPDATE=!0,lt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Bt=new C,Qt=new C,Hi=new C,en=new C,Yn=new C,Zn=new C,So=new C,zi=new C,Vi=new C,Wi=new C;let Va=!1;class Pt{constructor(e=new C,t=new C,n=new C){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Bt.subVectors(e,t),i.cross(Bt);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){Bt.subVectors(i,t),Qt.subVectors(n,t),Hi.subVectors(e,t);const s=Bt.dot(Bt),o=Bt.dot(Qt),l=Bt.dot(Hi),u=Qt.dot(Qt),c=Qt.dot(Hi),_=s*u-o*o;if(_===0)return r.set(-2,-1,-1);const p=1/_,f=(u*l-o*c)*p,h=(s*c-o*l)*p;return r.set(1-f-h,h,f)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,en),en.x>=0&&en.y>=0&&en.x+en.y<=1}static getUV(e,t,n,i,r,s,o,l){return Va===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Va=!0),this.getInterpolation(e,t,n,i,r,s,o,l)}static getInterpolation(e,t,n,i,r,s,o,l){return this.getBarycoord(e,t,n,i,en),l.setScalar(0),l.addScaledVector(r,en.x),l.addScaledVector(s,en.y),l.addScaledVector(o,en.z),l}static isFrontFacing(e,t,n,i){return Bt.subVectors(n,t),Qt.subVectors(e,t),Bt.cross(Qt).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Bt.subVectors(this.c,this.b),Qt.subVectors(this.a,this.b),Bt.cross(Qt).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Pt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Pt.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return Va===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Va=!0),Pt.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}getInterpolation(e,t,n,i,r){return Pt.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return Pt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Pt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let s,o;Yn.subVectors(i,n),Zn.subVectors(r,n),zi.subVectors(e,n);const l=Yn.dot(zi),u=Zn.dot(zi);if(l<=0&&u<=0)return t.copy(n);Vi.subVectors(e,i);const c=Yn.dot(Vi),_=Zn.dot(Vi);if(c>=0&&_<=c)return t.copy(i);const p=l*_-c*u;if(p<=0&&l>=0&&c<=0)return s=l/(l-c),t.copy(n).addScaledVector(Yn,s);Wi.subVectors(e,r);const f=Yn.dot(Wi),h=Zn.dot(Wi);if(h>=0&&f<=h)return t.copy(r);const y=f*u-l*h;if(y<=0&&u>=0&&h<=0)return o=u/(u-h),t.copy(n).addScaledVector(Zn,o);const m=c*h-f*_;if(m<=0&&_-c>=0&&f-h>=0)return So.subVectors(r,i),o=(_-c)/(_-c+(f-h)),t.copy(i).addScaledVector(So,o);const d=1/(m+y+p);return s=y*d,o=p*d,t.copy(n).addScaledVector(Yn,s).addScaledVector(Zn,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let mu=0;class xn extends vn{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:mu++}),this.uuid=Zt(),this.name="",this.type="Material",this.blending=Dn,this.side=an,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Mr,this.blendDst=Er,this.blendEquation=Un,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=fi,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=xl,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ti,this.stencilZFail=Ti,this.stencilZPass=Ti,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Dn&&(n.blending=this.blending),this.side!==an&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=this.alphaHash),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(n.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const s=[];for(const o in r){const l=r[o];delete l.metadata,s.push(l)}return s}if(t){const r=i(e.textures),s=i(e.images);r.length>0&&(n.textures=r),s.length>0&&(n.images=s)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const Mo={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ft={h:0,s:0,l:0},Wa={h:0,s:0,l:0};function Xi(a,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?a+(e-a)*6*t:t<1/2?e:t<2/3?a+(e-a)*6*(2/3-t):a}class Ge{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Ke){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,It.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=It.workingColorSpace){return this.r=e,this.g=t,this.b=n,It.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=It.workingColorSpace){if(e=Ci(e,1),t=dt(t,0,1),n=dt(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,s=2*n-r;this.r=Xi(s,r,e+1/3),this.g=Xi(s,r,e),this.b=Xi(s,r,e-1/3)}return It.toWorkingColorSpace(this,i),this}setStyle(e,t=Ke){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const s=i[1],o=i[2];switch(s){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],s=r.length;if(s===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(s===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Ke){const n=Mo[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Fn(e.r),this.g=Fn(e.g),this.b=Fn(e.b),this}copyLinearToSRGB(e){return this.r=ki(e.r),this.g=ki(e.g),this.b=ki(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Ke){return It.fromWorkingColorSpace(_t.copy(this),e),Math.round(dt(_t.r*255,0,255))*65536+Math.round(dt(_t.g*255,0,255))*256+Math.round(dt(_t.b*255,0,255))}getHexString(e=Ke){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=It.workingColorSpace){It.fromWorkingColorSpace(_t.copy(this),t);const n=_t.r,i=_t.g,r=_t.b,s=Math.max(n,i,r),o=Math.min(n,i,r);let l,u;const c=(o+s)/2;if(o===s)l=0,u=0;else{const _=s-o;switch(u=c<=.5?_/(s+o):_/(2-s-o),s){case n:l=(i-r)/_+(i<r?6:0);break;case i:l=(r-n)/_+2;break;case r:l=(n-i)/_+4;break}l/=6}return e.h=l,e.s=u,e.l=c,e}getRGB(e,t=It.workingColorSpace){return It.fromWorkingColorSpace(_t.copy(this),t),e.r=_t.r,e.g=_t.g,e.b=_t.b,e}getStyle(e=Ke){It.fromWorkingColorSpace(_t.copy(this),e);const t=_t.r,n=_t.g,i=_t.b;return e!==Ke?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Ft),Ft.h+=e,Ft.s+=t,Ft.l+=n,this.setHSL(Ft.h,Ft.s,Ft.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Ft),e.getHSL(Wa);const n=ma(Ft.h,Wa.h,t),i=ma(Ft.s,Wa.s,t),r=ma(Ft.l,Wa.l,t);return this.setHSL(n,i,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*i,this.g=r[1]*t+r[4]*n+r[7]*i,this.b=r[2]*t+r[5]*n+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const _t=new Ge;Ge.NAMES=Mo;class Ki extends xn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ge(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=xr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const $e=new C,Xa=new ve;class Mt{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Li,this.updateRange={offset:0,count:-1},this.gpuType=un,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Xa.fromBufferAttribute(this,t),Xa.applyMatrix3(e),this.setXY(t,Xa.x,Xa.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)$e.fromBufferAttribute(this,t),$e.applyMatrix3(e),this.setXYZ(t,$e.x,$e.y,$e.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)$e.fromBufferAttribute(this,t),$e.applyMatrix4(e),this.setXYZ(t,$e.x,$e.y,$e.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)$e.fromBufferAttribute(this,t),$e.applyNormalMatrix(e),this.setXYZ(t,$e.x,$e.y,$e.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)$e.fromBufferAttribute(this,t),$e.transformDirection(e),this.setXYZ(t,$e.x,$e.y,$e.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=zt(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ze(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=zt(t,this.array)),t}setX(e,t){return this.normalized&&(t=ze(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=zt(t,this.array)),t}setY(e,t){return this.normalized&&(t=ze(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=zt(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ze(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=zt(t,this.array)),t}setW(e,t){return this.normalized&&(t=ze(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array),i=ze(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array),i=ze(i,this.array),r=ze(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Li&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}class Eo extends Mt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class xo extends Mt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Gt extends Mt{constructor(e,t,n){super(new Float32Array(e),t,n)}}let fu=0;const Nt=new Ze,Yi=new lt,qn=new C,Et=new ha,Aa=new ha,ot=new C;class xt extends vn{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:fu++}),this.uuid=Zt(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(lo(e)?xo:Eo)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new Ne().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Nt.makeRotationFromQuaternion(e),this.applyMatrix4(Nt),this}rotateX(e){return Nt.makeRotationX(e),this.applyMatrix4(Nt),this}rotateY(e){return Nt.makeRotationY(e),this.applyMatrix4(Nt),this}rotateZ(e){return Nt.makeRotationZ(e),this.applyMatrix4(Nt),this}translate(e,t,n){return Nt.makeTranslation(e,t,n),this.applyMatrix4(Nt),this}scale(e,t,n){return Nt.makeScale(e,t,n),this.applyMatrix4(Nt),this}lookAt(e){return Yi.lookAt(e),Yi.updateMatrix(),this.applyMatrix4(Yi.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(qn).negate(),this.translate(qn.x,qn.y,qn.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Gt(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ha);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new C(-1/0,-1/0,-1/0),new C(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];Et.setFromBufferAttribute(r),this.morphTargetsRelative?(ot.addVectors(this.boundingBox.min,Et.min),this.boundingBox.expandByPoint(ot),ot.addVectors(this.boundingBox.max,Et.max),this.boundingBox.expandByPoint(ot)):(this.boundingBox.expandByPoint(Et.min),this.boundingBox.expandByPoint(Et.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new ya);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new C,1/0);return}if(e){const n=this.boundingSphere.center;if(Et.setFromBufferAttribute(e),t)for(let r=0,s=t.length;r<s;r++){const o=t[r];Aa.setFromBufferAttribute(o),this.morphTargetsRelative?(ot.addVectors(Et.min,Aa.min),Et.expandByPoint(ot),ot.addVectors(Et.max,Aa.max),Et.expandByPoint(ot)):(Et.expandByPoint(Aa.min),Et.expandByPoint(Aa.max))}Et.getCenter(n);let i=0;for(let r=0,s=e.count;r<s;r++)ot.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(ot));if(t)for(let r=0,s=t.length;r<s;r++){const o=t[r],l=this.morphTargetsRelative;for(let u=0,c=o.count;u<c;u++)ot.fromBufferAttribute(o,u),l&&(qn.fromBufferAttribute(e,u),ot.add(qn)),i=Math.max(i,n.distanceToSquared(ot))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,r=t.normal.array,s=t.uv.array,o=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Mt(new Float32Array(4*o),4));const l=this.getAttribute("tangent").array,u=[],c=[];for(let M=0;M<o;M++)u[M]=new C,c[M]=new C;const _=new C,p=new C,f=new C,h=new ve,y=new ve,m=new ve,d=new C,E=new C;function b(M,q,ie){_.fromArray(i,M*3),p.fromArray(i,q*3),f.fromArray(i,ie*3),h.fromArray(s,M*2),y.fromArray(s,q*2),m.fromArray(s,ie*2),p.sub(_),f.sub(_),y.sub(h),m.sub(h);const F=1/(y.x*m.y-m.x*y.y);isFinite(F)&&(d.copy(p).multiplyScalar(m.y).addScaledVector(f,-y.y).multiplyScalar(F),E.copy(f).multiplyScalar(y.x).addScaledVector(p,-m.x).multiplyScalar(F),u[M].add(d),u[q].add(d),u[ie].add(d),c[M].add(E),c[q].add(E),c[ie].add(E))}let L=this.groups;L.length===0&&(L=[{start:0,count:n.length}]);for(let M=0,q=L.length;M<q;++M){const ie=L[M],F=ie.start,H=ie.count;for(let G=F,Q=F+H;G<Q;G+=3)b(n[G+0],n[G+1],n[G+2])}const x=new C,P=new C,T=new C,W=new C;function v(M){T.fromArray(r,M*3),W.copy(T);const q=u[M];x.copy(q),x.sub(T.multiplyScalar(T.dot(q))).normalize(),P.crossVectors(W,q);const F=P.dot(c[M])<0?-1:1;l[M*4]=x.x,l[M*4+1]=x.y,l[M*4+2]=x.z,l[M*4+3]=F}for(let M=0,q=L.length;M<q;++M){const ie=L[M],F=ie.start,H=ie.count;for(let G=F,Q=F+H;G<Q;G+=3)v(n[G+0]),v(n[G+1]),v(n[G+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Mt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let p=0,f=n.count;p<f;p++)n.setXYZ(p,0,0,0);const i=new C,r=new C,s=new C,o=new C,l=new C,u=new C,c=new C,_=new C;if(e)for(let p=0,f=e.count;p<f;p+=3){const h=e.getX(p+0),y=e.getX(p+1),m=e.getX(p+2);i.fromBufferAttribute(t,h),r.fromBufferAttribute(t,y),s.fromBufferAttribute(t,m),c.subVectors(s,r),_.subVectors(i,r),c.cross(_),o.fromBufferAttribute(n,h),l.fromBufferAttribute(n,y),u.fromBufferAttribute(n,m),o.add(c),l.add(c),u.add(c),n.setXYZ(h,o.x,o.y,o.z),n.setXYZ(y,l.x,l.y,l.z),n.setXYZ(m,u.x,u.y,u.z)}else for(let p=0,f=t.count;p<f;p+=3)i.fromBufferAttribute(t,p+0),r.fromBufferAttribute(t,p+1),s.fromBufferAttribute(t,p+2),c.subVectors(s,r),_.subVectors(i,r),c.cross(_),n.setXYZ(p+0,c.x,c.y,c.z),n.setXYZ(p+1,c.x,c.y,c.z),n.setXYZ(p+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)ot.fromBufferAttribute(e,t),ot.normalize(),e.setXYZ(t,ot.x,ot.y,ot.z)}toNonIndexed(){function e(o,l){const u=o.array,c=o.itemSize,_=o.normalized,p=new u.constructor(l.length*c);let f=0,h=0;for(let y=0,m=l.length;y<m;y++){o.isInterleavedBufferAttribute?f=l[y]*o.data.stride+o.offset:f=l[y]*c;for(let d=0;d<c;d++)p[h++]=u[f++]}return new Mt(p,c,_)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new xt,n=this.index.array,i=this.attributes;for(const o in i){const l=i[o],u=e(l,n);t.setAttribute(o,u)}const r=this.morphAttributes;for(const o in r){const l=[],u=r[o];for(let c=0,_=u.length;c<_;c++){const p=u[c],f=e(p,n);l.push(f)}t.morphAttributes[o]=l}t.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let o=0,l=s.length;o<l;o++){const u=s[o];t.addGroup(u.start,u.count,u.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const u in l)l[u]!==void 0&&(e[u]=l[u]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const u=n[l];e.data.attributes[l]=u.toJSON(e.data)}const i={};let r=!1;for(const l in this.morphAttributes){const u=this.morphAttributes[l],c=[];for(let _=0,p=u.length;_<p;_++){const f=u[_];c.push(f.toJSON(e.data))}c.length>0&&(i[l]=c,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const u in i){const c=i[u];this.setAttribute(u,c.clone(t))}const r=e.morphAttributes;for(const u in r){const c=[],_=r[u];for(let p=0,f=_.length;p<f;p++)c.push(_[p].clone(t));this.morphAttributes[u]=c}this.morphTargetsRelative=e.morphTargetsRelative;const s=e.groups;for(let u=0,c=s.length;u<c;u++){const _=s[u];this.addGroup(_.start,_.count,_.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const wo=new Ze,wn=new Fa,Ka=new ya,To=new C,jn=new C,Jn=new C,$n=new C,Zi=new C,Ya=new C,Za=new ve,qa=new ve,ja=new ve,Lo=new C,Ro=new C,Co=new C,Ja=new C,$a=new C;class tn extends lt{constructor(e=new xt,t=new Ki){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,s=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const o=this.morphTargetInfluences;if(r&&o){Ya.set(0,0,0);for(let l=0,u=r.length;l<u;l++){const c=o[l],_=r[l];c!==0&&(Zi.fromBufferAttribute(_,e),s?Ya.addScaledVector(Zi,c):Ya.addScaledVector(Zi.sub(t),c))}t.add(Ya)}return t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Ka.copy(n.boundingSphere),Ka.applyMatrix4(r),wn.copy(e.ray).recast(e.near),!(Ka.containsPoint(wn.origin)===!1&&(wn.intersectSphere(Ka,To)===null||wn.origin.distanceToSquared(To)>(e.far-e.near)**2))&&(wo.copy(r).invert(),wn.copy(e.ray).applyMatrix4(wo),!(n.boundingBox!==null&&wn.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,wn)))}_computeIntersections(e,t,n){let i;const r=this.geometry,s=this.material,o=r.index,l=r.attributes.position,u=r.attributes.uv,c=r.attributes.uv1,_=r.attributes.normal,p=r.groups,f=r.drawRange;if(o!==null)if(Array.isArray(s))for(let h=0,y=p.length;h<y;h++){const m=p[h],d=s[m.materialIndex],E=Math.max(m.start,f.start),b=Math.min(o.count,Math.min(m.start+m.count,f.start+f.count));for(let L=E,x=b;L<x;L+=3){const P=o.getX(L),T=o.getX(L+1),W=o.getX(L+2);i=Qa(this,d,e,n,u,c,_,P,T,W),i&&(i.faceIndex=Math.floor(L/3),i.face.materialIndex=m.materialIndex,t.push(i))}}else{const h=Math.max(0,f.start),y=Math.min(o.count,f.start+f.count);for(let m=h,d=y;m<d;m+=3){const E=o.getX(m),b=o.getX(m+1),L=o.getX(m+2);i=Qa(this,s,e,n,u,c,_,E,b,L),i&&(i.faceIndex=Math.floor(m/3),t.push(i))}}else if(l!==void 0)if(Array.isArray(s))for(let h=0,y=p.length;h<y;h++){const m=p[h],d=s[m.materialIndex],E=Math.max(m.start,f.start),b=Math.min(l.count,Math.min(m.start+m.count,f.start+f.count));for(let L=E,x=b;L<x;L+=3){const P=L,T=L+1,W=L+2;i=Qa(this,d,e,n,u,c,_,P,T,W),i&&(i.faceIndex=Math.floor(L/3),i.face.materialIndex=m.materialIndex,t.push(i))}}else{const h=Math.max(0,f.start),y=Math.min(l.count,f.start+f.count);for(let m=h,d=y;m<d;m+=3){const E=m,b=m+1,L=m+2;i=Qa(this,s,e,n,u,c,_,E,b,L),i&&(i.faceIndex=Math.floor(m/3),t.push(i))}}}}function hu(a,e,t,n,i,r,s,o){let l;if(e.side===vt?l=n.intersectTriangle(s,r,i,!0,o):l=n.intersectTriangle(i,r,s,e.side===an,o),l===null)return null;$a.copy(o),$a.applyMatrix4(a.matrixWorld);const u=t.ray.origin.distanceTo($a);return u<t.near||u>t.far?null:{distance:u,point:$a.clone(),object:a}}function Qa(a,e,t,n,i,r,s,o,l,u){a.getVertexPosition(o,jn),a.getVertexPosition(l,Jn),a.getVertexPosition(u,$n);const c=hu(a,e,t,n,jn,Jn,$n,Ja);if(c){i&&(Za.fromBufferAttribute(i,o),qa.fromBufferAttribute(i,l),ja.fromBufferAttribute(i,u),c.uv=Pt.getInterpolation(Ja,jn,Jn,$n,Za,qa,ja,new ve)),r&&(Za.fromBufferAttribute(r,o),qa.fromBufferAttribute(r,l),ja.fromBufferAttribute(r,u),c.uv1=Pt.getInterpolation(Ja,jn,Jn,$n,Za,qa,ja,new ve),c.uv2=c.uv1),s&&(Lo.fromBufferAttribute(s,o),Ro.fromBufferAttribute(s,l),Co.fromBufferAttribute(s,u),c.normal=Pt.getInterpolation(Ja,jn,Jn,$n,Lo,Ro,Co,new C),c.normal.dot(n.direction)>0&&c.normal.multiplyScalar(-1));const _={a:o,b:l,c:u,normal:new C,materialIndex:0};Pt.getNormal(jn,Jn,$n,_.normal),c.face=_}return c}class Sa extends xt{constructor(e=1,t=1,n=1,i=1,r=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:s};const o=this;i=Math.floor(i),r=Math.floor(r),s=Math.floor(s);const l=[],u=[],c=[],_=[];let p=0,f=0;h("z","y","x",-1,-1,n,t,e,s,r,0),h("z","y","x",1,-1,n,t,-e,s,r,1),h("x","z","y",1,1,e,n,t,i,s,2),h("x","z","y",1,-1,e,n,-t,i,s,3),h("x","y","z",1,-1,e,t,n,i,r,4),h("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(l),this.setAttribute("position",new Gt(u,3)),this.setAttribute("normal",new Gt(c,3)),this.setAttribute("uv",new Gt(_,2));function h(y,m,d,E,b,L,x,P,T,W,v){const M=L/T,q=x/W,ie=L/2,F=x/2,H=P/2,G=T+1,Q=W+1;let X=0,Y=0;const j=new C;for(let J=0;J<Q;J++){const U=J*q-F;for(let K=0;K<G;K++){const de=K*M-ie;j[y]=de*E,j[m]=U*b,j[d]=H,u.push(j.x,j.y,j.z),j[y]=0,j[m]=0,j[d]=P>0?1:-1,c.push(j.x,j.y,j.z),_.push(K/T),_.push(1-J/W),X+=1}}for(let J=0;J<W;J++)for(let U=0;U<T;U++){const K=p+U+G*J,de=p+U+G*(J+1),_e=p+(U+1)+G*(J+1),pe=p+(U+1)+G*J;l.push(K,de,pe),l.push(de,_e,pe),Y+=6}o.addGroup(f,Y,v),f+=Y,p+=X}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Sa(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Qn(a){const e={};for(const t in a){e[t]={};for(const n in a[t]){const i=a[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function ht(a){const e={};for(let t=0;t<a.length;t++){const n=Qn(a[t]);for(const i in n)e[i]=n[i]}return e}function gu(a){const e=[];for(let t=0;t<a.length;t++)e.push(a[t].clone());return e}function Po(a){return a.getRenderTarget()===null?a.outputColorSpace:Ht}const bu={clone:Qn,merge:ht};var yu=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,vu=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Tn extends xn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=yu,this.fragmentShader=vu,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Qn(e.uniforms),this.uniformsGroups=gu(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const s=this.uniforms[i].value;s&&s.isTexture?t.uniforms[i]={type:"t",value:s.toJSON(e).uuid}:s&&s.isColor?t.uniforms[i]={type:"c",value:s.getHex()}:s&&s.isVector2?t.uniforms[i]={type:"v2",value:s.toArray()}:s&&s.isVector3?t.uniforms[i]={type:"v3",value:s.toArray()}:s&&s.isVector4?t.uniforms[i]={type:"v4",value:s.toArray()}:s&&s.isMatrix3?t.uniforms[i]={type:"m3",value:s.toArray()}:s&&s.isMatrix4?t.uniforms[i]={type:"m4",value:s.toArray()}:t.uniforms[i]={value:s}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class No extends lt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Ze,this.projectionMatrix=new Ze,this.projectionMatrixInverse=new Ze,this.coordinateSystem=Yt}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class wt extends No{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=pa*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(_a*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return pa*2*Math.atan(Math.tan(_a*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,s){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(_a*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const s=this.view;if(this.view!==null&&this.view.enabled){const l=s.fullWidth,u=s.fullHeight;r+=s.offsetX*i/l,t-=s.offsetY*n/u,i*=s.width/l,n*=s.height/u}const o=this.filmOffset;o!==0&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const ea=-90,ta=1;class Au extends lt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null;const i=new wt(ea,ta,e,t);i.layers=this.layers,this.add(i);const r=new wt(ea,ta,e,t);r.layers=this.layers,this.add(r);const s=new wt(ea,ta,e,t);s.layers=this.layers,this.add(s);const o=new wt(ea,ta,e,t);o.layers=this.layers,this.add(o);const l=new wt(ea,ta,e,t);l.layers=this.layers,this.add(l);const u=new wt(ea,ta,e,t);u.layers=this.layers,this.add(u)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,r,s,o,l]=t;for(const u of t)this.remove(u);if(e===Yt)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),s.up.set(0,0,1),s.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===Na)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),s.up.set(0,0,-1),s.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const u of t)this.add(u),u.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[i,r,s,o,l,u]=this.children,c=e.getRenderTarget(),_=e.xr.enabled;e.xr.enabled=!1;const p=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,s),e.setRenderTarget(n,3),e.render(t,o),e.setRenderTarget(n,4),e.render(t,l),n.texture.generateMipmaps=p,e.setRenderTarget(n,5),e.render(t,u),e.setRenderTarget(c),e.xr.enabled=_,n.texture.needsPMREMUpdate=!0}}class ko extends At{constructor(e,t,n,i,r,s,o,l,u,c){e=e!==void 0?e:[],t=t!==void 0?t:In,super(e,t,n,i,r,s,o,l,u,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Su extends An{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];t.encoding!==void 0&&(fa("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===bn?Ke:yn),this.texture=new ko(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Ct}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Sa(5,5,5),r=new Tn({name:"CubemapFromEquirect",uniforms:Qn(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:vt,blending:rn});r.uniforms.tEquirect.value=t;const s=new tn(i,r),o=t.minFilter;return t.minFilter===ca&&(t.minFilter=Ct),new Au(1,10,this).update(e,s),t.minFilter=o,s.geometry.dispose(),s.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let s=0;s<6;s++)e.setRenderTarget(this,s),e.clear(t,n,i);e.setRenderTarget(r)}}const qi=new C,Mu=new C,Eu=new Ne;class mn{constructor(e=new C(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=qi.subVectors(n,t).cross(Mu.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(qi),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||Eu.getNormalMatrix(e),i=this.coplanarPoint(qi).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Ln=new ya,ei=new C;class ji{constructor(e=new mn,t=new mn,n=new mn,i=new mn,r=new mn,s=new mn){this.planes=[e,t,n,i,r,s]}set(e,t,n,i,r,s){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(r),o[5].copy(s),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Yt){const n=this.planes,i=e.elements,r=i[0],s=i[1],o=i[2],l=i[3],u=i[4],c=i[5],_=i[6],p=i[7],f=i[8],h=i[9],y=i[10],m=i[11],d=i[12],E=i[13],b=i[14],L=i[15];if(n[0].setComponents(l-r,p-u,m-f,L-d).normalize(),n[1].setComponents(l+r,p+u,m+f,L+d).normalize(),n[2].setComponents(l+s,p+c,m+h,L+E).normalize(),n[3].setComponents(l-s,p-c,m-h,L-E).normalize(),n[4].setComponents(l-o,p-_,m-y,L-b).normalize(),t===Yt)n[5].setComponents(l+o,p+_,m+y,L+b).normalize();else if(t===Na)n[5].setComponents(o,_,y,b).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Ln.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Ln.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Ln)}intersectsSprite(e){return Ln.center.set(0,0,0),Ln.radius=.7071067811865476,Ln.applyMatrix4(e.matrixWorld),this.intersectsSphere(Ln)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(ei.x=i.normal.x>0?e.max.x:e.min.x,ei.y=i.normal.y>0?e.max.y:e.min.y,ei.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(ei)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Do(){let a=null,e=!1,t=null,n=null;function i(r,s){t(r,s),n=a.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=a.requestAnimationFrame(i),e=!0)},stop:function(){a.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){a=r}}}function xu(a,e){const t=e.isWebGL2,n=new WeakMap;function i(u,c){const _=u.array,p=u.usage,f=a.createBuffer();a.bindBuffer(c,f),a.bufferData(c,_,p),u.onUploadCallback();let h;if(_ instanceof Float32Array)h=a.FLOAT;else if(_ instanceof Uint16Array)if(u.isFloat16BufferAttribute)if(t)h=a.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else h=a.UNSIGNED_SHORT;else if(_ instanceof Int16Array)h=a.SHORT;else if(_ instanceof Uint32Array)h=a.UNSIGNED_INT;else if(_ instanceof Int32Array)h=a.INT;else if(_ instanceof Int8Array)h=a.BYTE;else if(_ instanceof Uint8Array)h=a.UNSIGNED_BYTE;else if(_ instanceof Uint8ClampedArray)h=a.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+_);return{buffer:f,type:h,bytesPerElement:_.BYTES_PER_ELEMENT,version:u.version}}function r(u,c,_){const p=c.array,f=c.updateRange;a.bindBuffer(_,u),f.count===-1?a.bufferSubData(_,0,p):(t?a.bufferSubData(_,f.offset*p.BYTES_PER_ELEMENT,p,f.offset,f.count):a.bufferSubData(_,f.offset*p.BYTES_PER_ELEMENT,p.subarray(f.offset,f.offset+f.count)),f.count=-1),c.onUploadCallback()}function s(u){return u.isInterleavedBufferAttribute&&(u=u.data),n.get(u)}function o(u){u.isInterleavedBufferAttribute&&(u=u.data);const c=n.get(u);c&&(a.deleteBuffer(c.buffer),n.delete(u))}function l(u,c){if(u.isGLBufferAttribute){const p=n.get(u);(!p||p.version<u.version)&&n.set(u,{buffer:u.buffer,type:u.type,bytesPerElement:u.elementSize,version:u.version});return}u.isInterleavedBufferAttribute&&(u=u.data);const _=n.get(u);_===void 0?n.set(u,i(u,c)):_.version<u.version&&(r(_.buffer,u,c),_.version=u.version)}return{get:s,remove:o,update:l}}class Ji extends xt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,s=t/2,o=Math.floor(n),l=Math.floor(i),u=o+1,c=l+1,_=e/o,p=t/l,f=[],h=[],y=[],m=[];for(let d=0;d<c;d++){const E=d*p-s;for(let b=0;b<u;b++){const L=b*_-r;h.push(L,-E,0),y.push(0,0,1),m.push(b/o),m.push(1-d/l)}}for(let d=0;d<l;d++)for(let E=0;E<o;E++){const b=E+u*d,L=E+u*(d+1),x=E+1+u*(d+1),P=E+1+u*d;f.push(b,L,P),f.push(L,x,P)}this.setIndex(f),this.setAttribute("position",new Gt(h,3)),this.setAttribute("normal",new Gt(y,3)),this.setAttribute("uv",new Gt(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ji(e.width,e.height,e.widthSegments,e.heightSegments)}}var wu=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,Tu=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,Lu=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,Ru=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Cu=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Pu=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Nu=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,ku=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Du=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,Uu=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Iu=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,Ou=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Bu=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Fu=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Gu=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Hu=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,zu=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Vu=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Wu=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Xu=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Ku=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Yu=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,Zu=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,qu=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,ju=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Ju=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,$u=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Qu=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,ec="gl_FragColor = linearToOutputTexel( gl_FragColor );",tc=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,nc=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,ac=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,ic=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,rc=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,oc=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,sc=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,lc=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,uc=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,cc=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,dc=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,_c=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,pc=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,mc=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,fc=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,hc=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,gc=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,bc=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,yc=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,vc=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Ac=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,Sc=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,Mc=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Ec=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,xc=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,wc=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,Tc=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Lc=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Rc=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Cc=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Pc=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Nc=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,kc=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Dc=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Uc=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Ic=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Oc=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Bc=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Fc=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Gc=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Hc=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,zc=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Vc=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Wc=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Xc=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Kc=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,Yc=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Zc=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,qc=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,jc=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Jc=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,$c=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,Qc=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,ed=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,td=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,nd=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,ad=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,id=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,rd=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,od=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,sd=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,ld=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,ud=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,cd=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,dd=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,_d=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,pd=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,md=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,fd=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,hd=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,gd=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,bd=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,yd=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,vd=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Ad=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,Sd=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Re={alphahash_fragment:wu,alphahash_pars_fragment:Tu,alphamap_fragment:Lu,alphamap_pars_fragment:Ru,alphatest_fragment:Cu,alphatest_pars_fragment:Pu,aomap_fragment:Nu,aomap_pars_fragment:ku,begin_vertex:Du,beginnormal_vertex:Uu,bsdfs:Iu,iridescence_fragment:Ou,bumpmap_pars_fragment:Bu,clipping_planes_fragment:Fu,clipping_planes_pars_fragment:Gu,clipping_planes_pars_vertex:Hu,clipping_planes_vertex:zu,color_fragment:Vu,color_pars_fragment:Wu,color_pars_vertex:Xu,color_vertex:Ku,common:Yu,cube_uv_reflection_fragment:Zu,defaultnormal_vertex:qu,displacementmap_pars_vertex:ju,displacementmap_vertex:Ju,emissivemap_fragment:$u,emissivemap_pars_fragment:Qu,colorspace_fragment:ec,colorspace_pars_fragment:tc,envmap_fragment:nc,envmap_common_pars_fragment:ac,envmap_pars_fragment:ic,envmap_pars_vertex:rc,envmap_physical_pars_fragment:gc,envmap_vertex:oc,fog_vertex:sc,fog_pars_vertex:lc,fog_fragment:uc,fog_pars_fragment:cc,gradientmap_pars_fragment:dc,lightmap_fragment:_c,lightmap_pars_fragment:pc,lights_lambert_fragment:mc,lights_lambert_pars_fragment:fc,lights_pars_begin:hc,lights_toon_fragment:bc,lights_toon_pars_fragment:yc,lights_phong_fragment:vc,lights_phong_pars_fragment:Ac,lights_physical_fragment:Sc,lights_physical_pars_fragment:Mc,lights_fragment_begin:Ec,lights_fragment_maps:xc,lights_fragment_end:wc,logdepthbuf_fragment:Tc,logdepthbuf_pars_fragment:Lc,logdepthbuf_pars_vertex:Rc,logdepthbuf_vertex:Cc,map_fragment:Pc,map_pars_fragment:Nc,map_particle_fragment:kc,map_particle_pars_fragment:Dc,metalnessmap_fragment:Uc,metalnessmap_pars_fragment:Ic,morphcolor_vertex:Oc,morphnormal_vertex:Bc,morphtarget_pars_vertex:Fc,morphtarget_vertex:Gc,normal_fragment_begin:Hc,normal_fragment_maps:zc,normal_pars_fragment:Vc,normal_pars_vertex:Wc,normal_vertex:Xc,normalmap_pars_fragment:Kc,clearcoat_normal_fragment_begin:Yc,clearcoat_normal_fragment_maps:Zc,clearcoat_pars_fragment:qc,iridescence_pars_fragment:jc,opaque_fragment:Jc,packing:$c,premultiplied_alpha_fragment:Qc,project_vertex:ed,dithering_fragment:td,dithering_pars_fragment:nd,roughnessmap_fragment:ad,roughnessmap_pars_fragment:id,shadowmap_pars_fragment:rd,shadowmap_pars_vertex:od,shadowmap_vertex:sd,shadowmask_pars_fragment:ld,skinbase_vertex:ud,skinning_pars_vertex:cd,skinning_vertex:dd,skinnormal_vertex:_d,specularmap_fragment:pd,specularmap_pars_fragment:md,tonemapping_fragment:fd,tonemapping_pars_fragment:hd,transmission_fragment:gd,transmission_pars_fragment:bd,uv_pars_fragment:yd,uv_pars_vertex:vd,uv_vertex:Ad,worldpos_vertex:Sd,background_vert:`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,background_frag:`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,backgroundCube_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,backgroundCube_frag:`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,cube_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,cube_frag:`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,depth_vert:`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,depth_frag:`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,distanceRGBA_vert:`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,distanceRGBA_frag:`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,equirect_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,equirect_frag:`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,linedashed_vert:`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,linedashed_frag:`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,meshbasic_vert:`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,meshbasic_frag:`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshlambert_vert:`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshlambert_frag:`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshmatcap_vert:`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,meshmatcap_frag:`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshnormal_vert:`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,meshnormal_frag:`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,meshphong_vert:`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshphong_frag:`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshphysical_vert:`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,meshphysical_frag:`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshtoon_vert:`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshtoon_frag:`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,points_vert:`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,points_frag:`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,shadow_vert:`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,shadow_frag:`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,sprite_vert:`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,sprite_frag:`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`},se={common:{diffuse:{value:new Ge(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Ne},alphaMap:{value:null},alphaMapTransform:{value:new Ne},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Ne}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Ne}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Ne}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Ne},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Ne},normalScale:{value:new ve(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Ne},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Ne}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Ne}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Ne}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ge(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ge(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Ne},alphaTest:{value:0},uvTransform:{value:new Ne}},sprite:{diffuse:{value:new Ge(16777215)},opacity:{value:1},center:{value:new ve(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Ne},alphaMap:{value:null},alphaMapTransform:{value:new Ne},alphaTest:{value:0}}},Vt={basic:{uniforms:ht([se.common,se.specularmap,se.envmap,se.aomap,se.lightmap,se.fog]),vertexShader:Re.meshbasic_vert,fragmentShader:Re.meshbasic_frag},lambert:{uniforms:ht([se.common,se.specularmap,se.envmap,se.aomap,se.lightmap,se.emissivemap,se.bumpmap,se.normalmap,se.displacementmap,se.fog,se.lights,{emissive:{value:new Ge(0)}}]),vertexShader:Re.meshlambert_vert,fragmentShader:Re.meshlambert_frag},phong:{uniforms:ht([se.common,se.specularmap,se.envmap,se.aomap,se.lightmap,se.emissivemap,se.bumpmap,se.normalmap,se.displacementmap,se.fog,se.lights,{emissive:{value:new Ge(0)},specular:{value:new Ge(1118481)},shininess:{value:30}}]),vertexShader:Re.meshphong_vert,fragmentShader:Re.meshphong_frag},standard:{uniforms:ht([se.common,se.envmap,se.aomap,se.lightmap,se.emissivemap,se.bumpmap,se.normalmap,se.displacementmap,se.roughnessmap,se.metalnessmap,se.fog,se.lights,{emissive:{value:new Ge(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Re.meshphysical_vert,fragmentShader:Re.meshphysical_frag},toon:{uniforms:ht([se.common,se.aomap,se.lightmap,se.emissivemap,se.bumpmap,se.normalmap,se.displacementmap,se.gradientmap,se.fog,se.lights,{emissive:{value:new Ge(0)}}]),vertexShader:Re.meshtoon_vert,fragmentShader:Re.meshtoon_frag},matcap:{uniforms:ht([se.common,se.bumpmap,se.normalmap,se.displacementmap,se.fog,{matcap:{value:null}}]),vertexShader:Re.meshmatcap_vert,fragmentShader:Re.meshmatcap_frag},points:{uniforms:ht([se.points,se.fog]),vertexShader:Re.points_vert,fragmentShader:Re.points_frag},dashed:{uniforms:ht([se.common,se.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Re.linedashed_vert,fragmentShader:Re.linedashed_frag},depth:{uniforms:ht([se.common,se.displacementmap]),vertexShader:Re.depth_vert,fragmentShader:Re.depth_frag},normal:{uniforms:ht([se.common,se.bumpmap,se.normalmap,se.displacementmap,{opacity:{value:1}}]),vertexShader:Re.meshnormal_vert,fragmentShader:Re.meshnormal_frag},sprite:{uniforms:ht([se.sprite,se.fog]),vertexShader:Re.sprite_vert,fragmentShader:Re.sprite_frag},background:{uniforms:{uvTransform:{value:new Ne},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Re.background_vert,fragmentShader:Re.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:Re.backgroundCube_vert,fragmentShader:Re.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Re.cube_vert,fragmentShader:Re.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Re.equirect_vert,fragmentShader:Re.equirect_frag},distanceRGBA:{uniforms:ht([se.common,se.displacementmap,{referencePosition:{value:new C},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Re.distanceRGBA_vert,fragmentShader:Re.distanceRGBA_frag},shadow:{uniforms:ht([se.lights,se.fog,{color:{value:new Ge(0)},opacity:{value:1}}]),vertexShader:Re.shadow_vert,fragmentShader:Re.shadow_frag}};Vt.physical={uniforms:ht([Vt.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Ne},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Ne},clearcoatNormalScale:{value:new ve(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Ne},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Ne},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Ne},sheen:{value:0},sheenColor:{value:new Ge(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Ne},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Ne},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Ne},transmissionSamplerSize:{value:new ve},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Ne},attenuationDistance:{value:0},attenuationColor:{value:new Ge(0)},specularColor:{value:new Ge(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Ne},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Ne},anisotropyVector:{value:new ve},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Ne}}]),vertexShader:Re.meshphysical_vert,fragmentShader:Re.meshphysical_frag};const ti={r:0,b:0,g:0};function Md(a,e,t,n,i,r,s){const o=new Ge(0);let l=r===!0?0:1,u,c,_=null,p=0,f=null;function h(m,d){let E=!1,b=d.isScene===!0?d.background:null;b&&b.isTexture&&(b=(d.backgroundBlurriness>0?t:e).get(b)),b===null?y(o,l):b&&b.isColor&&(y(b,1),E=!0);const L=a.xr.getEnvironmentBlendMode();L==="additive"?n.buffers.color.setClear(0,0,0,1,s):L==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,s),(a.autoClear||E)&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil),b&&(b.isCubeTexture||b.mapping===Ca)?(c===void 0&&(c=new tn(new Sa(1,1,1),new Tn({name:"BackgroundCubeMaterial",uniforms:Qn(Vt.backgroundCube.uniforms),vertexShader:Vt.backgroundCube.vertexShader,fragmentShader:Vt.backgroundCube.fragmentShader,side:vt,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(x,P,T){this.matrixWorld.copyPosition(T.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(c)),c.material.uniforms.envMap.value=b,c.material.uniforms.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,c.material.uniforms.backgroundBlurriness.value=d.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=d.backgroundIntensity,c.material.toneMapped=b.colorSpace!==Ke,(_!==b||p!==b.version||f!==a.toneMapping)&&(c.material.needsUpdate=!0,_=b,p=b.version,f=a.toneMapping),c.layers.enableAll(),m.unshift(c,c.geometry,c.material,0,0,null)):b&&b.isTexture&&(u===void 0&&(u=new tn(new Ji(2,2),new Tn({name:"BackgroundMaterial",uniforms:Qn(Vt.background.uniforms),vertexShader:Vt.background.vertexShader,fragmentShader:Vt.background.fragmentShader,side:an,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),Object.defineProperty(u.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(u)),u.material.uniforms.t2D.value=b,u.material.uniforms.backgroundIntensity.value=d.backgroundIntensity,u.material.toneMapped=b.colorSpace!==Ke,b.matrixAutoUpdate===!0&&b.updateMatrix(),u.material.uniforms.uvTransform.value.copy(b.matrix),(_!==b||p!==b.version||f!==a.toneMapping)&&(u.material.needsUpdate=!0,_=b,p=b.version,f=a.toneMapping),u.layers.enableAll(),m.unshift(u,u.geometry,u.material,0,0,null))}function y(m,d){m.getRGB(ti,Po(a)),n.buffers.color.setClear(ti.r,ti.g,ti.b,d,s)}return{getClearColor:function(){return o},setClearColor:function(m,d=1){o.set(m),l=d,y(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(m){l=m,y(o,l)},render:h}}function Ed(a,e,t,n){const i=a.getParameter(a.MAX_VERTEX_ATTRIBS),r=n.isWebGL2?null:e.get("OES_vertex_array_object"),s=n.isWebGL2||r!==null,o={},l=m(null);let u=l,c=!1;function _(H,G,Q,X,Y){let j=!1;if(s){const J=y(X,Q,G);u!==J&&(u=J,f(u.object)),j=d(H,X,Q,Y),j&&E(H,X,Q,Y)}else{const J=G.wireframe===!0;(u.geometry!==X.id||u.program!==Q.id||u.wireframe!==J)&&(u.geometry=X.id,u.program=Q.id,u.wireframe=J,j=!0)}Y!==null&&t.update(Y,a.ELEMENT_ARRAY_BUFFER),(j||c)&&(c=!1,W(H,G,Q,X),Y!==null&&a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,t.get(Y).buffer))}function p(){return n.isWebGL2?a.createVertexArray():r.createVertexArrayOES()}function f(H){return n.isWebGL2?a.bindVertexArray(H):r.bindVertexArrayOES(H)}function h(H){return n.isWebGL2?a.deleteVertexArray(H):r.deleteVertexArrayOES(H)}function y(H,G,Q){const X=Q.wireframe===!0;let Y=o[H.id];Y===void 0&&(Y={},o[H.id]=Y);let j=Y[G.id];j===void 0&&(j={},Y[G.id]=j);let J=j[X];return J===void 0&&(J=m(p()),j[X]=J),J}function m(H){const G=[],Q=[],X=[];for(let Y=0;Y<i;Y++)G[Y]=0,Q[Y]=0,X[Y]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:G,enabledAttributes:Q,attributeDivisors:X,object:H,attributes:{},index:null}}function d(H,G,Q,X){const Y=u.attributes,j=G.attributes;let J=0;const U=Q.getAttributes();for(const K in U)if(U[K].location>=0){const _e=Y[K];let pe=j[K];if(pe===void 0&&(K==="instanceMatrix"&&H.instanceMatrix&&(pe=H.instanceMatrix),K==="instanceColor"&&H.instanceColor&&(pe=H.instanceColor)),_e===void 0||_e.attribute!==pe||pe&&_e.data!==pe.data)return!0;J++}return u.attributesNum!==J||u.index!==X}function E(H,G,Q,X){const Y={},j=G.attributes;let J=0;const U=Q.getAttributes();for(const K in U)if(U[K].location>=0){let _e=j[K];_e===void 0&&(K==="instanceMatrix"&&H.instanceMatrix&&(_e=H.instanceMatrix),K==="instanceColor"&&H.instanceColor&&(_e=H.instanceColor));const pe={};pe.attribute=_e,_e&&_e.data&&(pe.data=_e.data),Y[K]=pe,J++}u.attributes=Y,u.attributesNum=J,u.index=X}function b(){const H=u.newAttributes;for(let G=0,Q=H.length;G<Q;G++)H[G]=0}function L(H){x(H,0)}function x(H,G){const Q=u.newAttributes,X=u.enabledAttributes,Y=u.attributeDivisors;Q[H]=1,X[H]===0&&(a.enableVertexAttribArray(H),X[H]=1),Y[H]!==G&&((n.isWebGL2?a:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](H,G),Y[H]=G)}function P(){const H=u.newAttributes,G=u.enabledAttributes;for(let Q=0,X=G.length;Q<X;Q++)G[Q]!==H[Q]&&(a.disableVertexAttribArray(Q),G[Q]=0)}function T(H,G,Q,X,Y,j,J){J===!0?a.vertexAttribIPointer(H,G,Q,Y,j):a.vertexAttribPointer(H,G,Q,X,Y,j)}function W(H,G,Q,X){if(n.isWebGL2===!1&&(H.isInstancedMesh||X.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;b();const Y=X.attributes,j=Q.getAttributes(),J=G.defaultAttributeValues;for(const U in j){const K=j[U];if(K.location>=0){let de=Y[U];if(de===void 0&&(U==="instanceMatrix"&&H.instanceMatrix&&(de=H.instanceMatrix),U==="instanceColor"&&H.instanceColor&&(de=H.instanceColor)),de!==void 0){const _e=de.normalized,pe=de.itemSize,ye=t.get(de);if(ye===void 0)continue;const xe=ye.buffer,he=ye.type,Be=ye.bytesPerElement,ut=n.isWebGL2===!0&&(he===a.INT||he===a.UNSIGNED_INT||de.gpuType===Lr);if(de.isInterleavedBufferAttribute){const Ce=de.data,k=Ce.stride,it=de.offset;if(Ce.isInstancedInterleavedBuffer){for(let ge=0;ge<K.locationSize;ge++)x(K.location+ge,Ce.meshPerAttribute);H.isInstancedMesh!==!0&&X._maxInstanceCount===void 0&&(X._maxInstanceCount=Ce.meshPerAttribute*Ce.count)}else for(let ge=0;ge<K.locationSize;ge++)L(K.location+ge);a.bindBuffer(a.ARRAY_BUFFER,xe);for(let ge=0;ge<K.locationSize;ge++)T(K.location+ge,pe/K.locationSize,he,_e,k*Be,(it+pe/K.locationSize*ge)*Be,ut)}else{if(de.isInstancedBufferAttribute){for(let Ce=0;Ce<K.locationSize;Ce++)x(K.location+Ce,de.meshPerAttribute);H.isInstancedMesh!==!0&&X._maxInstanceCount===void 0&&(X._maxInstanceCount=de.meshPerAttribute*de.count)}else for(let Ce=0;Ce<K.locationSize;Ce++)L(K.location+Ce);a.bindBuffer(a.ARRAY_BUFFER,xe);for(let Ce=0;Ce<K.locationSize;Ce++)T(K.location+Ce,pe/K.locationSize,he,_e,pe*Be,pe/K.locationSize*Ce*Be,ut)}}else if(J!==void 0){const _e=J[U];if(_e!==void 0)switch(_e.length){case 2:a.vertexAttrib2fv(K.location,_e);break;case 3:a.vertexAttrib3fv(K.location,_e);break;case 4:a.vertexAttrib4fv(K.location,_e);break;default:a.vertexAttrib1fv(K.location,_e)}}}}P()}function v(){ie();for(const H in o){const G=o[H];for(const Q in G){const X=G[Q];for(const Y in X)h(X[Y].object),delete X[Y];delete G[Q]}delete o[H]}}function M(H){if(o[H.id]===void 0)return;const G=o[H.id];for(const Q in G){const X=G[Q];for(const Y in X)h(X[Y].object),delete X[Y];delete G[Q]}delete o[H.id]}function q(H){for(const G in o){const Q=o[G];if(Q[H.id]===void 0)continue;const X=Q[H.id];for(const Y in X)h(X[Y].object),delete X[Y];delete Q[H.id]}}function ie(){F(),c=!0,u!==l&&(u=l,f(u.object))}function F(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:_,reset:ie,resetDefaultState:F,dispose:v,releaseStatesOfGeometry:M,releaseStatesOfProgram:q,initAttributes:b,enableAttribute:L,disableUnusedAttributes:P}}function xd(a,e,t,n){const i=n.isWebGL2;let r;function s(u){r=u}function o(u,c){a.drawArrays(r,u,c),t.update(c,r,1)}function l(u,c,_){if(_===0)return;let p,f;if(i)p=a,f="drawArraysInstanced";else if(p=e.get("ANGLE_instanced_arrays"),f="drawArraysInstancedANGLE",p===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}p[f](r,u,c,_),t.update(c,r,_)}this.setMode=s,this.render=o,this.renderInstances=l}function wd(a,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const T=e.get("EXT_texture_filter_anisotropic");n=a.getParameter(T.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(T){if(T==="highp"){if(a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.HIGH_FLOAT).precision>0&&a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.HIGH_FLOAT).precision>0)return"highp";T="mediump"}return T==="mediump"&&a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.MEDIUM_FLOAT).precision>0&&a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const s=typeof WebGL2RenderingContext<"u"&&a.constructor.name==="WebGL2RenderingContext";let o=t.precision!==void 0?t.precision:"highp";const l=r(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const u=s||e.has("WEBGL_draw_buffers"),c=t.logarithmicDepthBuffer===!0,_=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS),p=a.getParameter(a.MAX_VERTEX_TEXTURE_IMAGE_UNITS),f=a.getParameter(a.MAX_TEXTURE_SIZE),h=a.getParameter(a.MAX_CUBE_MAP_TEXTURE_SIZE),y=a.getParameter(a.MAX_VERTEX_ATTRIBS),m=a.getParameter(a.MAX_VERTEX_UNIFORM_VECTORS),d=a.getParameter(a.MAX_VARYING_VECTORS),E=a.getParameter(a.MAX_FRAGMENT_UNIFORM_VECTORS),b=p>0,L=s||e.has("OES_texture_float"),x=b&&L,P=s?a.getParameter(a.MAX_SAMPLES):0;return{isWebGL2:s,drawBuffers:u,getMaxAnisotropy:i,getMaxPrecision:r,precision:o,logarithmicDepthBuffer:c,maxTextures:_,maxVertexTextures:p,maxTextureSize:f,maxCubemapSize:h,maxAttributes:y,maxVertexUniforms:m,maxVaryings:d,maxFragmentUniforms:E,vertexTextures:b,floatFragmentTextures:L,floatVertexTextures:x,maxSamples:P}}function Td(a){const e=this;let t=null,n=0,i=!1,r=!1;const s=new mn,o=new Ne,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(_,p){const f=_.length!==0||p||n!==0||i;return i=p,n=_.length,f},this.beginShadows=function(){r=!0,c(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(_,p){t=c(_,p,0)},this.setState=function(_,p,f){const h=_.clippingPlanes,y=_.clipIntersection,m=_.clipShadows,d=a.get(_);if(!i||h===null||h.length===0||r&&!m)r?c(null):u();else{const E=r?0:n,b=E*4;let L=d.clippingState||null;l.value=L,L=c(h,p,b,f);for(let x=0;x!==b;++x)L[x]=t[x];d.clippingState=L,this.numIntersection=y?this.numPlanes:0,this.numPlanes+=E}};function u(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function c(_,p,f,h){const y=_!==null?_.length:0;let m=null;if(y!==0){if(m=l.value,h!==!0||m===null){const d=f+y*4,E=p.matrixWorldInverse;o.getNormalMatrix(E),(m===null||m.length<d)&&(m=new Float32Array(d));for(let b=0,L=f;b!==y;++b,L+=4)s.copy(_[b]).applyMatrix4(E,o),s.normal.toArray(m,L),m[L+3]=s.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=y,e.numIntersection=0,m}}function Ld(a){let e=new WeakMap;function t(s,o){return o===hi?s.mapping=In:o===gi&&(s.mapping=On),s}function n(s){if(s&&s.isTexture&&s.isRenderTargetTexture===!1){const o=s.mapping;if(o===hi||o===gi)if(e.has(s)){const l=e.get(s).texture;return t(l,s.mapping)}else{const l=s.image;if(l&&l.height>0){const u=new Su(l.height/2);return u.fromEquirectangularTexture(a,s),e.set(s,u),s.addEventListener("dispose",i),t(u.texture,s.mapping)}else return null}}return s}function i(s){const o=s.target;o.removeEventListener("dispose",i);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}class Rd extends No{constructor(e=-1,t=1,n=1,i=-1,r=.1,s=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=s,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,s){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,s=n+e,o=i+t,l=i-t;if(this.view!==null&&this.view.enabled){const u=(this.right-this.left)/this.view.fullWidth/this.zoom,c=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=u*this.view.offsetX,s=r+u*this.view.width,o-=c*this.view.offsetY,l=o-c*this.view.height}this.projectionMatrix.makeOrthographic(r,s,o,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const na=4,Uo=[.125,.215,.35,.446,.526,.582],Rn=20,$i=new Rd,Io=new Ge;let Qi=null;const Cn=(1+Math.sqrt(5))/2,aa=1/Cn,Oo=[new C(1,1,1),new C(-1,1,1),new C(1,1,-1),new C(-1,1,-1),new C(0,Cn,aa),new C(0,Cn,-aa),new C(aa,0,Cn),new C(-aa,0,Cn),new C(Cn,aa,0),new C(-Cn,aa,0)];class Bo{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Qi=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Ho(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Go(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Qi),e.scissorTest=!1,ni(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===In||e.mapping===On?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Qi=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Ct,minFilter:Ct,generateMipmaps:!1,type:da,format:Ut,colorSpace:Ht,depthBuffer:!1},i=Fo(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Fo(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=Cd(r)),this._blurMaterial=Pd(r,e,t)}return i}_compileMaterial(e){const t=new tn(this._lodPlanes[0],e);this._renderer.compile(t,$i)}_sceneToCubeUV(e,t,n,i){const o=new wt(90,1,t,n),l=[1,-1,1,1,1,1],u=[1,1,1,-1,-1,-1],c=this._renderer,_=c.autoClear,p=c.toneMapping;c.getClearColor(Io),c.toneMapping=on,c.autoClear=!1;const f=new Ki({name:"PMREM.Background",side:vt,depthWrite:!1,depthTest:!1}),h=new tn(new Sa,f);let y=!1;const m=e.background;m?m.isColor&&(f.color.copy(m),e.background=null,y=!0):(f.color.copy(Io),y=!0);for(let d=0;d<6;d++){const E=d%3;E===0?(o.up.set(0,l[d],0),o.lookAt(u[d],0,0)):E===1?(o.up.set(0,0,l[d]),o.lookAt(0,u[d],0)):(o.up.set(0,l[d],0),o.lookAt(0,0,u[d]));const b=this._cubeSize;ni(i,E*b,d>2?b:0,b,b),c.setRenderTarget(i),y&&c.render(h,o),c.render(e,o)}h.geometry.dispose(),h.material.dispose(),c.toneMapping=p,c.autoClear=_,e.background=m}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===In||e.mapping===On;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Ho()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Go());const r=i?this._cubemapMaterial:this._equirectMaterial,s=new tn(this._lodPlanes[0],r),o=r.uniforms;o.envMap.value=e;const l=this._cubeSize;ni(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(s,$i)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),s=Oo[(i-1)%Oo.length];this._blur(e,i-1,i,r,s)}t.autoClear=n}_blur(e,t,n,i,r){const s=this._pingPongRenderTarget;this._halfBlur(e,s,t,n,i,"latitudinal",r),this._halfBlur(s,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,s,o){const l=this._renderer,u=this._blurMaterial;s!=="latitudinal"&&s!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const c=3,_=new tn(this._lodPlanes[i],u),p=u.uniforms,f=this._sizeLods[n]-1,h=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*Rn-1),y=r/h,m=isFinite(r)?1+Math.floor(c*y):Rn;m>Rn&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Rn}`);const d=[];let E=0;for(let T=0;T<Rn;++T){const W=T/y,v=Math.exp(-W*W/2);d.push(v),T===0?E+=v:T<m&&(E+=2*v)}for(let T=0;T<d.length;T++)d[T]=d[T]/E;p.envMap.value=e.texture,p.samples.value=m,p.weights.value=d,p.latitudinal.value=s==="latitudinal",o&&(p.poleAxis.value=o);const{_lodMax:b}=this;p.dTheta.value=h,p.mipInt.value=b-n;const L=this._sizeLods[i],x=3*L*(i>b-na?i-b+na:0),P=4*(this._cubeSize-L);ni(t,x,P,3*L,2*L),l.setRenderTarget(t),l.render(_,$i)}}function Cd(a){const e=[],t=[],n=[];let i=a;const r=a-na+1+Uo.length;for(let s=0;s<r;s++){const o=Math.pow(2,i);t.push(o);let l=1/o;s>a-na?l=Uo[s-a+na-1]:s===0&&(l=0),n.push(l);const u=1/(o-2),c=-u,_=1+u,p=[c,c,_,c,_,_,c,c,_,_,c,_],f=6,h=6,y=3,m=2,d=1,E=new Float32Array(y*h*f),b=new Float32Array(m*h*f),L=new Float32Array(d*h*f);for(let P=0;P<f;P++){const T=P%3*2/3-1,W=P>2?0:-1,v=[T,W,0,T+2/3,W,0,T+2/3,W+1,0,T,W,0,T+2/3,W+1,0,T,W+1,0];E.set(v,y*h*P),b.set(p,m*h*P);const M=[P,P,P,P,P,P];L.set(M,d*h*P)}const x=new xt;x.setAttribute("position",new Mt(E,y)),x.setAttribute("uv",new Mt(b,m)),x.setAttribute("faceIndex",new Mt(L,d)),e.push(x),i>na&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Fo(a,e,t){const n=new An(a,e,t);return n.texture.mapping=Ca,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function ni(a,e,t,n,i){a.viewport.set(e,t,n,i),a.scissor.set(e,t,n,i)}function Pd(a,e,t){const n=new Float32Array(Rn),i=new C(0,1,0);return new Tn({name:"SphericalGaussianBlur",defines:{n:Rn,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${a}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:er(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:rn,depthTest:!1,depthWrite:!1})}function Go(){return new Tn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:er(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:rn,depthTest:!1,depthWrite:!1})}function Ho(){return new Tn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:er(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:rn,depthTest:!1,depthWrite:!1})}function er(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Nd(a){let e=new WeakMap,t=null;function n(o){if(o&&o.isTexture){const l=o.mapping,u=l===hi||l===gi,c=l===In||l===On;if(u||c)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let _=e.get(o);return t===null&&(t=new Bo(a)),_=u?t.fromEquirectangular(o,_):t.fromCubemap(o,_),e.set(o,_),_.texture}else{if(e.has(o))return e.get(o).texture;{const _=o.image;if(u&&_&&_.height>0||c&&_&&i(_)){t===null&&(t=new Bo(a));const p=u?t.fromEquirectangular(o):t.fromCubemap(o);return e.set(o,p),o.addEventListener("dispose",r),p.texture}else return null}}}return o}function i(o){let l=0;const u=6;for(let c=0;c<u;c++)o[c]!==void 0&&l++;return l===u}function r(o){const l=o.target;l.removeEventListener("dispose",r);const u=e.get(l);u!==void 0&&(e.delete(l),u.dispose())}function s(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:s}}function kd(a){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=a.getExtension("WEBGL_depth_texture")||a.getExtension("MOZ_WEBGL_depth_texture")||a.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=a.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function Dd(a,e,t,n){const i={},r=new WeakMap;function s(_){const p=_.target;p.index!==null&&e.remove(p.index);for(const h in p.attributes)e.remove(p.attributes[h]);for(const h in p.morphAttributes){const y=p.morphAttributes[h];for(let m=0,d=y.length;m<d;m++)e.remove(y[m])}p.removeEventListener("dispose",s),delete i[p.id];const f=r.get(p);f&&(e.remove(f),r.delete(p)),n.releaseStatesOfGeometry(p),p.isInstancedBufferGeometry===!0&&delete p._maxInstanceCount,t.memory.geometries--}function o(_,p){return i[p.id]===!0||(p.addEventListener("dispose",s),i[p.id]=!0,t.memory.geometries++),p}function l(_){const p=_.attributes;for(const h in p)e.update(p[h],a.ARRAY_BUFFER);const f=_.morphAttributes;for(const h in f){const y=f[h];for(let m=0,d=y.length;m<d;m++)e.update(y[m],a.ARRAY_BUFFER)}}function u(_){const p=[],f=_.index,h=_.attributes.position;let y=0;if(f!==null){const E=f.array;y=f.version;for(let b=0,L=E.length;b<L;b+=3){const x=E[b+0],P=E[b+1],T=E[b+2];p.push(x,P,P,T,T,x)}}else if(h!==void 0){const E=h.array;y=h.version;for(let b=0,L=E.length/3-1;b<L;b+=3){const x=b+0,P=b+1,T=b+2;p.push(x,P,P,T,T,x)}}else return;const m=new(lo(p)?xo:Eo)(p,1);m.version=y;const d=r.get(_);d&&e.remove(d),r.set(_,m)}function c(_){const p=r.get(_);if(p){const f=_.index;f!==null&&p.version<f.version&&u(_)}else u(_);return r.get(_)}return{get:o,update:l,getWireframeAttribute:c}}function Ud(a,e,t,n){const i=n.isWebGL2;let r;function s(p){r=p}let o,l;function u(p){o=p.type,l=p.bytesPerElement}function c(p,f){a.drawElements(r,f,o,p*l),t.update(f,r,1)}function _(p,f,h){if(h===0)return;let y,m;if(i)y=a,m="drawElementsInstanced";else if(y=e.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",y===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}y[m](r,f,o,p*l,h),t.update(f,r,h)}this.setMode=s,this.setIndex=u,this.render=c,this.renderInstances=_}function Id(a){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,s,o){switch(t.calls++,s){case a.TRIANGLES:t.triangles+=o*(r/3);break;case a.LINES:t.lines+=o*(r/2);break;case a.LINE_STRIP:t.lines+=o*(r-1);break;case a.LINE_LOOP:t.lines+=o*r;break;case a.POINTS:t.points+=o*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",s);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function Od(a,e){return a[0]-e[0]}function Bd(a,e){return Math.abs(e[1])-Math.abs(a[1])}function Fd(a,e,t){const n={},i=new Float32Array(8),r=new WeakMap,s=new Ye,o=[];for(let u=0;u<8;u++)o[u]=[u,0];function l(u,c,_){const p=u.morphTargetInfluences;if(e.isWebGL2===!0){const f=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,h=f!==void 0?f.length:0;let y=r.get(c);if(y===void 0||y.count!==h){let H=function(){ie.dispose(),r.delete(c),c.removeEventListener("dispose",H)};y!==void 0&&y.texture.dispose();const E=c.morphAttributes.position!==void 0,b=c.morphAttributes.normal!==void 0,L=c.morphAttributes.color!==void 0,x=c.morphAttributes.position||[],P=c.morphAttributes.normal||[],T=c.morphAttributes.color||[];let W=0;E===!0&&(W=1),b===!0&&(W=2),L===!0&&(W=3);let v=c.attributes.position.count*W,M=1;v>e.maxTextureSize&&(M=Math.ceil(v/e.maxTextureSize),v=e.maxTextureSize);const q=new Float32Array(v*M*4*h),ie=new po(q,v,M,h);ie.type=un,ie.needsUpdate=!0;const F=W*4;for(let G=0;G<h;G++){const Q=x[G],X=P[G],Y=T[G],j=v*M*4*G;for(let J=0;J<Q.count;J++){const U=J*F;E===!0&&(s.fromBufferAttribute(Q,J),q[j+U+0]=s.x,q[j+U+1]=s.y,q[j+U+2]=s.z,q[j+U+3]=0),b===!0&&(s.fromBufferAttribute(X,J),q[j+U+4]=s.x,q[j+U+5]=s.y,q[j+U+6]=s.z,q[j+U+7]=0),L===!0&&(s.fromBufferAttribute(Y,J),q[j+U+8]=s.x,q[j+U+9]=s.y,q[j+U+10]=s.z,q[j+U+11]=Y.itemSize===4?s.w:1)}}y={count:h,texture:ie,size:new ve(v,M)},r.set(c,y),c.addEventListener("dispose",H)}let m=0;for(let E=0;E<p.length;E++)m+=p[E];const d=c.morphTargetsRelative?1:1-m;_.getUniforms().setValue(a,"morphTargetBaseInfluence",d),_.getUniforms().setValue(a,"morphTargetInfluences",p),_.getUniforms().setValue(a,"morphTargetsTexture",y.texture,t),_.getUniforms().setValue(a,"morphTargetsTextureSize",y.size)}else{const f=p===void 0?0:p.length;let h=n[c.id];if(h===void 0||h.length!==f){h=[];for(let b=0;b<f;b++)h[b]=[b,0];n[c.id]=h}for(let b=0;b<f;b++){const L=h[b];L[0]=b,L[1]=p[b]}h.sort(Bd);for(let b=0;b<8;b++)b<f&&h[b][1]?(o[b][0]=h[b][0],o[b][1]=h[b][1]):(o[b][0]=Number.MAX_SAFE_INTEGER,o[b][1]=0);o.sort(Od);const y=c.morphAttributes.position,m=c.morphAttributes.normal;let d=0;for(let b=0;b<8;b++){const L=o[b],x=L[0],P=L[1];x!==Number.MAX_SAFE_INTEGER&&P?(y&&c.getAttribute("morphTarget"+b)!==y[x]&&c.setAttribute("morphTarget"+b,y[x]),m&&c.getAttribute("morphNormal"+b)!==m[x]&&c.setAttribute("morphNormal"+b,m[x]),i[b]=P,d+=P):(y&&c.hasAttribute("morphTarget"+b)===!0&&c.deleteAttribute("morphTarget"+b),m&&c.hasAttribute("morphNormal"+b)===!0&&c.deleteAttribute("morphNormal"+b),i[b]=0)}const E=c.morphTargetsRelative?1:1-d;_.getUniforms().setValue(a,"morphTargetBaseInfluence",E),_.getUniforms().setValue(a,"morphTargetInfluences",i)}}return{update:l}}function Gd(a,e,t,n){let i=new WeakMap;function r(l){const u=n.render.frame,c=l.geometry,_=e.get(l,c);if(i.get(_)!==u&&(e.update(_),i.set(_,u)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),i.get(l)!==u&&(t.update(l.instanceMatrix,a.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,a.ARRAY_BUFFER),i.set(l,u))),l.isSkinnedMesh){const p=l.skeleton;i.get(p)!==u&&(p.update(),i.set(p,u))}return _}function s(){i=new WeakMap}function o(l){const u=l.target;u.removeEventListener("dispose",o),t.remove(u.instanceMatrix),u.instanceColor!==null&&t.remove(u.instanceColor)}return{update:r,dispose:s}}const zo=new At,Vo=new po,Wo=new ru,Xo=new ko,Ko=[],Yo=[],Zo=new Float32Array(16),qo=new Float32Array(9),jo=new Float32Array(4);function ia(a,e,t){const n=a[0];if(n<=0||n>0)return a;const i=e*t;let r=Ko[i];if(r===void 0&&(r=new Float32Array(i),Ko[i]=r),e!==0){n.toArray(r,0);for(let s=1,o=0;s!==e;++s)o+=t,a[s].toArray(r,o)}return r}function tt(a,e){if(a.length!==e.length)return!1;for(let t=0,n=a.length;t<n;t++)if(a[t]!==e[t])return!1;return!0}function nt(a,e){for(let t=0,n=e.length;t<n;t++)a[t]=e[t]}function ai(a,e){let t=Yo[e];t===void 0&&(t=new Int32Array(e),Yo[e]=t);for(let n=0;n!==e;++n)t[n]=a.allocateTextureUnit();return t}function Hd(a,e){const t=this.cache;t[0]!==e&&(a.uniform1f(this.addr,e),t[0]=e)}function zd(a,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(a.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(tt(t,e))return;a.uniform2fv(this.addr,e),nt(t,e)}}function Vd(a,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(a.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(a.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(tt(t,e))return;a.uniform3fv(this.addr,e),nt(t,e)}}function Wd(a,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(a.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(tt(t,e))return;a.uniform4fv(this.addr,e),nt(t,e)}}function Xd(a,e){const t=this.cache,n=e.elements;if(n===void 0){if(tt(t,e))return;a.uniformMatrix2fv(this.addr,!1,e),nt(t,e)}else{if(tt(t,n))return;jo.set(n),a.uniformMatrix2fv(this.addr,!1,jo),nt(t,n)}}function Kd(a,e){const t=this.cache,n=e.elements;if(n===void 0){if(tt(t,e))return;a.uniformMatrix3fv(this.addr,!1,e),nt(t,e)}else{if(tt(t,n))return;qo.set(n),a.uniformMatrix3fv(this.addr,!1,qo),nt(t,n)}}function Yd(a,e){const t=this.cache,n=e.elements;if(n===void 0){if(tt(t,e))return;a.uniformMatrix4fv(this.addr,!1,e),nt(t,e)}else{if(tt(t,n))return;Zo.set(n),a.uniformMatrix4fv(this.addr,!1,Zo),nt(t,n)}}function Zd(a,e){const t=this.cache;t[0]!==e&&(a.uniform1i(this.addr,e),t[0]=e)}function qd(a,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(a.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(tt(t,e))return;a.uniform2iv(this.addr,e),nt(t,e)}}function jd(a,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(a.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(tt(t,e))return;a.uniform3iv(this.addr,e),nt(t,e)}}function Jd(a,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(a.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(tt(t,e))return;a.uniform4iv(this.addr,e),nt(t,e)}}function $d(a,e){const t=this.cache;t[0]!==e&&(a.uniform1ui(this.addr,e),t[0]=e)}function Qd(a,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(a.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(tt(t,e))return;a.uniform2uiv(this.addr,e),nt(t,e)}}function e_(a,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(a.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(tt(t,e))return;a.uniform3uiv(this.addr,e),nt(t,e)}}function t_(a,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(a.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(tt(t,e))return;a.uniform4uiv(this.addr,e),nt(t,e)}}function n_(a,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(a.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||zo,i)}function a_(a,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(a.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Wo,i)}function i_(a,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(a.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Xo,i)}function r_(a,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(a.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||Vo,i)}function o_(a){switch(a){case 5126:return Hd;case 35664:return zd;case 35665:return Vd;case 35666:return Wd;case 35674:return Xd;case 35675:return Kd;case 35676:return Yd;case 5124:case 35670:return Zd;case 35667:case 35671:return qd;case 35668:case 35672:return jd;case 35669:case 35673:return Jd;case 5125:return $d;case 36294:return Qd;case 36295:return e_;case 36296:return t_;case 35678:case 36198:case 36298:case 36306:case 35682:return n_;case 35679:case 36299:case 36307:return a_;case 35680:case 36300:case 36308:case 36293:return i_;case 36289:case 36303:case 36311:case 36292:return r_}}function s_(a,e){a.uniform1fv(this.addr,e)}function l_(a,e){const t=ia(e,this.size,2);a.uniform2fv(this.addr,t)}function u_(a,e){const t=ia(e,this.size,3);a.uniform3fv(this.addr,t)}function c_(a,e){const t=ia(e,this.size,4);a.uniform4fv(this.addr,t)}function d_(a,e){const t=ia(e,this.size,4);a.uniformMatrix2fv(this.addr,!1,t)}function __(a,e){const t=ia(e,this.size,9);a.uniformMatrix3fv(this.addr,!1,t)}function p_(a,e){const t=ia(e,this.size,16);a.uniformMatrix4fv(this.addr,!1,t)}function m_(a,e){a.uniform1iv(this.addr,e)}function f_(a,e){a.uniform2iv(this.addr,e)}function h_(a,e){a.uniform3iv(this.addr,e)}function g_(a,e){a.uniform4iv(this.addr,e)}function b_(a,e){a.uniform1uiv(this.addr,e)}function y_(a,e){a.uniform2uiv(this.addr,e)}function v_(a,e){a.uniform3uiv(this.addr,e)}function A_(a,e){a.uniform4uiv(this.addr,e)}function S_(a,e,t){const n=this.cache,i=e.length,r=ai(t,i);tt(n,r)||(a.uniform1iv(this.addr,r),nt(n,r));for(let s=0;s!==i;++s)t.setTexture2D(e[s]||zo,r[s])}function M_(a,e,t){const n=this.cache,i=e.length,r=ai(t,i);tt(n,r)||(a.uniform1iv(this.addr,r),nt(n,r));for(let s=0;s!==i;++s)t.setTexture3D(e[s]||Wo,r[s])}function E_(a,e,t){const n=this.cache,i=e.length,r=ai(t,i);tt(n,r)||(a.uniform1iv(this.addr,r),nt(n,r));for(let s=0;s!==i;++s)t.setTextureCube(e[s]||Xo,r[s])}function x_(a,e,t){const n=this.cache,i=e.length,r=ai(t,i);tt(n,r)||(a.uniform1iv(this.addr,r),nt(n,r));for(let s=0;s!==i;++s)t.setTexture2DArray(e[s]||Vo,r[s])}function w_(a){switch(a){case 5126:return s_;case 35664:return l_;case 35665:return u_;case 35666:return c_;case 35674:return d_;case 35675:return __;case 35676:return p_;case 5124:case 35670:return m_;case 35667:case 35671:return f_;case 35668:case 35672:return h_;case 35669:case 35673:return g_;case 5125:return b_;case 36294:return y_;case 36295:return v_;case 36296:return A_;case 35678:case 36198:case 36298:case 36306:case 35682:return S_;case 35679:case 36299:case 36307:return M_;case 35680:case 36300:case 36308:case 36293:return E_;case 36289:case 36303:case 36311:case 36292:return x_}}class T_{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=o_(t.type)}}class L_{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=w_(t.type)}}class R_{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,s=i.length;r!==s;++r){const o=i[r];o.setValue(e,t[o.id],n)}}}const tr=/(\w+)(\])?(\[|\.)?/g;function Jo(a,e){a.seq.push(e),a.map[e.id]=e}function C_(a,e,t){const n=a.name,i=n.length;for(tr.lastIndex=0;;){const r=tr.exec(n),s=tr.lastIndex;let o=r[1];const l=r[2]==="]",u=r[3];if(l&&(o=o|0),u===void 0||u==="["&&s+2===i){Jo(t,u===void 0?new T_(o,a,e):new L_(o,a,e));break}else{let _=t.map[o];_===void 0&&(_=new R_(o),Jo(t,_)),t=_}}}class ii{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),s=e.getUniformLocation(t,r.name);C_(r,s,this)}}setValue(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,s=t.length;r!==s;++r){const o=t[r],l=n[o.id];l.needsUpdate!==!1&&o.setValue(e,l.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const s=e[i];s.id in t&&n.push(s)}return n}}function $o(a,e,t){const n=a.createShader(e);return a.shaderSource(n,t),a.compileShader(n),n}let P_=0;function N_(a,e){const t=a.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let s=i;s<r;s++){const o=s+1;n.push(`${o===e?">":" "} ${o}: ${t[s]}`)}return n.join(`
`)}function k_(a){switch(a){case Ht:return["Linear","( value )"];case Ke:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",a),["Linear","( value )"]}}function Qo(a,e,t){const n=a.getShaderParameter(e,a.COMPILE_STATUS),i=a.getShaderInfoLog(e).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const s=parseInt(r[1]);return t.toUpperCase()+`

`+i+`

`+N_(a.getShaderSource(e),s)}else return i}function D_(a,e){const t=k_(e);return"vec4 "+a+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function U_(a,e){let t;switch(e){case ol:t="Linear";break;case sl:t="Reinhard";break;case ll:t="OptimizedCineon";break;case ul:t="ACESFilmic";break;case cl:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+a+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function I_(a){return[a.extensionDerivatives||a.envMapCubeUVHeight||a.bumpMap||a.normalMapTangentSpace||a.clearcoatNormalMap||a.flatShading||a.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(a.extensionFragDepth||a.logarithmicDepthBuffer)&&a.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",a.extensionDrawBuffers&&a.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(a.extensionShaderTextureLOD||a.envMap||a.transmission)&&a.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ma).join(`
`)}function O_(a){const e=[];for(const t in a){const n=a[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function B_(a,e){const t={},n=a.getProgramParameter(e,a.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const r=a.getActiveAttrib(e,i),s=r.name;let o=1;r.type===a.FLOAT_MAT2&&(o=2),r.type===a.FLOAT_MAT3&&(o=3),r.type===a.FLOAT_MAT4&&(o=4),t[s]={type:r.type,location:a.getAttribLocation(e,s),locationSize:o}}return t}function Ma(a){return a!==""}function es(a,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return a.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function ts(a,e){return a.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const F_=/^[ \t]*#include +<([\w\d./]+)>/gm;function nr(a){return a.replace(F_,H_)}const G_=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function H_(a,e){let t=Re[e];if(t===void 0){const n=G_.get(e);if(n!==void 0)t=Re[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return nr(t)}const z_=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function ns(a){return a.replace(z_,V_)}function V_(a,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function as(a){let e="precision "+a.precision+` float;
precision `+a.precision+" int;";return a.precision==="highp"?e+=`
#define HIGH_PRECISION`:a.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:a.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function W_(a){let e="SHADOWMAP_TYPE_BASIC";return a.shadowMapType===gr?e="SHADOWMAP_TYPE_PCF":a.shadowMapType===Bs?e="SHADOWMAP_TYPE_PCF_SOFT":a.shadowMapType===Xt&&(e="SHADOWMAP_TYPE_VSM"),e}function X_(a){let e="ENVMAP_TYPE_CUBE";if(a.envMap)switch(a.envMapMode){case In:case On:e="ENVMAP_TYPE_CUBE";break;case Ca:e="ENVMAP_TYPE_CUBE_UV";break}return e}function K_(a){let e="ENVMAP_MODE_REFLECTION";if(a.envMap)switch(a.envMapMode){case On:e="ENVMAP_MODE_REFRACTION";break}return e}function Y_(a){let e="ENVMAP_BLENDING_NONE";if(a.envMap)switch(a.combine){case xr:e="ENVMAP_BLENDING_MULTIPLY";break;case il:e="ENVMAP_BLENDING_MIX";break;case rl:e="ENVMAP_BLENDING_ADD";break}return e}function Z_(a){const e=a.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function q_(a,e,t,n){const i=a.getContext(),r=t.defines;let s=t.vertexShader,o=t.fragmentShader;const l=W_(t),u=X_(t),c=K_(t),_=Y_(t),p=Z_(t),f=t.isWebGL2?"":I_(t),h=O_(r),y=i.createProgram();let m,d,E=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,h].filter(Ma).join(`
`),m.length>0&&(m+=`
`),d=[f,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,h].filter(Ma).join(`
`),d.length>0&&(d+=`
`)):(m=[as(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,h,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Ma).join(`
`),d=[f,as(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,h,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.envMap?"#define "+c:"",t.envMap?"#define "+_:"",p?"#define CUBEUV_TEXEL_WIDTH "+p.texelWidth:"",p?"#define CUBEUV_TEXEL_HEIGHT "+p.texelHeight:"",p?"#define CUBEUV_MAX_MIP "+p.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==on?"#define TONE_MAPPING":"",t.toneMapping!==on?Re.tonemapping_pars_fragment:"",t.toneMapping!==on?U_("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Re.colorspace_pars_fragment,D_("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Ma).join(`
`)),s=nr(s),s=es(s,t),s=ts(s,t),o=nr(o),o=es(o,t),o=ts(o,t),s=ns(s),o=ns(o),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(E=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,d=["#define varying in",t.glslVersion===oo?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===oo?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+d);const b=E+m+s,L=E+d+o,x=$o(i,i.VERTEX_SHADER,b),P=$o(i,i.FRAGMENT_SHADER,L);if(i.attachShader(y,x),i.attachShader(y,P),t.index0AttributeName!==void 0?i.bindAttribLocation(y,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(y,0,"position"),i.linkProgram(y),a.debug.checkShaderErrors){const v=i.getProgramInfoLog(y).trim(),M=i.getShaderInfoLog(x).trim(),q=i.getShaderInfoLog(P).trim();let ie=!0,F=!0;if(i.getProgramParameter(y,i.LINK_STATUS)===!1)if(ie=!1,typeof a.debug.onShaderError=="function")a.debug.onShaderError(i,y,x,P);else{const H=Qo(i,x,"vertex"),G=Qo(i,P,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(y,i.VALIDATE_STATUS)+`

Program Info Log: `+v+`
`+H+`
`+G)}else v!==""?console.warn("THREE.WebGLProgram: Program Info Log:",v):(M===""||q==="")&&(F=!1);F&&(this.diagnostics={runnable:ie,programLog:v,vertexShader:{log:M,prefix:m},fragmentShader:{log:q,prefix:d}})}i.deleteShader(x),i.deleteShader(P);let T;this.getUniforms=function(){return T===void 0&&(T=new ii(i,y)),T};let W;return this.getAttributes=function(){return W===void 0&&(W=B_(i,y)),W},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(y),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=P_++,this.cacheKey=e,this.usedTimes=1,this.program=y,this.vertexShader=x,this.fragmentShader=P,this}let j_=0;class J_{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),s=this._getShaderCacheForMaterial(e);return s.has(i)===!1&&(s.add(i),i.usedTimes++),s.has(r)===!1&&(s.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new $_(e),t.set(e,n)),n}}class $_{constructor(e){this.id=j_++,this.code=e,this.usedTimes=0}}function Q_(a,e,t,n,i,r,s){const o=new go,l=new J_,u=[],c=i.isWebGL2,_=i.logarithmicDepthBuffer,p=i.vertexTextures;let f=i.precision;const h={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function y(v){return v===0?"uv":`uv${v}`}function m(v,M,q,ie,F){const H=ie.fog,G=F.geometry,Q=v.isMeshStandardMaterial?ie.environment:null,X=(v.isMeshStandardMaterial?t:e).get(v.envMap||Q),Y=X&&X.mapping===Ca?X.image.height:null,j=h[v.type];v.precision!==null&&(f=i.getMaxPrecision(v.precision),f!==v.precision&&console.warn("THREE.WebGLProgram.getParameters:",v.precision,"not supported, using",f,"instead."));const J=G.morphAttributes.position||G.morphAttributes.normal||G.morphAttributes.color,U=J!==void 0?J.length:0;let K=0;G.morphAttributes.position!==void 0&&(K=1),G.morphAttributes.normal!==void 0&&(K=2),G.morphAttributes.color!==void 0&&(K=3);let de,_e,pe,ye;if(j){const Xe=Vt[j];de=Xe.vertexShader,_e=Xe.fragmentShader}else de=v.vertexShader,_e=v.fragmentShader,l.update(v),pe=l.getVertexShaderID(v),ye=l.getFragmentShaderID(v);const xe=a.getRenderTarget(),he=F.isInstancedMesh===!0,Be=!!v.map,ut=!!v.matcap,Ce=!!X,k=!!v.aoMap,it=!!v.lightMap,ge=!!v.bumpMap,Te=!!v.normalMap,Se=!!v.displacementMap,We=!!v.emissiveMap,ke=!!v.metalnessMap,Le=!!v.roughnessMap,Fe=v.anisotropy>0,rt=v.clearcoat>0,st=v.iridescence>0,S=v.sheen>0,g=v.transmission>0,I=Fe&&!!v.anisotropyMap,te=rt&&!!v.clearcoatMap,$=rt&&!!v.clearcoatNormalMap,ne=rt&&!!v.clearcoatRoughnessMap,fe=st&&!!v.iridescenceMap,ae=st&&!!v.iridescenceThicknessMap,O=S&&!!v.sheenColorMap,w=S&&!!v.sheenRoughnessMap,Z=!!v.specularMap,ce=!!v.specularColorMap,oe=!!v.specularIntensityMap,ue=g&&!!v.transmissionMap,we=g&&!!v.thicknessMap,Oe=!!v.gradientMap,R=!!v.alphaMap,le=v.alphaTest>0,B=!!v.alphaHash,ee=!!v.extensions,re=!!G.attributes.uv1,De=!!G.attributes.uv2,He=!!G.attributes.uv3;let Ve=on;return v.toneMapped&&(xe===null||xe.isXRRenderTarget===!0)&&(Ve=a.toneMapping),{isWebGL2:c,shaderID:j,shaderType:v.type,shaderName:v.name,vertexShader:de,fragmentShader:_e,defines:v.defines,customVertexShaderID:pe,customFragmentShaderID:ye,isRawShaderMaterial:v.isRawShaderMaterial===!0,glslVersion:v.glslVersion,precision:f,instancing:he,instancingColor:he&&F.instanceColor!==null,supportsVertexTextures:p,outputColorSpace:xe===null?a.outputColorSpace:xe.isXRRenderTarget===!0?xe.texture.colorSpace:Ht,map:Be,matcap:ut,envMap:Ce,envMapMode:Ce&&X.mapping,envMapCubeUVHeight:Y,aoMap:k,lightMap:it,bumpMap:ge,normalMap:Te,displacementMap:p&&Se,emissiveMap:We,normalMapObjectSpace:Te&&v.normalMapType===El,normalMapTangentSpace:Te&&v.normalMapType===Ml,metalnessMap:ke,roughnessMap:Le,anisotropy:Fe,anisotropyMap:I,clearcoat:rt,clearcoatMap:te,clearcoatNormalMap:$,clearcoatRoughnessMap:ne,iridescence:st,iridescenceMap:fe,iridescenceThicknessMap:ae,sheen:S,sheenColorMap:O,sheenRoughnessMap:w,specularMap:Z,specularColorMap:ce,specularIntensityMap:oe,transmission:g,transmissionMap:ue,thicknessMap:we,gradientMap:Oe,opaque:v.transparent===!1&&v.blending===Dn,alphaMap:R,alphaTest:le,alphaHash:B,combine:v.combine,mapUv:Be&&y(v.map.channel),aoMapUv:k&&y(v.aoMap.channel),lightMapUv:it&&y(v.lightMap.channel),bumpMapUv:ge&&y(v.bumpMap.channel),normalMapUv:Te&&y(v.normalMap.channel),displacementMapUv:Se&&y(v.displacementMap.channel),emissiveMapUv:We&&y(v.emissiveMap.channel),metalnessMapUv:ke&&y(v.metalnessMap.channel),roughnessMapUv:Le&&y(v.roughnessMap.channel),anisotropyMapUv:I&&y(v.anisotropyMap.channel),clearcoatMapUv:te&&y(v.clearcoatMap.channel),clearcoatNormalMapUv:$&&y(v.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ne&&y(v.clearcoatRoughnessMap.channel),iridescenceMapUv:fe&&y(v.iridescenceMap.channel),iridescenceThicknessMapUv:ae&&y(v.iridescenceThicknessMap.channel),sheenColorMapUv:O&&y(v.sheenColorMap.channel),sheenRoughnessMapUv:w&&y(v.sheenRoughnessMap.channel),specularMapUv:Z&&y(v.specularMap.channel),specularColorMapUv:ce&&y(v.specularColorMap.channel),specularIntensityMapUv:oe&&y(v.specularIntensityMap.channel),transmissionMapUv:ue&&y(v.transmissionMap.channel),thicknessMapUv:we&&y(v.thicknessMap.channel),alphaMapUv:R&&y(v.alphaMap.channel),vertexTangents:!!G.attributes.tangent&&(Te||Fe),vertexColors:v.vertexColors,vertexAlphas:v.vertexColors===!0&&!!G.attributes.color&&G.attributes.color.itemSize===4,vertexUv1s:re,vertexUv2s:De,vertexUv3s:He,pointsUvs:F.isPoints===!0&&!!G.attributes.uv&&(Be||R),fog:!!H,useFog:v.fog===!0,fogExp2:H&&H.isFogExp2,flatShading:v.flatShading===!0,sizeAttenuation:v.sizeAttenuation===!0,logarithmicDepthBuffer:_,skinning:F.isSkinnedMesh===!0,morphTargets:G.morphAttributes.position!==void 0,morphNormals:G.morphAttributes.normal!==void 0,morphColors:G.morphAttributes.color!==void 0,morphTargetsCount:U,morphTextureStride:K,numDirLights:M.directional.length,numPointLights:M.point.length,numSpotLights:M.spot.length,numSpotLightMaps:M.spotLightMap.length,numRectAreaLights:M.rectArea.length,numHemiLights:M.hemi.length,numDirLightShadows:M.directionalShadowMap.length,numPointLightShadows:M.pointShadowMap.length,numSpotLightShadows:M.spotShadowMap.length,numSpotLightShadowsWithMaps:M.numSpotLightShadowsWithMaps,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:v.dithering,shadowMapEnabled:a.shadowMap.enabled&&q.length>0,shadowMapType:a.shadowMap.type,toneMapping:Ve,useLegacyLights:a._useLegacyLights,decodeVideoTexture:Be&&v.map.isVideoTexture===!0&&v.map.colorSpace===Ke,premultipliedAlpha:v.premultipliedAlpha,doubleSided:v.side===Kt,flipSided:v.side===vt,useDepthPacking:v.depthPacking>=0,depthPacking:v.depthPacking||0,index0AttributeName:v.index0AttributeName,extensionDerivatives:ee&&v.extensions.derivatives===!0,extensionFragDepth:ee&&v.extensions.fragDepth===!0,extensionDrawBuffers:ee&&v.extensions.drawBuffers===!0,extensionShaderTextureLOD:ee&&v.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:c||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:c||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:c||n.has("EXT_shader_texture_lod"),customProgramCacheKey:v.customProgramCacheKey()}}function d(v){const M=[];if(v.shaderID?M.push(v.shaderID):(M.push(v.customVertexShaderID),M.push(v.customFragmentShaderID)),v.defines!==void 0)for(const q in v.defines)M.push(q),M.push(v.defines[q]);return v.isRawShaderMaterial===!1&&(E(M,v),b(M,v),M.push(a.outputColorSpace)),M.push(v.customProgramCacheKey),M.join()}function E(v,M){v.push(M.precision),v.push(M.outputColorSpace),v.push(M.envMapMode),v.push(M.envMapCubeUVHeight),v.push(M.mapUv),v.push(M.alphaMapUv),v.push(M.lightMapUv),v.push(M.aoMapUv),v.push(M.bumpMapUv),v.push(M.normalMapUv),v.push(M.displacementMapUv),v.push(M.emissiveMapUv),v.push(M.metalnessMapUv),v.push(M.roughnessMapUv),v.push(M.anisotropyMapUv),v.push(M.clearcoatMapUv),v.push(M.clearcoatNormalMapUv),v.push(M.clearcoatRoughnessMapUv),v.push(M.iridescenceMapUv),v.push(M.iridescenceThicknessMapUv),v.push(M.sheenColorMapUv),v.push(M.sheenRoughnessMapUv),v.push(M.specularMapUv),v.push(M.specularColorMapUv),v.push(M.specularIntensityMapUv),v.push(M.transmissionMapUv),v.push(M.thicknessMapUv),v.push(M.combine),v.push(M.fogExp2),v.push(M.sizeAttenuation),v.push(M.morphTargetsCount),v.push(M.morphAttributeCount),v.push(M.numDirLights),v.push(M.numPointLights),v.push(M.numSpotLights),v.push(M.numSpotLightMaps),v.push(M.numHemiLights),v.push(M.numRectAreaLights),v.push(M.numDirLightShadows),v.push(M.numPointLightShadows),v.push(M.numSpotLightShadows),v.push(M.numSpotLightShadowsWithMaps),v.push(M.shadowMapType),v.push(M.toneMapping),v.push(M.numClippingPlanes),v.push(M.numClipIntersection),v.push(M.depthPacking)}function b(v,M){o.disableAll(),M.isWebGL2&&o.enable(0),M.supportsVertexTextures&&o.enable(1),M.instancing&&o.enable(2),M.instancingColor&&o.enable(3),M.matcap&&o.enable(4),M.envMap&&o.enable(5),M.normalMapObjectSpace&&o.enable(6),M.normalMapTangentSpace&&o.enable(7),M.clearcoat&&o.enable(8),M.iridescence&&o.enable(9),M.alphaTest&&o.enable(10),M.vertexColors&&o.enable(11),M.vertexAlphas&&o.enable(12),M.vertexUv1s&&o.enable(13),M.vertexUv2s&&o.enable(14),M.vertexUv3s&&o.enable(15),M.vertexTangents&&o.enable(16),M.anisotropy&&o.enable(17),v.push(o.mask),o.disableAll(),M.fog&&o.enable(0),M.useFog&&o.enable(1),M.flatShading&&o.enable(2),M.logarithmicDepthBuffer&&o.enable(3),M.skinning&&o.enable(4),M.morphTargets&&o.enable(5),M.morphNormals&&o.enable(6),M.morphColors&&o.enable(7),M.premultipliedAlpha&&o.enable(8),M.shadowMapEnabled&&o.enable(9),M.useLegacyLights&&o.enable(10),M.doubleSided&&o.enable(11),M.flipSided&&o.enable(12),M.useDepthPacking&&o.enable(13),M.dithering&&o.enable(14),M.transmission&&o.enable(15),M.sheen&&o.enable(16),M.opaque&&o.enable(17),M.pointsUvs&&o.enable(18),M.decodeVideoTexture&&o.enable(19),v.push(o.mask)}function L(v){const M=h[v.type];let q;if(M){const ie=Vt[M];q=bu.clone(ie.uniforms)}else q=v.uniforms;return q}function x(v,M){let q;for(let ie=0,F=u.length;ie<F;ie++){const H=u[ie];if(H.cacheKey===M){q=H,++q.usedTimes;break}}return q===void 0&&(q=new q_(a,M,v,r),u.push(q)),q}function P(v){if(--v.usedTimes===0){const M=u.indexOf(v);u[M]=u[u.length-1],u.pop(),v.destroy()}}function T(v){l.remove(v)}function W(){l.dispose()}return{getParameters:m,getProgramCacheKey:d,getUniforms:L,acquireProgram:x,releaseProgram:P,releaseShaderCache:T,programs:u,dispose:W}}function ep(){let a=new WeakMap;function e(r){let s=a.get(r);return s===void 0&&(s={},a.set(r,s)),s}function t(r){a.delete(r)}function n(r,s,o){a.get(r)[s]=o}function i(){a=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function tp(a,e){return a.groupOrder!==e.groupOrder?a.groupOrder-e.groupOrder:a.renderOrder!==e.renderOrder?a.renderOrder-e.renderOrder:a.material.id!==e.material.id?a.material.id-e.material.id:a.z!==e.z?a.z-e.z:a.id-e.id}function is(a,e){return a.groupOrder!==e.groupOrder?a.groupOrder-e.groupOrder:a.renderOrder!==e.renderOrder?a.renderOrder-e.renderOrder:a.z!==e.z?e.z-a.z:a.id-e.id}function rs(){const a=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}function s(_,p,f,h,y,m){let d=a[e];return d===void 0?(d={id:_.id,object:_,geometry:p,material:f,groupOrder:h,renderOrder:_.renderOrder,z:y,group:m},a[e]=d):(d.id=_.id,d.object=_,d.geometry=p,d.material=f,d.groupOrder=h,d.renderOrder=_.renderOrder,d.z=y,d.group=m),e++,d}function o(_,p,f,h,y,m){const d=s(_,p,f,h,y,m);f.transmission>0?n.push(d):f.transparent===!0?i.push(d):t.push(d)}function l(_,p,f,h,y,m){const d=s(_,p,f,h,y,m);f.transmission>0?n.unshift(d):f.transparent===!0?i.unshift(d):t.unshift(d)}function u(_,p){t.length>1&&t.sort(_||tp),n.length>1&&n.sort(p||is),i.length>1&&i.sort(p||is)}function c(){for(let _=e,p=a.length;_<p;_++){const f=a[_];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:n,transparent:i,init:r,push:o,unshift:l,finish:c,sort:u}}function np(){let a=new WeakMap;function e(n,i){const r=a.get(n);let s;return r===void 0?(s=new rs,a.set(n,[s])):i>=r.length?(s=new rs,r.push(s)):s=r[i],s}function t(){a=new WeakMap}return{get:e,dispose:t}}function ap(){const a={};return{get:function(e){if(a[e.id]!==void 0)return a[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new C,color:new Ge};break;case"SpotLight":t={position:new C,direction:new C,color:new Ge,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new C,color:new Ge,distance:0,decay:0};break;case"HemisphereLight":t={direction:new C,skyColor:new Ge,groundColor:new Ge};break;case"RectAreaLight":t={color:new Ge,position:new C,halfWidth:new C,halfHeight:new C};break}return a[e.id]=t,t}}}function ip(){const a={};return{get:function(e){if(a[e.id]!==void 0)return a[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ve};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ve};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ve,shadowCameraNear:1,shadowCameraFar:1e3};break}return a[e.id]=t,t}}}let rp=0;function op(a,e){return(e.castShadow?2:0)-(a.castShadow?2:0)+(e.map?1:0)-(a.map?1:0)}function sp(a,e){const t=new ap,n=ip(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let c=0;c<9;c++)i.probe.push(new C);const r=new C,s=new Ze,o=new Ze;function l(c,_){let p=0,f=0,h=0;for(let q=0;q<9;q++)i.probe[q].set(0,0,0);let y=0,m=0,d=0,E=0,b=0,L=0,x=0,P=0,T=0,W=0;c.sort(op);const v=_===!0?Math.PI:1;for(let q=0,ie=c.length;q<ie;q++){const F=c[q],H=F.color,G=F.intensity,Q=F.distance,X=F.shadow&&F.shadow.map?F.shadow.map.texture:null;if(F.isAmbientLight)p+=H.r*G*v,f+=H.g*G*v,h+=H.b*G*v;else if(F.isLightProbe)for(let Y=0;Y<9;Y++)i.probe[Y].addScaledVector(F.sh.coefficients[Y],G);else if(F.isDirectionalLight){const Y=t.get(F);if(Y.color.copy(F.color).multiplyScalar(F.intensity*v),F.castShadow){const j=F.shadow,J=n.get(F);J.shadowBias=j.bias,J.shadowNormalBias=j.normalBias,J.shadowRadius=j.radius,J.shadowMapSize=j.mapSize,i.directionalShadow[y]=J,i.directionalShadowMap[y]=X,i.directionalShadowMatrix[y]=F.shadow.matrix,L++}i.directional[y]=Y,y++}else if(F.isSpotLight){const Y=t.get(F);Y.position.setFromMatrixPosition(F.matrixWorld),Y.color.copy(H).multiplyScalar(G*v),Y.distance=Q,Y.coneCos=Math.cos(F.angle),Y.penumbraCos=Math.cos(F.angle*(1-F.penumbra)),Y.decay=F.decay,i.spot[d]=Y;const j=F.shadow;if(F.map&&(i.spotLightMap[T]=F.map,T++,j.updateMatrices(F),F.castShadow&&W++),i.spotLightMatrix[d]=j.matrix,F.castShadow){const J=n.get(F);J.shadowBias=j.bias,J.shadowNormalBias=j.normalBias,J.shadowRadius=j.radius,J.shadowMapSize=j.mapSize,i.spotShadow[d]=J,i.spotShadowMap[d]=X,P++}d++}else if(F.isRectAreaLight){const Y=t.get(F);Y.color.copy(H).multiplyScalar(G),Y.halfWidth.set(F.width*.5,0,0),Y.halfHeight.set(0,F.height*.5,0),i.rectArea[E]=Y,E++}else if(F.isPointLight){const Y=t.get(F);if(Y.color.copy(F.color).multiplyScalar(F.intensity*v),Y.distance=F.distance,Y.decay=F.decay,F.castShadow){const j=F.shadow,J=n.get(F);J.shadowBias=j.bias,J.shadowNormalBias=j.normalBias,J.shadowRadius=j.radius,J.shadowMapSize=j.mapSize,J.shadowCameraNear=j.camera.near,J.shadowCameraFar=j.camera.far,i.pointShadow[m]=J,i.pointShadowMap[m]=X,i.pointShadowMatrix[m]=F.shadow.matrix,x++}i.point[m]=Y,m++}else if(F.isHemisphereLight){const Y=t.get(F);Y.skyColor.copy(F.color).multiplyScalar(G*v),Y.groundColor.copy(F.groundColor).multiplyScalar(G*v),i.hemi[b]=Y,b++}}E>0&&(e.isWebGL2||a.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=se.LTC_FLOAT_1,i.rectAreaLTC2=se.LTC_FLOAT_2):a.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=se.LTC_HALF_1,i.rectAreaLTC2=se.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=p,i.ambient[1]=f,i.ambient[2]=h;const M=i.hash;(M.directionalLength!==y||M.pointLength!==m||M.spotLength!==d||M.rectAreaLength!==E||M.hemiLength!==b||M.numDirectionalShadows!==L||M.numPointShadows!==x||M.numSpotShadows!==P||M.numSpotMaps!==T)&&(i.directional.length=y,i.spot.length=d,i.rectArea.length=E,i.point.length=m,i.hemi.length=b,i.directionalShadow.length=L,i.directionalShadowMap.length=L,i.pointShadow.length=x,i.pointShadowMap.length=x,i.spotShadow.length=P,i.spotShadowMap.length=P,i.directionalShadowMatrix.length=L,i.pointShadowMatrix.length=x,i.spotLightMatrix.length=P+T-W,i.spotLightMap.length=T,i.numSpotLightShadowsWithMaps=W,M.directionalLength=y,M.pointLength=m,M.spotLength=d,M.rectAreaLength=E,M.hemiLength=b,M.numDirectionalShadows=L,M.numPointShadows=x,M.numSpotShadows=P,M.numSpotMaps=T,i.version=rp++)}function u(c,_){let p=0,f=0,h=0,y=0,m=0;const d=_.matrixWorldInverse;for(let E=0,b=c.length;E<b;E++){const L=c[E];if(L.isDirectionalLight){const x=i.directional[p];x.direction.setFromMatrixPosition(L.matrixWorld),r.setFromMatrixPosition(L.target.matrixWorld),x.direction.sub(r),x.direction.transformDirection(d),p++}else if(L.isSpotLight){const x=i.spot[h];x.position.setFromMatrixPosition(L.matrixWorld),x.position.applyMatrix4(d),x.direction.setFromMatrixPosition(L.matrixWorld),r.setFromMatrixPosition(L.target.matrixWorld),x.direction.sub(r),x.direction.transformDirection(d),h++}else if(L.isRectAreaLight){const x=i.rectArea[y];x.position.setFromMatrixPosition(L.matrixWorld),x.position.applyMatrix4(d),o.identity(),s.copy(L.matrixWorld),s.premultiply(d),o.extractRotation(s),x.halfWidth.set(L.width*.5,0,0),x.halfHeight.set(0,L.height*.5,0),x.halfWidth.applyMatrix4(o),x.halfHeight.applyMatrix4(o),y++}else if(L.isPointLight){const x=i.point[f];x.position.setFromMatrixPosition(L.matrixWorld),x.position.applyMatrix4(d),f++}else if(L.isHemisphereLight){const x=i.hemi[m];x.direction.setFromMatrixPosition(L.matrixWorld),x.direction.transformDirection(d),m++}}}return{setup:l,setupView:u,state:i}}function os(a,e){const t=new sp(a,e),n=[],i=[];function r(){n.length=0,i.length=0}function s(_){n.push(_)}function o(_){i.push(_)}function l(_){t.setup(n,_)}function u(_){t.setupView(n,_)}return{init:r,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:l,setupLightsView:u,pushLight:s,pushShadow:o}}function lp(a,e){let t=new WeakMap;function n(r,s=0){const o=t.get(r);let l;return o===void 0?(l=new os(a,e),t.set(r,[l])):s>=o.length?(l=new os(a,e),o.push(l)):l=o[s],l}function i(){t=new WeakMap}return{get:n,dispose:i}}class up extends xn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Al,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class cp extends xn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const dp=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,_p=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function pp(a,e,t){let n=new ji;const i=new ve,r=new ve,s=new Ye,o=new up({depthPacking:Sl}),l=new cp,u={},c=t.maxTextureSize,_={[an]:vt,[vt]:an,[Kt]:Kt},p=new Tn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ve},radius:{value:4}},vertexShader:dp,fragmentShader:_p}),f=p.clone();f.defines.HORIZONTAL_PASS=1;const h=new xt;h.setAttribute("position",new Mt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const y=new tn(h,p),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=gr;let d=this.type;this.render=function(x,P,T){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||x.length===0)return;const W=a.getRenderTarget(),v=a.getActiveCubeFace(),M=a.getActiveMipmapLevel(),q=a.state;q.setBlending(rn),q.buffers.color.setClear(1,1,1,1),q.buffers.depth.setTest(!0),q.setScissorTest(!1);const ie=d!==Xt&&this.type===Xt,F=d===Xt&&this.type!==Xt;for(let H=0,G=x.length;H<G;H++){const Q=x[H],X=Q.shadow;if(X===void 0){console.warn("THREE.WebGLShadowMap:",Q,"has no shadow.");continue}if(X.autoUpdate===!1&&X.needsUpdate===!1)continue;i.copy(X.mapSize);const Y=X.getFrameExtents();if(i.multiply(Y),r.copy(X.mapSize),(i.x>c||i.y>c)&&(i.x>c&&(r.x=Math.floor(c/Y.x),i.x=r.x*Y.x,X.mapSize.x=r.x),i.y>c&&(r.y=Math.floor(c/Y.y),i.y=r.y*Y.y,X.mapSize.y=r.y)),X.map===null||ie===!0||F===!0){const J=this.type!==Xt?{minFilter:ft,magFilter:ft}:{};X.map!==null&&X.map.dispose(),X.map=new An(i.x,i.y,J),X.map.texture.name=Q.name+".shadowMap",X.camera.updateProjectionMatrix()}a.setRenderTarget(X.map),a.clear();const j=X.getViewportCount();for(let J=0;J<j;J++){const U=X.getViewport(J);s.set(r.x*U.x,r.y*U.y,r.x*U.z,r.y*U.w),q.viewport(s),X.updateMatrices(Q,J),n=X.getFrustum(),L(P,T,X.camera,Q,this.type)}X.isPointLightShadow!==!0&&this.type===Xt&&E(X,T),X.needsUpdate=!1}d=this.type,m.needsUpdate=!1,a.setRenderTarget(W,v,M)};function E(x,P){const T=e.update(y);p.defines.VSM_SAMPLES!==x.blurSamples&&(p.defines.VSM_SAMPLES=x.blurSamples,f.defines.VSM_SAMPLES=x.blurSamples,p.needsUpdate=!0,f.needsUpdate=!0),x.mapPass===null&&(x.mapPass=new An(i.x,i.y)),p.uniforms.shadow_pass.value=x.map.texture,p.uniforms.resolution.value=x.mapSize,p.uniforms.radius.value=x.radius,a.setRenderTarget(x.mapPass),a.clear(),a.renderBufferDirect(P,null,T,p,y,null),f.uniforms.shadow_pass.value=x.mapPass.texture,f.uniforms.resolution.value=x.mapSize,f.uniforms.radius.value=x.radius,a.setRenderTarget(x.map),a.clear(),a.renderBufferDirect(P,null,T,f,y,null)}function b(x,P,T,W){let v=null;const M=T.isPointLight===!0?x.customDistanceMaterial:x.customDepthMaterial;if(M!==void 0)v=M;else if(v=T.isPointLight===!0?l:o,a.localClippingEnabled&&P.clipShadows===!0&&Array.isArray(P.clippingPlanes)&&P.clippingPlanes.length!==0||P.displacementMap&&P.displacementScale!==0||P.alphaMap&&P.alphaTest>0||P.map&&P.alphaTest>0){const q=v.uuid,ie=P.uuid;let F=u[q];F===void 0&&(F={},u[q]=F);let H=F[ie];H===void 0&&(H=v.clone(),F[ie]=H),v=H}if(v.visible=P.visible,v.wireframe=P.wireframe,W===Xt?v.side=P.shadowSide!==null?P.shadowSide:P.side:v.side=P.shadowSide!==null?P.shadowSide:_[P.side],v.alphaMap=P.alphaMap,v.alphaTest=P.alphaTest,v.map=P.map,v.clipShadows=P.clipShadows,v.clippingPlanes=P.clippingPlanes,v.clipIntersection=P.clipIntersection,v.displacementMap=P.displacementMap,v.displacementScale=P.displacementScale,v.displacementBias=P.displacementBias,v.wireframeLinewidth=P.wireframeLinewidth,v.linewidth=P.linewidth,T.isPointLight===!0&&v.isMeshDistanceMaterial===!0){const q=a.properties.get(v);q.light=T}return v}function L(x,P,T,W,v){if(x.visible===!1)return;if(x.layers.test(P.layers)&&(x.isMesh||x.isLine||x.isPoints)&&(x.castShadow||x.receiveShadow&&v===Xt)&&(!x.frustumCulled||n.intersectsObject(x))){x.modelViewMatrix.multiplyMatrices(T.matrixWorldInverse,x.matrixWorld);const ie=e.update(x),F=x.material;if(Array.isArray(F)){const H=ie.groups;for(let G=0,Q=H.length;G<Q;G++){const X=H[G],Y=F[X.materialIndex];if(Y&&Y.visible){const j=b(x,Y,W,v);a.renderBufferDirect(T,null,ie,j,x,X)}}}else if(F.visible){const H=b(x,F,W,v);a.renderBufferDirect(T,null,ie,H,x,null)}}const q=x.children;for(let ie=0,F=q.length;ie<F;ie++)L(q[ie],P,T,W,v)}}function mp(a,e,t){const n=t.isWebGL2;function i(){let R=!1;const le=new Ye;let B=null;const ee=new Ye(0,0,0,0);return{setMask:function(re){B!==re&&!R&&(a.colorMask(re,re,re,re),B=re)},setLocked:function(re){R=re},setClear:function(re,De,He,Ve,Tt){Tt===!0&&(re*=Ve,De*=Ve,He*=Ve),le.set(re,De,He,Ve),ee.equals(le)===!1&&(a.clearColor(re,De,He,Ve),ee.copy(le))},reset:function(){R=!1,B=null,ee.set(-1,0,0,0)}}}function r(){let R=!1,le=null,B=null,ee=null;return{setTest:function(re){re?xe(a.DEPTH_TEST):he(a.DEPTH_TEST)},setMask:function(re){le!==re&&!R&&(a.depthMask(re),le=re)},setFunc:function(re){if(B!==re){switch(re){case Js:a.depthFunc(a.NEVER);break;case $s:a.depthFunc(a.ALWAYS);break;case Qs:a.depthFunc(a.LESS);break;case fi:a.depthFunc(a.LEQUAL);break;case el:a.depthFunc(a.EQUAL);break;case tl:a.depthFunc(a.GEQUAL);break;case nl:a.depthFunc(a.GREATER);break;case al:a.depthFunc(a.NOTEQUAL);break;default:a.depthFunc(a.LEQUAL)}B=re}},setLocked:function(re){R=re},setClear:function(re){ee!==re&&(a.clearDepth(re),ee=re)},reset:function(){R=!1,le=null,B=null,ee=null}}}function s(){let R=!1,le=null,B=null,ee=null,re=null,De=null,He=null,Ve=null,Tt=null;return{setTest:function(Xe){R||(Xe?xe(a.STENCIL_TEST):he(a.STENCIL_TEST))},setMask:function(Xe){le!==Xe&&!R&&(a.stencilMask(Xe),le=Xe)},setFunc:function(Xe,Wt,bt){(B!==Xe||ee!==Wt||re!==bt)&&(a.stencilFunc(Xe,Wt,bt),B=Xe,ee=Wt,re=bt)},setOp:function(Xe,Wt,bt){(De!==Xe||He!==Wt||Ve!==bt)&&(a.stencilOp(Xe,Wt,bt),De=Xe,He=Wt,Ve=bt)},setLocked:function(Xe){R=Xe},setClear:function(Xe){Tt!==Xe&&(a.clearStencil(Xe),Tt=Xe)},reset:function(){R=!1,le=null,B=null,ee=null,re=null,De=null,He=null,Ve=null,Tt=null}}}const o=new i,l=new r,u=new s,c=new WeakMap,_=new WeakMap;let p={},f={},h=new WeakMap,y=[],m=null,d=!1,E=null,b=null,L=null,x=null,P=null,T=null,W=null,v=!1,M=null,q=null,ie=null,F=null,H=null;const G=a.getParameter(a.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let Q=!1,X=0;const Y=a.getParameter(a.VERSION);Y.indexOf("WebGL")!==-1?(X=parseFloat(/^WebGL (\d)/.exec(Y)[1]),Q=X>=1):Y.indexOf("OpenGL ES")!==-1&&(X=parseFloat(/^OpenGL ES (\d)/.exec(Y)[1]),Q=X>=2);let j=null,J={};const U=a.getParameter(a.SCISSOR_BOX),K=a.getParameter(a.VIEWPORT),de=new Ye().fromArray(U),_e=new Ye().fromArray(K);function pe(R,le,B,ee){const re=new Uint8Array(4),De=a.createTexture();a.bindTexture(R,De),a.texParameteri(R,a.TEXTURE_MIN_FILTER,a.NEAREST),a.texParameteri(R,a.TEXTURE_MAG_FILTER,a.NEAREST);for(let He=0;He<B;He++)n&&(R===a.TEXTURE_3D||R===a.TEXTURE_2D_ARRAY)?a.texImage3D(le,0,a.RGBA,1,1,ee,0,a.RGBA,a.UNSIGNED_BYTE,re):a.texImage2D(le+He,0,a.RGBA,1,1,0,a.RGBA,a.UNSIGNED_BYTE,re);return De}const ye={};ye[a.TEXTURE_2D]=pe(a.TEXTURE_2D,a.TEXTURE_2D,1),ye[a.TEXTURE_CUBE_MAP]=pe(a.TEXTURE_CUBE_MAP,a.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(ye[a.TEXTURE_2D_ARRAY]=pe(a.TEXTURE_2D_ARRAY,a.TEXTURE_2D_ARRAY,1,1),ye[a.TEXTURE_3D]=pe(a.TEXTURE_3D,a.TEXTURE_3D,1,1)),o.setClear(0,0,0,1),l.setClear(1),u.setClear(0),xe(a.DEPTH_TEST),l.setFunc(fi),Se(!1),We(hr),xe(a.CULL_FACE),ge(rn);function xe(R){p[R]!==!0&&(a.enable(R),p[R]=!0)}function he(R){p[R]!==!1&&(a.disable(R),p[R]=!1)}function Be(R,le){return f[R]!==le?(a.bindFramebuffer(R,le),f[R]=le,n&&(R===a.DRAW_FRAMEBUFFER&&(f[a.FRAMEBUFFER]=le),R===a.FRAMEBUFFER&&(f[a.DRAW_FRAMEBUFFER]=le)),!0):!1}function ut(R,le){let B=y,ee=!1;if(R)if(B=h.get(le),B===void 0&&(B=[],h.set(le,B)),R.isWebGLMultipleRenderTargets){const re=R.texture;if(B.length!==re.length||B[0]!==a.COLOR_ATTACHMENT0){for(let De=0,He=re.length;De<He;De++)B[De]=a.COLOR_ATTACHMENT0+De;B.length=re.length,ee=!0}}else B[0]!==a.COLOR_ATTACHMENT0&&(B[0]=a.COLOR_ATTACHMENT0,ee=!0);else B[0]!==a.BACK&&(B[0]=a.BACK,ee=!0);ee&&(t.isWebGL2?a.drawBuffers(B):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(B))}function Ce(R){return m!==R?(a.useProgram(R),m=R,!0):!1}const k={[Un]:a.FUNC_ADD,[Gs]:a.FUNC_SUBTRACT,[Hs]:a.FUNC_REVERSE_SUBTRACT};if(n)k[Ar]=a.MIN,k[Sr]=a.MAX;else{const R=e.get("EXT_blend_minmax");R!==null&&(k[Ar]=R.MIN_EXT,k[Sr]=R.MAX_EXT)}const it={[zs]:a.ZERO,[Vs]:a.ONE,[Ws]:a.SRC_COLOR,[Mr]:a.SRC_ALPHA,[js]:a.SRC_ALPHA_SATURATE,[Zs]:a.DST_COLOR,[Ks]:a.DST_ALPHA,[Xs]:a.ONE_MINUS_SRC_COLOR,[Er]:a.ONE_MINUS_SRC_ALPHA,[qs]:a.ONE_MINUS_DST_COLOR,[Ys]:a.ONE_MINUS_DST_ALPHA};function ge(R,le,B,ee,re,De,He,Ve){if(R===rn){d===!0&&(he(a.BLEND),d=!1);return}if(d===!1&&(xe(a.BLEND),d=!0),R!==Fs){if(R!==E||Ve!==v){if((b!==Un||P!==Un)&&(a.blendEquation(a.FUNC_ADD),b=Un,P=Un),Ve)switch(R){case Dn:a.blendFuncSeparate(a.ONE,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA);break;case br:a.blendFunc(a.ONE,a.ONE);break;case yr:a.blendFuncSeparate(a.ZERO,a.ONE_MINUS_SRC_COLOR,a.ZERO,a.ONE);break;case vr:a.blendFuncSeparate(a.ZERO,a.SRC_COLOR,a.ZERO,a.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",R);break}else switch(R){case Dn:a.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA);break;case br:a.blendFunc(a.SRC_ALPHA,a.ONE);break;case yr:a.blendFuncSeparate(a.ZERO,a.ONE_MINUS_SRC_COLOR,a.ZERO,a.ONE);break;case vr:a.blendFunc(a.ZERO,a.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",R);break}L=null,x=null,T=null,W=null,E=R,v=Ve}return}re=re||le,De=De||B,He=He||ee,(le!==b||re!==P)&&(a.blendEquationSeparate(k[le],k[re]),b=le,P=re),(B!==L||ee!==x||De!==T||He!==W)&&(a.blendFuncSeparate(it[B],it[ee],it[De],it[He]),L=B,x=ee,T=De,W=He),E=R,v=!1}function Te(R,le){R.side===Kt?he(a.CULL_FACE):xe(a.CULL_FACE);let B=R.side===vt;le&&(B=!B),Se(B),R.blending===Dn&&R.transparent===!1?ge(rn):ge(R.blending,R.blendEquation,R.blendSrc,R.blendDst,R.blendEquationAlpha,R.blendSrcAlpha,R.blendDstAlpha,R.premultipliedAlpha),l.setFunc(R.depthFunc),l.setTest(R.depthTest),l.setMask(R.depthWrite),o.setMask(R.colorWrite);const ee=R.stencilWrite;u.setTest(ee),ee&&(u.setMask(R.stencilWriteMask),u.setFunc(R.stencilFunc,R.stencilRef,R.stencilFuncMask),u.setOp(R.stencilFail,R.stencilZFail,R.stencilZPass)),Le(R.polygonOffset,R.polygonOffsetFactor,R.polygonOffsetUnits),R.alphaToCoverage===!0?xe(a.SAMPLE_ALPHA_TO_COVERAGE):he(a.SAMPLE_ALPHA_TO_COVERAGE)}function Se(R){M!==R&&(R?a.frontFace(a.CW):a.frontFace(a.CCW),M=R)}function We(R){R!==Is?(xe(a.CULL_FACE),R!==q&&(R===hr?a.cullFace(a.BACK):R===Os?a.cullFace(a.FRONT):a.cullFace(a.FRONT_AND_BACK))):he(a.CULL_FACE),q=R}function ke(R){R!==ie&&(Q&&a.lineWidth(R),ie=R)}function Le(R,le,B){R?(xe(a.POLYGON_OFFSET_FILL),(F!==le||H!==B)&&(a.polygonOffset(le,B),F=le,H=B)):he(a.POLYGON_OFFSET_FILL)}function Fe(R){R?xe(a.SCISSOR_TEST):he(a.SCISSOR_TEST)}function rt(R){R===void 0&&(R=a.TEXTURE0+G-1),j!==R&&(a.activeTexture(R),j=R)}function st(R,le,B){B===void 0&&(j===null?B=a.TEXTURE0+G-1:B=j);let ee=J[B];ee===void 0&&(ee={type:void 0,texture:void 0},J[B]=ee),(ee.type!==R||ee.texture!==le)&&(j!==B&&(a.activeTexture(B),j=B),a.bindTexture(R,le||ye[R]),ee.type=R,ee.texture=le)}function S(){const R=J[j];R!==void 0&&R.type!==void 0&&(a.bindTexture(R.type,null),R.type=void 0,R.texture=void 0)}function g(){try{a.compressedTexImage2D.apply(a,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function I(){try{a.compressedTexImage3D.apply(a,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function te(){try{a.texSubImage2D.apply(a,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function $(){try{a.texSubImage3D.apply(a,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function ne(){try{a.compressedTexSubImage2D.apply(a,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function fe(){try{a.compressedTexSubImage3D.apply(a,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function ae(){try{a.texStorage2D.apply(a,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function O(){try{a.texStorage3D.apply(a,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function w(){try{a.texImage2D.apply(a,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function Z(){try{a.texImage3D.apply(a,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function ce(R){de.equals(R)===!1&&(a.scissor(R.x,R.y,R.z,R.w),de.copy(R))}function oe(R){_e.equals(R)===!1&&(a.viewport(R.x,R.y,R.z,R.w),_e.copy(R))}function ue(R,le){let B=_.get(le);B===void 0&&(B=new WeakMap,_.set(le,B));let ee=B.get(R);ee===void 0&&(ee=a.getUniformBlockIndex(le,R.name),B.set(R,ee))}function we(R,le){const ee=_.get(le).get(R);c.get(le)!==ee&&(a.uniformBlockBinding(le,ee,R.__bindingPointIndex),c.set(le,ee))}function Oe(){a.disable(a.BLEND),a.disable(a.CULL_FACE),a.disable(a.DEPTH_TEST),a.disable(a.POLYGON_OFFSET_FILL),a.disable(a.SCISSOR_TEST),a.disable(a.STENCIL_TEST),a.disable(a.SAMPLE_ALPHA_TO_COVERAGE),a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ONE,a.ZERO),a.blendFuncSeparate(a.ONE,a.ZERO,a.ONE,a.ZERO),a.colorMask(!0,!0,!0,!0),a.clearColor(0,0,0,0),a.depthMask(!0),a.depthFunc(a.LESS),a.clearDepth(1),a.stencilMask(4294967295),a.stencilFunc(a.ALWAYS,0,4294967295),a.stencilOp(a.KEEP,a.KEEP,a.KEEP),a.clearStencil(0),a.cullFace(a.BACK),a.frontFace(a.CCW),a.polygonOffset(0,0),a.activeTexture(a.TEXTURE0),a.bindFramebuffer(a.FRAMEBUFFER,null),n===!0&&(a.bindFramebuffer(a.DRAW_FRAMEBUFFER,null),a.bindFramebuffer(a.READ_FRAMEBUFFER,null)),a.useProgram(null),a.lineWidth(1),a.scissor(0,0,a.canvas.width,a.canvas.height),a.viewport(0,0,a.canvas.width,a.canvas.height),p={},j=null,J={},f={},h=new WeakMap,y=[],m=null,d=!1,E=null,b=null,L=null,x=null,P=null,T=null,W=null,v=!1,M=null,q=null,ie=null,F=null,H=null,de.set(0,0,a.canvas.width,a.canvas.height),_e.set(0,0,a.canvas.width,a.canvas.height),o.reset(),l.reset(),u.reset()}return{buffers:{color:o,depth:l,stencil:u},enable:xe,disable:he,bindFramebuffer:Be,drawBuffers:ut,useProgram:Ce,setBlending:ge,setMaterial:Te,setFlipSided:Se,setCullFace:We,setLineWidth:ke,setPolygonOffset:Le,setScissorTest:Fe,activeTexture:rt,bindTexture:st,unbindTexture:S,compressedTexImage2D:g,compressedTexImage3D:I,texImage2D:w,texImage3D:Z,updateUBOMapping:ue,uniformBlockBinding:we,texStorage2D:ae,texStorage3D:O,texSubImage2D:te,texSubImage3D:$,compressedTexSubImage2D:ne,compressedTexSubImage3D:fe,scissor:ce,viewport:oe,reset:Oe}}function fp(a,e,t,n,i,r,s){const o=i.isWebGL2,l=i.maxTextures,u=i.maxCubemapSize,c=i.maxTextureSize,_=i.maxSamples,p=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,f=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),h=new WeakMap;let y;const m=new WeakMap;let d=!1;try{d=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function E(S,g){return d?new OffscreenCanvas(S,g):Da("canvas")}function b(S,g,I,te){let $=1;if((S.width>te||S.height>te)&&($=te/Math.max(S.width,S.height)),$<1||g===!0)if(typeof HTMLImageElement<"u"&&S instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&S instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&S instanceof ImageBitmap){const ne=g?ka:Math.floor,fe=ne($*S.width),ae=ne($*S.height);y===void 0&&(y=E(fe,ae));const O=I?E(fe,ae):y;return O.width=fe,O.height=ae,O.getContext("2d").drawImage(S,0,0,fe,ae),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+S.width+"x"+S.height+") to ("+fe+"x"+ae+")."),O}else return"data"in S&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+S.width+"x"+S.height+")."),S;return S}function L(S){return Pi(S.width)&&Pi(S.height)}function x(S){return o?!1:S.wrapS!==Dt||S.wrapT!==Dt||S.minFilter!==ft&&S.minFilter!==Ct}function P(S,g){return S.generateMipmaps&&g&&S.minFilter!==ft&&S.minFilter!==Ct}function T(S){a.generateMipmap(S)}function W(S,g,I,te,$=!1){if(o===!1)return g;if(S!==null){if(a[S]!==void 0)return a[S];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+S+"'")}let ne=g;return g===a.RED&&(I===a.FLOAT&&(ne=a.R32F),I===a.HALF_FLOAT&&(ne=a.R16F),I===a.UNSIGNED_BYTE&&(ne=a.R8)),g===a.RED_INTEGER&&(I===a.UNSIGNED_BYTE&&(ne=a.R8UI),I===a.UNSIGNED_SHORT&&(ne=a.R16UI),I===a.UNSIGNED_INT&&(ne=a.R32UI),I===a.BYTE&&(ne=a.R8I),I===a.SHORT&&(ne=a.R16I),I===a.INT&&(ne=a.R32I)),g===a.RG&&(I===a.FLOAT&&(ne=a.RG32F),I===a.HALF_FLOAT&&(ne=a.RG16F),I===a.UNSIGNED_BYTE&&(ne=a.RG8)),g===a.RGBA&&(I===a.FLOAT&&(ne=a.RGBA32F),I===a.HALF_FLOAT&&(ne=a.RGBA16F),I===a.UNSIGNED_BYTE&&(ne=te===Ke&&$===!1?a.SRGB8_ALPHA8:a.RGBA8),I===a.UNSIGNED_SHORT_4_4_4_4&&(ne=a.RGBA4),I===a.UNSIGNED_SHORT_5_5_5_1&&(ne=a.RGB5_A1)),(ne===a.R16F||ne===a.R32F||ne===a.RG16F||ne===a.RG32F||ne===a.RGBA16F||ne===a.RGBA32F)&&e.get("EXT_color_buffer_float"),ne}function v(S,g,I){return P(S,I)===!0||S.isFramebufferTexture&&S.minFilter!==ft&&S.minFilter!==Ct?Math.log2(Math.max(g.width,g.height))+1:S.mipmaps!==void 0&&S.mipmaps.length>0?S.mipmaps.length:S.isCompressedTexture&&Array.isArray(S.image)?g.mipmaps.length:1}function M(S){return S===ft||S===Tr||S===vi?a.NEAREST:a.LINEAR}function q(S){const g=S.target;g.removeEventListener("dispose",q),F(g),g.isVideoTexture&&h.delete(g)}function ie(S){const g=S.target;g.removeEventListener("dispose",ie),G(g)}function F(S){const g=n.get(S);if(g.__webglInit===void 0)return;const I=S.source,te=m.get(I);if(te){const $=te[g.__cacheKey];$.usedTimes--,$.usedTimes===0&&H(S),Object.keys(te).length===0&&m.delete(I)}n.remove(S)}function H(S){const g=n.get(S);a.deleteTexture(g.__webglTexture);const I=S.source,te=m.get(I);delete te[g.__cacheKey],s.memory.textures--}function G(S){const g=S.texture,I=n.get(S),te=n.get(g);if(te.__webglTexture!==void 0&&(a.deleteTexture(te.__webglTexture),s.memory.textures--),S.depthTexture&&S.depthTexture.dispose(),S.isWebGLCubeRenderTarget)for(let $=0;$<6;$++){if(Array.isArray(I.__webglFramebuffer[$]))for(let ne=0;ne<I.__webglFramebuffer[$].length;ne++)a.deleteFramebuffer(I.__webglFramebuffer[$][ne]);else a.deleteFramebuffer(I.__webglFramebuffer[$]);I.__webglDepthbuffer&&a.deleteRenderbuffer(I.__webglDepthbuffer[$])}else{if(Array.isArray(I.__webglFramebuffer))for(let $=0;$<I.__webglFramebuffer.length;$++)a.deleteFramebuffer(I.__webglFramebuffer[$]);else a.deleteFramebuffer(I.__webglFramebuffer);if(I.__webglDepthbuffer&&a.deleteRenderbuffer(I.__webglDepthbuffer),I.__webglMultisampledFramebuffer&&a.deleteFramebuffer(I.__webglMultisampledFramebuffer),I.__webglColorRenderbuffer)for(let $=0;$<I.__webglColorRenderbuffer.length;$++)I.__webglColorRenderbuffer[$]&&a.deleteRenderbuffer(I.__webglColorRenderbuffer[$]);I.__webglDepthRenderbuffer&&a.deleteRenderbuffer(I.__webglDepthRenderbuffer)}if(S.isWebGLMultipleRenderTargets)for(let $=0,ne=g.length;$<ne;$++){const fe=n.get(g[$]);fe.__webglTexture&&(a.deleteTexture(fe.__webglTexture),s.memory.textures--),n.remove(g[$])}n.remove(g),n.remove(S)}let Q=0;function X(){Q=0}function Y(){const S=Q;return S>=l&&console.warn("THREE.WebGLTextures: Trying to use "+S+" texture units while this GPU supports only "+l),Q+=1,S}function j(S){const g=[];return g.push(S.wrapS),g.push(S.wrapT),g.push(S.wrapR||0),g.push(S.magFilter),g.push(S.minFilter),g.push(S.anisotropy),g.push(S.internalFormat),g.push(S.format),g.push(S.type),g.push(S.generateMipmaps),g.push(S.premultiplyAlpha),g.push(S.flipY),g.push(S.unpackAlignment),g.push(S.colorSpace),g.join()}function J(S,g){const I=n.get(S);if(S.isVideoTexture&&rt(S),S.isRenderTargetTexture===!1&&S.version>0&&I.__version!==S.version){const te=S.image;if(te===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(te.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Be(I,S,g);return}}t.bindTexture(a.TEXTURE_2D,I.__webglTexture,a.TEXTURE0+g)}function U(S,g){const I=n.get(S);if(S.version>0&&I.__version!==S.version){Be(I,S,g);return}t.bindTexture(a.TEXTURE_2D_ARRAY,I.__webglTexture,a.TEXTURE0+g)}function K(S,g){const I=n.get(S);if(S.version>0&&I.__version!==S.version){Be(I,S,g);return}t.bindTexture(a.TEXTURE_3D,I.__webglTexture,a.TEXTURE0+g)}function de(S,g){const I=n.get(S);if(S.version>0&&I.__version!==S.version){ut(I,S,g);return}t.bindTexture(a.TEXTURE_CUBE_MAP,I.__webglTexture,a.TEXTURE0+g)}const _e={[bi]:a.REPEAT,[Dt]:a.CLAMP_TO_EDGE,[yi]:a.MIRRORED_REPEAT},pe={[ft]:a.NEAREST,[Tr]:a.NEAREST_MIPMAP_NEAREST,[vi]:a.NEAREST_MIPMAP_LINEAR,[Ct]:a.LINEAR,[dl]:a.LINEAR_MIPMAP_NEAREST,[ca]:a.LINEAR_MIPMAP_LINEAR},ye={[wl]:a.NEVER,[kl]:a.ALWAYS,[Tl]:a.LESS,[Rl]:a.LEQUAL,[Ll]:a.EQUAL,[Nl]:a.GEQUAL,[Cl]:a.GREATER,[Pl]:a.NOTEQUAL};function xe(S,g,I){if(I?(a.texParameteri(S,a.TEXTURE_WRAP_S,_e[g.wrapS]),a.texParameteri(S,a.TEXTURE_WRAP_T,_e[g.wrapT]),(S===a.TEXTURE_3D||S===a.TEXTURE_2D_ARRAY)&&a.texParameteri(S,a.TEXTURE_WRAP_R,_e[g.wrapR]),a.texParameteri(S,a.TEXTURE_MAG_FILTER,pe[g.magFilter]),a.texParameteri(S,a.TEXTURE_MIN_FILTER,pe[g.minFilter])):(a.texParameteri(S,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(S,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE),(S===a.TEXTURE_3D||S===a.TEXTURE_2D_ARRAY)&&a.texParameteri(S,a.TEXTURE_WRAP_R,a.CLAMP_TO_EDGE),(g.wrapS!==Dt||g.wrapT!==Dt)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),a.texParameteri(S,a.TEXTURE_MAG_FILTER,M(g.magFilter)),a.texParameteri(S,a.TEXTURE_MIN_FILTER,M(g.minFilter)),g.minFilter!==ft&&g.minFilter!==Ct&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),g.compareFunction&&(a.texParameteri(S,a.TEXTURE_COMPARE_MODE,a.COMPARE_REF_TO_TEXTURE),a.texParameteri(S,a.TEXTURE_COMPARE_FUNC,ye[g.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const te=e.get("EXT_texture_filter_anisotropic");if(g.magFilter===ft||g.minFilter!==vi&&g.minFilter!==ca||g.type===un&&e.has("OES_texture_float_linear")===!1||o===!1&&g.type===da&&e.has("OES_texture_half_float_linear")===!1)return;(g.anisotropy>1||n.get(g).__currentAnisotropy)&&(a.texParameterf(S,te.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(g.anisotropy,i.getMaxAnisotropy())),n.get(g).__currentAnisotropy=g.anisotropy)}}function he(S,g){let I=!1;S.__webglInit===void 0&&(S.__webglInit=!0,g.addEventListener("dispose",q));const te=g.source;let $=m.get(te);$===void 0&&($={},m.set(te,$));const ne=j(g);if(ne!==S.__cacheKey){$[ne]===void 0&&($[ne]={texture:a.createTexture(),usedTimes:0},s.memory.textures++,I=!0),$[ne].usedTimes++;const fe=$[S.__cacheKey];fe!==void 0&&($[S.__cacheKey].usedTimes--,fe.usedTimes===0&&H(g)),S.__cacheKey=ne,S.__webglTexture=$[ne].texture}return I}function Be(S,g,I){let te=a.TEXTURE_2D;(g.isDataArrayTexture||g.isCompressedArrayTexture)&&(te=a.TEXTURE_2D_ARRAY),g.isData3DTexture&&(te=a.TEXTURE_3D);const $=he(S,g),ne=g.source;t.bindTexture(te,S.__webglTexture,a.TEXTURE0+I);const fe=n.get(ne);if(ne.version!==fe.__version||$===!0){t.activeTexture(a.TEXTURE0+I),a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,g.flipY),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,g.premultiplyAlpha),a.pixelStorei(a.UNPACK_ALIGNMENT,g.unpackAlignment),a.pixelStorei(a.UNPACK_COLORSPACE_CONVERSION_WEBGL,a.NONE);const ae=x(g)&&L(g.image)===!1;let O=b(g.image,ae,!1,c);O=st(g,O);const w=L(O)||o,Z=r.convert(g.format,g.colorSpace);let ce=r.convert(g.type),oe=W(g.internalFormat,Z,ce,g.colorSpace,g.isVideoTexture);xe(te,g,w);let ue;const we=g.mipmaps,Oe=o&&g.isVideoTexture!==!0,R=fe.__version===void 0||$===!0,le=v(g,O,w);if(g.isDepthTexture)oe=a.DEPTH_COMPONENT,o?g.type===un?oe=a.DEPTH_COMPONENT32F:g.type===ln?oe=a.DEPTH_COMPONENT24:g.type===hn?oe=a.DEPTH24_STENCIL8:oe=a.DEPTH_COMPONENT16:g.type===un&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),g.format===gn&&oe===a.DEPTH_COMPONENT&&g.type!==Ai&&g.type!==ln&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),g.type=ln,ce=r.convert(g.type)),g.format===Bn&&oe===a.DEPTH_COMPONENT&&(oe=a.DEPTH_STENCIL,g.type!==hn&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),g.type=hn,ce=r.convert(g.type))),R&&(Oe?t.texStorage2D(a.TEXTURE_2D,1,oe,O.width,O.height):t.texImage2D(a.TEXTURE_2D,0,oe,O.width,O.height,0,Z,ce,null));else if(g.isDataTexture)if(we.length>0&&w){Oe&&R&&t.texStorage2D(a.TEXTURE_2D,le,oe,we[0].width,we[0].height);for(let B=0,ee=we.length;B<ee;B++)ue=we[B],Oe?t.texSubImage2D(a.TEXTURE_2D,B,0,0,ue.width,ue.height,Z,ce,ue.data):t.texImage2D(a.TEXTURE_2D,B,oe,ue.width,ue.height,0,Z,ce,ue.data);g.generateMipmaps=!1}else Oe?(R&&t.texStorage2D(a.TEXTURE_2D,le,oe,O.width,O.height),t.texSubImage2D(a.TEXTURE_2D,0,0,0,O.width,O.height,Z,ce,O.data)):t.texImage2D(a.TEXTURE_2D,0,oe,O.width,O.height,0,Z,ce,O.data);else if(g.isCompressedTexture)if(g.isCompressedArrayTexture){Oe&&R&&t.texStorage3D(a.TEXTURE_2D_ARRAY,le,oe,we[0].width,we[0].height,O.depth);for(let B=0,ee=we.length;B<ee;B++)ue=we[B],g.format!==Ut?Z!==null?Oe?t.compressedTexSubImage3D(a.TEXTURE_2D_ARRAY,B,0,0,0,ue.width,ue.height,O.depth,Z,ue.data,0,0):t.compressedTexImage3D(a.TEXTURE_2D_ARRAY,B,oe,ue.width,ue.height,O.depth,0,ue.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Oe?t.texSubImage3D(a.TEXTURE_2D_ARRAY,B,0,0,0,ue.width,ue.height,O.depth,Z,ce,ue.data):t.texImage3D(a.TEXTURE_2D_ARRAY,B,oe,ue.width,ue.height,O.depth,0,Z,ce,ue.data)}else{Oe&&R&&t.texStorage2D(a.TEXTURE_2D,le,oe,we[0].width,we[0].height);for(let B=0,ee=we.length;B<ee;B++)ue=we[B],g.format!==Ut?Z!==null?Oe?t.compressedTexSubImage2D(a.TEXTURE_2D,B,0,0,ue.width,ue.height,Z,ue.data):t.compressedTexImage2D(a.TEXTURE_2D,B,oe,ue.width,ue.height,0,ue.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Oe?t.texSubImage2D(a.TEXTURE_2D,B,0,0,ue.width,ue.height,Z,ce,ue.data):t.texImage2D(a.TEXTURE_2D,B,oe,ue.width,ue.height,0,Z,ce,ue.data)}else if(g.isDataArrayTexture)Oe?(R&&t.texStorage3D(a.TEXTURE_2D_ARRAY,le,oe,O.width,O.height,O.depth),t.texSubImage3D(a.TEXTURE_2D_ARRAY,0,0,0,0,O.width,O.height,O.depth,Z,ce,O.data)):t.texImage3D(a.TEXTURE_2D_ARRAY,0,oe,O.width,O.height,O.depth,0,Z,ce,O.data);else if(g.isData3DTexture)Oe?(R&&t.texStorage3D(a.TEXTURE_3D,le,oe,O.width,O.height,O.depth),t.texSubImage3D(a.TEXTURE_3D,0,0,0,0,O.width,O.height,O.depth,Z,ce,O.data)):t.texImage3D(a.TEXTURE_3D,0,oe,O.width,O.height,O.depth,0,Z,ce,O.data);else if(g.isFramebufferTexture){if(R)if(Oe)t.texStorage2D(a.TEXTURE_2D,le,oe,O.width,O.height);else{let B=O.width,ee=O.height;for(let re=0;re<le;re++)t.texImage2D(a.TEXTURE_2D,re,oe,B,ee,0,Z,ce,null),B>>=1,ee>>=1}}else if(we.length>0&&w){Oe&&R&&t.texStorage2D(a.TEXTURE_2D,le,oe,we[0].width,we[0].height);for(let B=0,ee=we.length;B<ee;B++)ue=we[B],Oe?t.texSubImage2D(a.TEXTURE_2D,B,0,0,Z,ce,ue):t.texImage2D(a.TEXTURE_2D,B,oe,Z,ce,ue);g.generateMipmaps=!1}else Oe?(R&&t.texStorage2D(a.TEXTURE_2D,le,oe,O.width,O.height),t.texSubImage2D(a.TEXTURE_2D,0,0,0,Z,ce,O)):t.texImage2D(a.TEXTURE_2D,0,oe,Z,ce,O);P(g,w)&&T(te),fe.__version=ne.version,g.onUpdate&&g.onUpdate(g)}S.__version=g.version}function ut(S,g,I){if(g.image.length!==6)return;const te=he(S,g),$=g.source;t.bindTexture(a.TEXTURE_CUBE_MAP,S.__webglTexture,a.TEXTURE0+I);const ne=n.get($);if($.version!==ne.__version||te===!0){t.activeTexture(a.TEXTURE0+I),a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,g.flipY),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,g.premultiplyAlpha),a.pixelStorei(a.UNPACK_ALIGNMENT,g.unpackAlignment),a.pixelStorei(a.UNPACK_COLORSPACE_CONVERSION_WEBGL,a.NONE);const fe=g.isCompressedTexture||g.image[0].isCompressedTexture,ae=g.image[0]&&g.image[0].isDataTexture,O=[];for(let B=0;B<6;B++)!fe&&!ae?O[B]=b(g.image[B],!1,!0,u):O[B]=ae?g.image[B].image:g.image[B],O[B]=st(g,O[B]);const w=O[0],Z=L(w)||o,ce=r.convert(g.format,g.colorSpace),oe=r.convert(g.type),ue=W(g.internalFormat,ce,oe,g.colorSpace),we=o&&g.isVideoTexture!==!0,Oe=ne.__version===void 0||te===!0;let R=v(g,w,Z);xe(a.TEXTURE_CUBE_MAP,g,Z);let le;if(fe){we&&Oe&&t.texStorage2D(a.TEXTURE_CUBE_MAP,R,ue,w.width,w.height);for(let B=0;B<6;B++){le=O[B].mipmaps;for(let ee=0;ee<le.length;ee++){const re=le[ee];g.format!==Ut?ce!==null?we?t.compressedTexSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+B,ee,0,0,re.width,re.height,ce,re.data):t.compressedTexImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+B,ee,ue,re.width,re.height,0,re.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):we?t.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+B,ee,0,0,re.width,re.height,ce,oe,re.data):t.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+B,ee,ue,re.width,re.height,0,ce,oe,re.data)}}}else{le=g.mipmaps,we&&Oe&&(le.length>0&&R++,t.texStorage2D(a.TEXTURE_CUBE_MAP,R,ue,O[0].width,O[0].height));for(let B=0;B<6;B++)if(ae){we?t.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+B,0,0,0,O[B].width,O[B].height,ce,oe,O[B].data):t.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+B,0,ue,O[B].width,O[B].height,0,ce,oe,O[B].data);for(let ee=0;ee<le.length;ee++){const De=le[ee].image[B].image;we?t.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+B,ee+1,0,0,De.width,De.height,ce,oe,De.data):t.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+B,ee+1,ue,De.width,De.height,0,ce,oe,De.data)}}else{we?t.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+B,0,0,0,ce,oe,O[B]):t.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+B,0,ue,ce,oe,O[B]);for(let ee=0;ee<le.length;ee++){const re=le[ee];we?t.texSubImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+B,ee+1,0,0,ce,oe,re.image[B]):t.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X+B,ee+1,ue,ce,oe,re.image[B])}}}P(g,Z)&&T(a.TEXTURE_CUBE_MAP),ne.__version=$.version,g.onUpdate&&g.onUpdate(g)}S.__version=g.version}function Ce(S,g,I,te,$,ne){const fe=r.convert(I.format,I.colorSpace),ae=r.convert(I.type),O=W(I.internalFormat,fe,ae,I.colorSpace);if(!n.get(g).__hasExternalTextures){const Z=Math.max(1,g.width>>ne),ce=Math.max(1,g.height>>ne);$===a.TEXTURE_3D||$===a.TEXTURE_2D_ARRAY?t.texImage3D($,ne,O,Z,ce,g.depth,0,fe,ae,null):t.texImage2D($,ne,O,Z,ce,0,fe,ae,null)}t.bindFramebuffer(a.FRAMEBUFFER,S),Fe(g)?p.framebufferTexture2DMultisampleEXT(a.FRAMEBUFFER,te,$,n.get(I).__webglTexture,0,Le(g)):($===a.TEXTURE_2D||$>=a.TEXTURE_CUBE_MAP_POSITIVE_X&&$<=a.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&a.framebufferTexture2D(a.FRAMEBUFFER,te,$,n.get(I).__webglTexture,ne),t.bindFramebuffer(a.FRAMEBUFFER,null)}function k(S,g,I){if(a.bindRenderbuffer(a.RENDERBUFFER,S),g.depthBuffer&&!g.stencilBuffer){let te=a.DEPTH_COMPONENT16;if(I||Fe(g)){const $=g.depthTexture;$&&$.isDepthTexture&&($.type===un?te=a.DEPTH_COMPONENT32F:$.type===ln&&(te=a.DEPTH_COMPONENT24));const ne=Le(g);Fe(g)?p.renderbufferStorageMultisampleEXT(a.RENDERBUFFER,ne,te,g.width,g.height):a.renderbufferStorageMultisample(a.RENDERBUFFER,ne,te,g.width,g.height)}else a.renderbufferStorage(a.RENDERBUFFER,te,g.width,g.height);a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.RENDERBUFFER,S)}else if(g.depthBuffer&&g.stencilBuffer){const te=Le(g);I&&Fe(g)===!1?a.renderbufferStorageMultisample(a.RENDERBUFFER,te,a.DEPTH24_STENCIL8,g.width,g.height):Fe(g)?p.renderbufferStorageMultisampleEXT(a.RENDERBUFFER,te,a.DEPTH24_STENCIL8,g.width,g.height):a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_STENCIL,g.width,g.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.RENDERBUFFER,S)}else{const te=g.isWebGLMultipleRenderTargets===!0?g.texture:[g.texture];for(let $=0;$<te.length;$++){const ne=te[$],fe=r.convert(ne.format,ne.colorSpace),ae=r.convert(ne.type),O=W(ne.internalFormat,fe,ae,ne.colorSpace),w=Le(g);I&&Fe(g)===!1?a.renderbufferStorageMultisample(a.RENDERBUFFER,w,O,g.width,g.height):Fe(g)?p.renderbufferStorageMultisampleEXT(a.RENDERBUFFER,w,O,g.width,g.height):a.renderbufferStorage(a.RENDERBUFFER,O,g.width,g.height)}}a.bindRenderbuffer(a.RENDERBUFFER,null)}function it(S,g){if(g&&g.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(a.FRAMEBUFFER,S),!(g.depthTexture&&g.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(g.depthTexture).__webglTexture||g.depthTexture.image.width!==g.width||g.depthTexture.image.height!==g.height)&&(g.depthTexture.image.width=g.width,g.depthTexture.image.height=g.height,g.depthTexture.needsUpdate=!0),J(g.depthTexture,0);const te=n.get(g.depthTexture).__webglTexture,$=Le(g);if(g.depthTexture.format===gn)Fe(g)?p.framebufferTexture2DMultisampleEXT(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.TEXTURE_2D,te,0,$):a.framebufferTexture2D(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.TEXTURE_2D,te,0);else if(g.depthTexture.format===Bn)Fe(g)?p.framebufferTexture2DMultisampleEXT(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.TEXTURE_2D,te,0,$):a.framebufferTexture2D(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.TEXTURE_2D,te,0);else throw new Error("Unknown depthTexture format")}function ge(S){const g=n.get(S),I=S.isWebGLCubeRenderTarget===!0;if(S.depthTexture&&!g.__autoAllocateDepthBuffer){if(I)throw new Error("target.depthTexture not supported in Cube render targets");it(g.__webglFramebuffer,S)}else if(I){g.__webglDepthbuffer=[];for(let te=0;te<6;te++)t.bindFramebuffer(a.FRAMEBUFFER,g.__webglFramebuffer[te]),g.__webglDepthbuffer[te]=a.createRenderbuffer(),k(g.__webglDepthbuffer[te],S,!1)}else t.bindFramebuffer(a.FRAMEBUFFER,g.__webglFramebuffer),g.__webglDepthbuffer=a.createRenderbuffer(),k(g.__webglDepthbuffer,S,!1);t.bindFramebuffer(a.FRAMEBUFFER,null)}function Te(S,g,I){const te=n.get(S);g!==void 0&&Ce(te.__webglFramebuffer,S,S.texture,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,0),I!==void 0&&ge(S)}function Se(S){const g=S.texture,I=n.get(S),te=n.get(g);S.addEventListener("dispose",ie),S.isWebGLMultipleRenderTargets!==!0&&(te.__webglTexture===void 0&&(te.__webglTexture=a.createTexture()),te.__version=g.version,s.memory.textures++);const $=S.isWebGLCubeRenderTarget===!0,ne=S.isWebGLMultipleRenderTargets===!0,fe=L(S)||o;if($){I.__webglFramebuffer=[];for(let ae=0;ae<6;ae++)if(o&&g.mipmaps&&g.mipmaps.length>0){I.__webglFramebuffer[ae]=[];for(let O=0;O<g.mipmaps.length;O++)I.__webglFramebuffer[ae][O]=a.createFramebuffer()}else I.__webglFramebuffer[ae]=a.createFramebuffer()}else{if(o&&g.mipmaps&&g.mipmaps.length>0){I.__webglFramebuffer=[];for(let ae=0;ae<g.mipmaps.length;ae++)I.__webglFramebuffer[ae]=a.createFramebuffer()}else I.__webglFramebuffer=a.createFramebuffer();if(ne)if(i.drawBuffers){const ae=S.texture;for(let O=0,w=ae.length;O<w;O++){const Z=n.get(ae[O]);Z.__webglTexture===void 0&&(Z.__webglTexture=a.createTexture(),s.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&S.samples>0&&Fe(S)===!1){const ae=ne?g:[g];I.__webglMultisampledFramebuffer=a.createFramebuffer(),I.__webglColorRenderbuffer=[],t.bindFramebuffer(a.FRAMEBUFFER,I.__webglMultisampledFramebuffer);for(let O=0;O<ae.length;O++){const w=ae[O];I.__webglColorRenderbuffer[O]=a.createRenderbuffer(),a.bindRenderbuffer(a.RENDERBUFFER,I.__webglColorRenderbuffer[O]);const Z=r.convert(w.format,w.colorSpace),ce=r.convert(w.type),oe=W(w.internalFormat,Z,ce,w.colorSpace,S.isXRRenderTarget===!0),ue=Le(S);a.renderbufferStorageMultisample(a.RENDERBUFFER,ue,oe,S.width,S.height),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0+O,a.RENDERBUFFER,I.__webglColorRenderbuffer[O])}a.bindRenderbuffer(a.RENDERBUFFER,null),S.depthBuffer&&(I.__webglDepthRenderbuffer=a.createRenderbuffer(),k(I.__webglDepthRenderbuffer,S,!0)),t.bindFramebuffer(a.FRAMEBUFFER,null)}}if($){t.bindTexture(a.TEXTURE_CUBE_MAP,te.__webglTexture),xe(a.TEXTURE_CUBE_MAP,g,fe);for(let ae=0;ae<6;ae++)if(o&&g.mipmaps&&g.mipmaps.length>0)for(let O=0;O<g.mipmaps.length;O++)Ce(I.__webglFramebuffer[ae][O],S,g,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+ae,O);else Ce(I.__webglFramebuffer[ae],S,g,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+ae,0);P(g,fe)&&T(a.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(ne){const ae=S.texture;for(let O=0,w=ae.length;O<w;O++){const Z=ae[O],ce=n.get(Z);t.bindTexture(a.TEXTURE_2D,ce.__webglTexture),xe(a.TEXTURE_2D,Z,fe),Ce(I.__webglFramebuffer,S,Z,a.COLOR_ATTACHMENT0+O,a.TEXTURE_2D,0),P(Z,fe)&&T(a.TEXTURE_2D)}t.unbindTexture()}else{let ae=a.TEXTURE_2D;if((S.isWebGL3DRenderTarget||S.isWebGLArrayRenderTarget)&&(o?ae=S.isWebGL3DRenderTarget?a.TEXTURE_3D:a.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(ae,te.__webglTexture),xe(ae,g,fe),o&&g.mipmaps&&g.mipmaps.length>0)for(let O=0;O<g.mipmaps.length;O++)Ce(I.__webglFramebuffer[O],S,g,a.COLOR_ATTACHMENT0,ae,O);else Ce(I.__webglFramebuffer,S,g,a.COLOR_ATTACHMENT0,ae,0);P(g,fe)&&T(ae),t.unbindTexture()}S.depthBuffer&&ge(S)}function We(S){const g=L(S)||o,I=S.isWebGLMultipleRenderTargets===!0?S.texture:[S.texture];for(let te=0,$=I.length;te<$;te++){const ne=I[te];if(P(ne,g)){const fe=S.isWebGLCubeRenderTarget?a.TEXTURE_CUBE_MAP:a.TEXTURE_2D,ae=n.get(ne).__webglTexture;t.bindTexture(fe,ae),T(fe),t.unbindTexture()}}}function ke(S){if(o&&S.samples>0&&Fe(S)===!1){const g=S.isWebGLMultipleRenderTargets?S.texture:[S.texture],I=S.width,te=S.height;let $=a.COLOR_BUFFER_BIT;const ne=[],fe=S.stencilBuffer?a.DEPTH_STENCIL_ATTACHMENT:a.DEPTH_ATTACHMENT,ae=n.get(S),O=S.isWebGLMultipleRenderTargets===!0;if(O)for(let w=0;w<g.length;w++)t.bindFramebuffer(a.FRAMEBUFFER,ae.__webglMultisampledFramebuffer),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0+w,a.RENDERBUFFER,null),t.bindFramebuffer(a.FRAMEBUFFER,ae.__webglFramebuffer),a.framebufferTexture2D(a.DRAW_FRAMEBUFFER,a.COLOR_ATTACHMENT0+w,a.TEXTURE_2D,null,0);t.bindFramebuffer(a.READ_FRAMEBUFFER,ae.__webglMultisampledFramebuffer),t.bindFramebuffer(a.DRAW_FRAMEBUFFER,ae.__webglFramebuffer);for(let w=0;w<g.length;w++){ne.push(a.COLOR_ATTACHMENT0+w),S.depthBuffer&&ne.push(fe);const Z=ae.__ignoreDepthValues!==void 0?ae.__ignoreDepthValues:!1;if(Z===!1&&(S.depthBuffer&&($|=a.DEPTH_BUFFER_BIT),S.stencilBuffer&&($|=a.STENCIL_BUFFER_BIT)),O&&a.framebufferRenderbuffer(a.READ_FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.RENDERBUFFER,ae.__webglColorRenderbuffer[w]),Z===!0&&(a.invalidateFramebuffer(a.READ_FRAMEBUFFER,[fe]),a.invalidateFramebuffer(a.DRAW_FRAMEBUFFER,[fe])),O){const ce=n.get(g[w]).__webglTexture;a.framebufferTexture2D(a.DRAW_FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,ce,0)}a.blitFramebuffer(0,0,I,te,0,0,I,te,$,a.NEAREST),f&&a.invalidateFramebuffer(a.READ_FRAMEBUFFER,ne)}if(t.bindFramebuffer(a.READ_FRAMEBUFFER,null),t.bindFramebuffer(a.DRAW_FRAMEBUFFER,null),O)for(let w=0;w<g.length;w++){t.bindFramebuffer(a.FRAMEBUFFER,ae.__webglMultisampledFramebuffer),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0+w,a.RENDERBUFFER,ae.__webglColorRenderbuffer[w]);const Z=n.get(g[w]).__webglTexture;t.bindFramebuffer(a.FRAMEBUFFER,ae.__webglFramebuffer),a.framebufferTexture2D(a.DRAW_FRAMEBUFFER,a.COLOR_ATTACHMENT0+w,a.TEXTURE_2D,Z,0)}t.bindFramebuffer(a.DRAW_FRAMEBUFFER,ae.__webglMultisampledFramebuffer)}}function Le(S){return Math.min(_,S.samples)}function Fe(S){const g=n.get(S);return o&&S.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&g.__useRenderToTexture!==!1}function rt(S){const g=s.render.frame;h.get(S)!==g&&(h.set(S,g),S.update())}function st(S,g){const I=S.colorSpace,te=S.format,$=S.type;return S.isCompressedTexture===!0||S.isVideoTexture===!0||S.format===Ri||I!==Ht&&I!==yn&&(I===Ke||I===Pa?o===!1?e.has("EXT_sRGB")===!0&&te===Ut?(S.format=Ri,S.minFilter=Ct,S.generateMipmaps=!1):g=co.sRGBToLinear(g):(te!==Ut||$!==sn)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",I)),g}this.allocateTextureUnit=Y,this.resetTextureUnits=X,this.setTexture2D=J,this.setTexture2DArray=U,this.setTexture3D=K,this.setTextureCube=de,this.rebindTextures=Te,this.setupRenderTarget=Se,this.updateRenderTargetMipmap=We,this.updateMultisampleRenderTarget=ke,this.setupDepthRenderbuffer=ge,this.setupFrameBufferTexture=Ce,this.useMultisampledRTT=Fe}const hp=0,at=1;function gp(a,e,t){const n=t.isWebGL2;function i(r,s=yn){let o;const l=s===Ke||s===Pa?at:hp;if(r===sn)return a.UNSIGNED_BYTE;if(r===Rr)return a.UNSIGNED_SHORT_4_4_4_4;if(r===Cr)return a.UNSIGNED_SHORT_5_5_5_1;if(r===_l)return a.BYTE;if(r===pl)return a.SHORT;if(r===Ai)return a.UNSIGNED_SHORT;if(r===Lr)return a.INT;if(r===ln)return a.UNSIGNED_INT;if(r===un)return a.FLOAT;if(r===da)return n?a.HALF_FLOAT:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(r===ml)return a.ALPHA;if(r===Ut)return a.RGBA;if(r===fl)return a.LUMINANCE;if(r===hl)return a.LUMINANCE_ALPHA;if(r===gn)return a.DEPTH_COMPONENT;if(r===Bn)return a.DEPTH_STENCIL;if(r===Ri)return o=e.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(r===gl)return a.RED;if(r===Pr)return a.RED_INTEGER;if(r===bl)return a.RG;if(r===Nr)return a.RG_INTEGER;if(r===kr)return a.RGBA_INTEGER;if(r===Si||r===Mi||r===Ei||r===xi)if(l===at)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(r===Si)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===Mi)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===Ei)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===xi)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(r===Si)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===Mi)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===Ei)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===xi)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===Dr||r===Ur||r===Ir||r===Or)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(r===Dr)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===Ur)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===Ir)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===Or)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===yl)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===Br||r===Fr)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(r===Br)return l===at?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(r===Fr)return l===at?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===Gr||r===Hr||r===zr||r===Vr||r===Wr||r===Xr||r===Kr||r===Yr||r===Zr||r===qr||r===jr||r===Jr||r===$r||r===Qr)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(r===Gr)return l===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===Hr)return l===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===zr)return l===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===Vr)return l===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===Wr)return l===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===Xr)return l===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===Kr)return l===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===Yr)return l===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===Zr)return l===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===qr)return l===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===jr)return l===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===Jr)return l===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===$r)return l===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===Qr)return l===at?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===wi||r===eo||r===to)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(r===wi)return l===at?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(r===eo)return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(r===to)return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(r===vl||r===no||r===ao||r===io)if(o=e.get("EXT_texture_compression_rgtc"),o!==null){if(r===wi)return o.COMPRESSED_RED_RGTC1_EXT;if(r===no)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(r===ao)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(r===io)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return r===hn?n?a.UNSIGNED_INT_24_8:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null):a[r]!==void 0?a[r]:null}return{convert:i}}class bp extends wt{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class ra extends lt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const yp={type:"move"};class ar{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ra,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ra,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new C,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new C),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ra,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new C,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new C),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,s=null;const o=this._targetRay,l=this._grip,u=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(u&&e.hand){s=!0;for(const y of e.hand.values()){const m=t.getJointPose(y,n),d=this._getHandJoint(u,y);m!==null&&(d.matrix.fromArray(m.transform.matrix),d.matrix.decompose(d.position,d.rotation,d.scale),d.matrixWorldNeedsUpdate=!0,d.jointRadius=m.radius),d.visible=m!==null}const c=u.joints["index-finger-tip"],_=u.joints["thumb-tip"],p=c.position.distanceTo(_.position),f=.02,h=.005;u.inputState.pinching&&p>f+h?(u.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!u.inputState.pinching&&p<=f-h&&(u.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));o!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(yp)))}return o!==null&&(o.visible=i!==null),l!==null&&(l.visible=r!==null),u!==null&&(u.visible=s!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new ra;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class vp extends At{constructor(e,t,n,i,r,s,o,l,u,c){if(c=c!==void 0?c:gn,c!==gn&&c!==Bn)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&c===gn&&(n=ln),n===void 0&&c===Bn&&(n=hn),super(null,i,r,s,o,l,c,n,u),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=o!==void 0?o:ft,this.minFilter=l!==void 0?l:ft,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class Ap extends vn{constructor(e,t){super();const n=this;let i=null,r=1,s=null,o="local-floor",l=1,u=null,c=null,_=null,p=null,f=null,h=null;const y=t.getContextAttributes();let m=null,d=null;const E=[],b=[],L=new wt;L.layers.enable(1),L.viewport=new Ye;const x=new wt;x.layers.enable(2),x.viewport=new Ye;const P=[L,x],T=new bp;T.layers.enable(1),T.layers.enable(2);let W=null,v=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(U){let K=E[U];return K===void 0&&(K=new ar,E[U]=K),K.getTargetRaySpace()},this.getControllerGrip=function(U){let K=E[U];return K===void 0&&(K=new ar,E[U]=K),K.getGripSpace()},this.getHand=function(U){let K=E[U];return K===void 0&&(K=new ar,E[U]=K),K.getHandSpace()};function M(U){const K=b.indexOf(U.inputSource);if(K===-1)return;const de=E[K];de!==void 0&&(de.update(U.inputSource,U.frame,u||s),de.dispatchEvent({type:U.type,data:U.inputSource}))}function q(){i.removeEventListener("select",M),i.removeEventListener("selectstart",M),i.removeEventListener("selectend",M),i.removeEventListener("squeeze",M),i.removeEventListener("squeezestart",M),i.removeEventListener("squeezeend",M),i.removeEventListener("end",q),i.removeEventListener("inputsourceschange",ie);for(let U=0;U<E.length;U++){const K=b[U];K!==null&&(b[U]=null,E[U].disconnect(K))}W=null,v=null,e.setRenderTarget(m),f=null,p=null,_=null,i=null,d=null,J.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(U){r=U,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(U){o=U,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return u||s},this.setReferenceSpace=function(U){u=U},this.getBaseLayer=function(){return p!==null?p:f},this.getBinding=function(){return _},this.getFrame=function(){return h},this.getSession=function(){return i},this.setSession=async function(U){if(i=U,i!==null){if(m=e.getRenderTarget(),i.addEventListener("select",M),i.addEventListener("selectstart",M),i.addEventListener("selectend",M),i.addEventListener("squeeze",M),i.addEventListener("squeezestart",M),i.addEventListener("squeezeend",M),i.addEventListener("end",q),i.addEventListener("inputsourceschange",ie),y.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const K={antialias:i.renderState.layers===void 0?y.antialias:!0,alpha:!0,depth:y.depth,stencil:y.stencil,framebufferScaleFactor:r};f=new XRWebGLLayer(i,t,K),i.updateRenderState({baseLayer:f}),d=new An(f.framebufferWidth,f.framebufferHeight,{format:Ut,type:sn,colorSpace:e.outputColorSpace,stencilBuffer:y.stencil})}else{let K=null,de=null,_e=null;y.depth&&(_e=y.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,K=y.stencil?Bn:gn,de=y.stencil?hn:ln);const pe={colorFormat:t.RGBA8,depthFormat:_e,scaleFactor:r};_=new XRWebGLBinding(i,t),p=_.createProjectionLayer(pe),i.updateRenderState({layers:[p]}),d=new An(p.textureWidth,p.textureHeight,{format:Ut,type:sn,depthTexture:new vp(p.textureWidth,p.textureHeight,de,void 0,void 0,void 0,void 0,void 0,void 0,K),stencilBuffer:y.stencil,colorSpace:e.outputColorSpace,samples:y.antialias?4:0});const ye=e.properties.get(d);ye.__ignoreDepthValues=p.ignoreDepthValues}d.isXRRenderTarget=!0,this.setFoveation(l),u=null,s=await i.requestReferenceSpace(o),J.setContext(i),J.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function ie(U){for(let K=0;K<U.removed.length;K++){const de=U.removed[K],_e=b.indexOf(de);_e>=0&&(b[_e]=null,E[_e].disconnect(de))}for(let K=0;K<U.added.length;K++){const de=U.added[K];let _e=b.indexOf(de);if(_e===-1){for(let ye=0;ye<E.length;ye++)if(ye>=b.length){b.push(de),_e=ye;break}else if(b[ye]===null){b[ye]=de,_e=ye;break}if(_e===-1)break}const pe=E[_e];pe&&pe.connect(de)}}const F=new C,H=new C;function G(U,K,de){F.setFromMatrixPosition(K.matrixWorld),H.setFromMatrixPosition(de.matrixWorld);const _e=F.distanceTo(H),pe=K.projectionMatrix.elements,ye=de.projectionMatrix.elements,xe=pe[14]/(pe[10]-1),he=pe[14]/(pe[10]+1),Be=(pe[9]+1)/pe[5],ut=(pe[9]-1)/pe[5],Ce=(pe[8]-1)/pe[0],k=(ye[8]+1)/ye[0],it=xe*Ce,ge=xe*k,Te=_e/(-Ce+k),Se=Te*-Ce;K.matrixWorld.decompose(U.position,U.quaternion,U.scale),U.translateX(Se),U.translateZ(Te),U.matrixWorld.compose(U.position,U.quaternion,U.scale),U.matrixWorldInverse.copy(U.matrixWorld).invert();const We=xe+Te,ke=he+Te,Le=it-Se,Fe=ge+(_e-Se),rt=Be*he/ke*We,st=ut*he/ke*We;U.projectionMatrix.makePerspective(Le,Fe,rt,st,We,ke),U.projectionMatrixInverse.copy(U.projectionMatrix).invert()}function Q(U,K){K===null?U.matrixWorld.copy(U.matrix):U.matrixWorld.multiplyMatrices(K.matrixWorld,U.matrix),U.matrixWorldInverse.copy(U.matrixWorld).invert()}this.updateCamera=function(U){if(i===null)return;T.near=x.near=L.near=U.near,T.far=x.far=L.far=U.far,(W!==T.near||v!==T.far)&&(i.updateRenderState({depthNear:T.near,depthFar:T.far}),W=T.near,v=T.far);const K=U.parent,de=T.cameras;Q(T,K);for(let _e=0;_e<de.length;_e++)Q(de[_e],K);de.length===2?G(T,L,x):T.projectionMatrix.copy(L.projectionMatrix),X(U,T,K)};function X(U,K,de){de===null?U.matrix.copy(K.matrixWorld):(U.matrix.copy(de.matrixWorld),U.matrix.invert(),U.matrix.multiply(K.matrixWorld)),U.matrix.decompose(U.position,U.quaternion,U.scale),U.updateMatrixWorld(!0),U.projectionMatrix.copy(K.projectionMatrix),U.projectionMatrixInverse.copy(K.projectionMatrixInverse),U.isPerspectiveCamera&&(U.fov=pa*2*Math.atan(1/U.projectionMatrix.elements[5]),U.zoom=1)}this.getCamera=function(){return T},this.getFoveation=function(){if(!(p===null&&f===null))return l},this.setFoveation=function(U){l=U,p!==null&&(p.fixedFoveation=U),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=U)};let Y=null;function j(U,K){if(c=K.getViewerPose(u||s),h=K,c!==null){const de=c.views;f!==null&&(e.setRenderTargetFramebuffer(d,f.framebuffer),e.setRenderTarget(d));let _e=!1;de.length!==T.cameras.length&&(T.cameras.length=0,_e=!0);for(let pe=0;pe<de.length;pe++){const ye=de[pe];let xe=null;if(f!==null)xe=f.getViewport(ye);else{const Be=_.getViewSubImage(p,ye);xe=Be.viewport,pe===0&&(e.setRenderTargetTextures(d,Be.colorTexture,p.ignoreDepthValues?void 0:Be.depthStencilTexture),e.setRenderTarget(d))}let he=P[pe];he===void 0&&(he=new wt,he.layers.enable(pe),he.viewport=new Ye,P[pe]=he),he.matrix.fromArray(ye.transform.matrix),he.matrix.decompose(he.position,he.quaternion,he.scale),he.projectionMatrix.fromArray(ye.projectionMatrix),he.projectionMatrixInverse.copy(he.projectionMatrix).invert(),he.viewport.set(xe.x,xe.y,xe.width,xe.height),pe===0&&(T.matrix.copy(he.matrix),T.matrix.decompose(T.position,T.quaternion,T.scale)),_e===!0&&T.cameras.push(he)}}for(let de=0;de<E.length;de++){const _e=b[de],pe=E[de];_e!==null&&pe!==void 0&&pe.update(_e,K,u||s)}Y&&Y(U,K),K.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:K}),h=null}const J=new Do;J.setAnimationLoop(j),this.setAnimationLoop=function(U){Y=U},this.dispose=function(){}}}function Sp(a,e){function t(m,d){m.matrixAutoUpdate===!0&&m.updateMatrix(),d.value.copy(m.matrix)}function n(m,d){d.color.getRGB(m.fogColor.value,Po(a)),d.isFog?(m.fogNear.value=d.near,m.fogFar.value=d.far):d.isFogExp2&&(m.fogDensity.value=d.density)}function i(m,d,E,b,L){d.isMeshBasicMaterial||d.isMeshLambertMaterial?r(m,d):d.isMeshToonMaterial?(r(m,d),_(m,d)):d.isMeshPhongMaterial?(r(m,d),c(m,d)):d.isMeshStandardMaterial?(r(m,d),p(m,d),d.isMeshPhysicalMaterial&&f(m,d,L)):d.isMeshMatcapMaterial?(r(m,d),h(m,d)):d.isMeshDepthMaterial?r(m,d):d.isMeshDistanceMaterial?(r(m,d),y(m,d)):d.isMeshNormalMaterial?r(m,d):d.isLineBasicMaterial?(s(m,d),d.isLineDashedMaterial&&o(m,d)):d.isPointsMaterial?l(m,d,E,b):d.isSpriteMaterial?u(m,d):d.isShadowMaterial?(m.color.value.copy(d.color),m.opacity.value=d.opacity):d.isShaderMaterial&&(d.uniformsNeedUpdate=!1)}function r(m,d){m.opacity.value=d.opacity,d.color&&m.diffuse.value.copy(d.color),d.emissive&&m.emissive.value.copy(d.emissive).multiplyScalar(d.emissiveIntensity),d.map&&(m.map.value=d.map,t(d.map,m.mapTransform)),d.alphaMap&&(m.alphaMap.value=d.alphaMap,t(d.alphaMap,m.alphaMapTransform)),d.bumpMap&&(m.bumpMap.value=d.bumpMap,t(d.bumpMap,m.bumpMapTransform),m.bumpScale.value=d.bumpScale,d.side===vt&&(m.bumpScale.value*=-1)),d.normalMap&&(m.normalMap.value=d.normalMap,t(d.normalMap,m.normalMapTransform),m.normalScale.value.copy(d.normalScale),d.side===vt&&m.normalScale.value.negate()),d.displacementMap&&(m.displacementMap.value=d.displacementMap,t(d.displacementMap,m.displacementMapTransform),m.displacementScale.value=d.displacementScale,m.displacementBias.value=d.displacementBias),d.emissiveMap&&(m.emissiveMap.value=d.emissiveMap,t(d.emissiveMap,m.emissiveMapTransform)),d.specularMap&&(m.specularMap.value=d.specularMap,t(d.specularMap,m.specularMapTransform)),d.alphaTest>0&&(m.alphaTest.value=d.alphaTest);const E=e.get(d).envMap;if(E&&(m.envMap.value=E,m.flipEnvMap.value=E.isCubeTexture&&E.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=d.reflectivity,m.ior.value=d.ior,m.refractionRatio.value=d.refractionRatio),d.lightMap){m.lightMap.value=d.lightMap;const b=a._useLegacyLights===!0?Math.PI:1;m.lightMapIntensity.value=d.lightMapIntensity*b,t(d.lightMap,m.lightMapTransform)}d.aoMap&&(m.aoMap.value=d.aoMap,m.aoMapIntensity.value=d.aoMapIntensity,t(d.aoMap,m.aoMapTransform))}function s(m,d){m.diffuse.value.copy(d.color),m.opacity.value=d.opacity,d.map&&(m.map.value=d.map,t(d.map,m.mapTransform))}function o(m,d){m.dashSize.value=d.dashSize,m.totalSize.value=d.dashSize+d.gapSize,m.scale.value=d.scale}function l(m,d,E,b){m.diffuse.value.copy(d.color),m.opacity.value=d.opacity,m.size.value=d.size*E,m.scale.value=b*.5,d.map&&(m.map.value=d.map,t(d.map,m.uvTransform)),d.alphaMap&&(m.alphaMap.value=d.alphaMap,t(d.alphaMap,m.alphaMapTransform)),d.alphaTest>0&&(m.alphaTest.value=d.alphaTest)}function u(m,d){m.diffuse.value.copy(d.color),m.opacity.value=d.opacity,m.rotation.value=d.rotation,d.map&&(m.map.value=d.map,t(d.map,m.mapTransform)),d.alphaMap&&(m.alphaMap.value=d.alphaMap,t(d.alphaMap,m.alphaMapTransform)),d.alphaTest>0&&(m.alphaTest.value=d.alphaTest)}function c(m,d){m.specular.value.copy(d.specular),m.shininess.value=Math.max(d.shininess,1e-4)}function _(m,d){d.gradientMap&&(m.gradientMap.value=d.gradientMap)}function p(m,d){m.metalness.value=d.metalness,d.metalnessMap&&(m.metalnessMap.value=d.metalnessMap,t(d.metalnessMap,m.metalnessMapTransform)),m.roughness.value=d.roughness,d.roughnessMap&&(m.roughnessMap.value=d.roughnessMap,t(d.roughnessMap,m.roughnessMapTransform)),e.get(d).envMap&&(m.envMapIntensity.value=d.envMapIntensity)}function f(m,d,E){m.ior.value=d.ior,d.sheen>0&&(m.sheenColor.value.copy(d.sheenColor).multiplyScalar(d.sheen),m.sheenRoughness.value=d.sheenRoughness,d.sheenColorMap&&(m.sheenColorMap.value=d.sheenColorMap,t(d.sheenColorMap,m.sheenColorMapTransform)),d.sheenRoughnessMap&&(m.sheenRoughnessMap.value=d.sheenRoughnessMap,t(d.sheenRoughnessMap,m.sheenRoughnessMapTransform))),d.clearcoat>0&&(m.clearcoat.value=d.clearcoat,m.clearcoatRoughness.value=d.clearcoatRoughness,d.clearcoatMap&&(m.clearcoatMap.value=d.clearcoatMap,t(d.clearcoatMap,m.clearcoatMapTransform)),d.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=d.clearcoatRoughnessMap,t(d.clearcoatRoughnessMap,m.clearcoatRoughnessMapTransform)),d.clearcoatNormalMap&&(m.clearcoatNormalMap.value=d.clearcoatNormalMap,t(d.clearcoatNormalMap,m.clearcoatNormalMapTransform),m.clearcoatNormalScale.value.copy(d.clearcoatNormalScale),d.side===vt&&m.clearcoatNormalScale.value.negate())),d.iridescence>0&&(m.iridescence.value=d.iridescence,m.iridescenceIOR.value=d.iridescenceIOR,m.iridescenceThicknessMinimum.value=d.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=d.iridescenceThicknessRange[1],d.iridescenceMap&&(m.iridescenceMap.value=d.iridescenceMap,t(d.iridescenceMap,m.iridescenceMapTransform)),d.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=d.iridescenceThicknessMap,t(d.iridescenceThicknessMap,m.iridescenceThicknessMapTransform))),d.transmission>0&&(m.transmission.value=d.transmission,m.transmissionSamplerMap.value=E.texture,m.transmissionSamplerSize.value.set(E.width,E.height),d.transmissionMap&&(m.transmissionMap.value=d.transmissionMap,t(d.transmissionMap,m.transmissionMapTransform)),m.thickness.value=d.thickness,d.thicknessMap&&(m.thicknessMap.value=d.thicknessMap,t(d.thicknessMap,m.thicknessMapTransform)),m.attenuationDistance.value=d.attenuationDistance,m.attenuationColor.value.copy(d.attenuationColor)),d.anisotropy>0&&(m.anisotropyVector.value.set(d.anisotropy*Math.cos(d.anisotropyRotation),d.anisotropy*Math.sin(d.anisotropyRotation)),d.anisotropyMap&&(m.anisotropyMap.value=d.anisotropyMap,t(d.anisotropyMap,m.anisotropyMapTransform))),m.specularIntensity.value=d.specularIntensity,m.specularColor.value.copy(d.specularColor),d.specularColorMap&&(m.specularColorMap.value=d.specularColorMap,t(d.specularColorMap,m.specularColorMapTransform)),d.specularIntensityMap&&(m.specularIntensityMap.value=d.specularIntensityMap,t(d.specularIntensityMap,m.specularIntensityMapTransform))}function h(m,d){d.matcap&&(m.matcap.value=d.matcap)}function y(m,d){const E=e.get(d).light;m.referencePosition.value.setFromMatrixPosition(E.matrixWorld),m.nearDistance.value=E.shadow.camera.near,m.farDistance.value=E.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function Mp(a,e,t,n){let i={},r={},s=[];const o=t.isWebGL2?a.getParameter(a.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(E,b){const L=b.program;n.uniformBlockBinding(E,L)}function u(E,b){let L=i[E.id];L===void 0&&(h(E),L=c(E),i[E.id]=L,E.addEventListener("dispose",m));const x=b.program;n.updateUBOMapping(E,x);const P=e.render.frame;r[E.id]!==P&&(p(E),r[E.id]=P)}function c(E){const b=_();E.__bindingPointIndex=b;const L=a.createBuffer(),x=E.__size,P=E.usage;return a.bindBuffer(a.UNIFORM_BUFFER,L),a.bufferData(a.UNIFORM_BUFFER,x,P),a.bindBuffer(a.UNIFORM_BUFFER,null),a.bindBufferBase(a.UNIFORM_BUFFER,b,L),L}function _(){for(let E=0;E<o;E++)if(s.indexOf(E)===-1)return s.push(E),E;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function p(E){const b=i[E.id],L=E.uniforms,x=E.__cache;a.bindBuffer(a.UNIFORM_BUFFER,b);for(let P=0,T=L.length;P<T;P++){const W=L[P];if(f(W,P,x)===!0){const v=W.__offset,M=Array.isArray(W.value)?W.value:[W.value];let q=0;for(let ie=0;ie<M.length;ie++){const F=M[ie],H=y(F);typeof F=="number"?(W.__data[0]=F,a.bufferSubData(a.UNIFORM_BUFFER,v+q,W.__data)):F.isMatrix3?(W.__data[0]=F.elements[0],W.__data[1]=F.elements[1],W.__data[2]=F.elements[2],W.__data[3]=F.elements[0],W.__data[4]=F.elements[3],W.__data[5]=F.elements[4],W.__data[6]=F.elements[5],W.__data[7]=F.elements[0],W.__data[8]=F.elements[6],W.__data[9]=F.elements[7],W.__data[10]=F.elements[8],W.__data[11]=F.elements[0]):(F.toArray(W.__data,q),q+=H.storage/Float32Array.BYTES_PER_ELEMENT)}a.bufferSubData(a.UNIFORM_BUFFER,v,W.__data)}}a.bindBuffer(a.UNIFORM_BUFFER,null)}function f(E,b,L){const x=E.value;if(L[b]===void 0){if(typeof x=="number")L[b]=x;else{const P=Array.isArray(x)?x:[x],T=[];for(let W=0;W<P.length;W++)T.push(P[W].clone());L[b]=T}return!0}else if(typeof x=="number"){if(L[b]!==x)return L[b]=x,!0}else{const P=Array.isArray(L[b])?L[b]:[L[b]],T=Array.isArray(x)?x:[x];for(let W=0;W<P.length;W++){const v=P[W];if(v.equals(T[W])===!1)return v.copy(T[W]),!0}}return!1}function h(E){const b=E.uniforms;let L=0;const x=16;let P=0;for(let T=0,W=b.length;T<W;T++){const v=b[T],M={boundary:0,storage:0},q=Array.isArray(v.value)?v.value:[v.value];for(let ie=0,F=q.length;ie<F;ie++){const H=q[ie],G=y(H);M.boundary+=G.boundary,M.storage+=G.storage}if(v.__data=new Float32Array(M.storage/Float32Array.BYTES_PER_ELEMENT),v.__offset=L,T>0){P=L%x;const ie=x-P;P!==0&&ie-M.boundary<0&&(L+=x-P,v.__offset=L)}L+=M.storage}return P=L%x,P>0&&(L+=x-P),E.__size=L,E.__cache={},this}function y(E){const b={boundary:0,storage:0};return typeof E=="number"?(b.boundary=4,b.storage=4):E.isVector2?(b.boundary=8,b.storage=8):E.isVector3||E.isColor?(b.boundary=16,b.storage=12):E.isVector4?(b.boundary=16,b.storage=16):E.isMatrix3?(b.boundary=48,b.storage=48):E.isMatrix4?(b.boundary=64,b.storage=64):E.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",E),b}function m(E){const b=E.target;b.removeEventListener("dispose",m);const L=s.indexOf(b.__bindingPointIndex);s.splice(L,1),a.deleteBuffer(i[b.id]),delete i[b.id],delete r[b.id]}function d(){for(const E in i)a.deleteBuffer(i[E]);s=[],i={},r={}}return{bind:l,update:u,dispose:d}}class ss{constructor(e={}){const{canvas:t=ql(),context:n=null,depth:i=!0,stencil:r=!0,alpha:s=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:u=!1,powerPreference:c="default",failIfMajorPerformanceCaveat:_=!1}=e;this.isWebGLRenderer=!0;let p;n!==null?p=n.getContextAttributes().alpha:p=s;const f=new Uint32Array(4),h=new Int32Array(4);let y=null,m=null;const d=[],E=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=Ke,this._useLegacyLights=!1,this.toneMapping=on,this.toneMappingExposure=1;const b=this;let L=!1,x=0,P=0,T=null,W=-1,v=null;const M=new Ye,q=new Ye;let ie=null;const F=new Ge(0);let H=0,G=t.width,Q=t.height,X=1,Y=null,j=null;const J=new Ye(0,0,G,Q),U=new Ye(0,0,G,Q);let K=!1;const de=new ji;let _e=!1,pe=!1,ye=null;const xe=new Ze,he=new ve,Be=new C,ut={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Ce(){return T===null?X:1}let k=n;function it(A,N){for(let z=0;z<A.length;z++){const D=A[z],V=t.getContext(D,N);if(V!==null)return V}return null}try{const A={alpha:!0,depth:i,stencil:r,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:u,powerPreference:c,failIfMajorPerformanceCaveat:_};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${mt}`),t.addEventListener("webglcontextlost",le,!1),t.addEventListener("webglcontextrestored",B,!1),t.addEventListener("webglcontextcreationerror",ee,!1),k===null){const N=["webgl2","webgl","experimental-webgl"];if(b.isWebGL1Renderer===!0&&N.shift(),k=it(N,A),k===null)throw it(N)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&k instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),k.getShaderPrecisionFormat===void 0&&(k.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(A){throw console.error("THREE.WebGLRenderer: "+A.message),A}let ge,Te,Se,We,ke,Le,Fe,rt,st,S,g,I,te,$,ne,fe,ae,O,w,Z,ce,oe,ue,we;function Oe(){ge=new kd(k),Te=new wd(k,ge,e),ge.init(Te),oe=new gp(k,ge,Te),Se=new mp(k,ge,Te),We=new Id(k),ke=new ep,Le=new fp(k,ge,Se,ke,Te,oe,We),Fe=new Ld(b),rt=new Nd(b),st=new xu(k,Te),ue=new Ed(k,ge,st,Te),S=new Dd(k,st,We,ue),g=new Gd(k,S,st,We),w=new Fd(k,Te,Le),fe=new Td(ke),I=new Q_(b,Fe,rt,ge,Te,ue,fe),te=new Sp(b,ke),$=new np,ne=new lp(ge,Te),O=new Md(b,Fe,rt,Se,g,p,l),ae=new pp(b,g,Te),we=new Mp(k,We,Te,Se),Z=new xd(k,ge,We,Te),ce=new Ud(k,ge,We,Te),We.programs=I.programs,b.capabilities=Te,b.extensions=ge,b.properties=ke,b.renderLists=$,b.shadowMap=ae,b.state=Se,b.info=We}Oe();const R=new Ap(b,k);this.xr=R,this.getContext=function(){return k},this.getContextAttributes=function(){return k.getContextAttributes()},this.forceContextLoss=function(){const A=ge.get("WEBGL_lose_context");A&&A.loseContext()},this.forceContextRestore=function(){const A=ge.get("WEBGL_lose_context");A&&A.restoreContext()},this.getPixelRatio=function(){return X},this.setPixelRatio=function(A){A!==void 0&&(X=A,this.setSize(G,Q,!1))},this.getSize=function(A){return A.set(G,Q)},this.setSize=function(A,N,z=!0){if(R.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}G=A,Q=N,t.width=Math.floor(A*X),t.height=Math.floor(N*X),z===!0&&(t.style.width=A+"px",t.style.height=N+"px"),this.setViewport(0,0,A,N)},this.getDrawingBufferSize=function(A){return A.set(G*X,Q*X).floor()},this.setDrawingBufferSize=function(A,N,z){G=A,Q=N,X=z,t.width=Math.floor(A*z),t.height=Math.floor(N*z),this.setViewport(0,0,A,N)},this.getCurrentViewport=function(A){return A.copy(M)},this.getViewport=function(A){return A.copy(J)},this.setViewport=function(A,N,z,D){A.isVector4?J.set(A.x,A.y,A.z,A.w):J.set(A,N,z,D),Se.viewport(M.copy(J).multiplyScalar(X).floor())},this.getScissor=function(A){return A.copy(U)},this.setScissor=function(A,N,z,D){A.isVector4?U.set(A.x,A.y,A.z,A.w):U.set(A,N,z,D),Se.scissor(q.copy(U).multiplyScalar(X).floor())},this.getScissorTest=function(){return K},this.setScissorTest=function(A){Se.setScissorTest(K=A)},this.setOpaqueSort=function(A){Y=A},this.setTransparentSort=function(A){j=A},this.getClearColor=function(A){return A.copy(O.getClearColor())},this.setClearColor=function(){O.setClearColor.apply(O,arguments)},this.getClearAlpha=function(){return O.getClearAlpha()},this.setClearAlpha=function(){O.setClearAlpha.apply(O,arguments)},this.clear=function(A=!0,N=!0,z=!0){let D=0;if(A){let V=!1;if(T!==null){const me=T.texture.format;V=me===kr||me===Nr||me===Pr}if(V){const me=T.texture.type,be=me===sn||me===ln||me===Ai||me===hn||me===Rr||me===Cr,Me=O.getClearColor(),Ee=O.getClearAlpha(),Ue=Me.r,Ae=Me.g,Pe=Me.b;be?(f[0]=Ue,f[1]=Ae,f[2]=Pe,f[3]=Ee,k.clearBufferuiv(k.COLOR,0,f)):(h[0]=Ue,h[1]=Ae,h[2]=Pe,h[3]=Ee,k.clearBufferiv(k.COLOR,0,h))}else D|=k.COLOR_BUFFER_BIT}N&&(D|=k.DEPTH_BUFFER_BIT),z&&(D|=k.STENCIL_BUFFER_BIT),k.clear(D)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",le,!1),t.removeEventListener("webglcontextrestored",B,!1),t.removeEventListener("webglcontextcreationerror",ee,!1),$.dispose(),ne.dispose(),ke.dispose(),Fe.dispose(),rt.dispose(),g.dispose(),ue.dispose(),we.dispose(),I.dispose(),R.dispose(),R.removeEventListener("sessionstart",Xe),R.removeEventListener("sessionend",Wt),ye&&(ye.dispose(),ye=null),bt.stop()};function le(A){A.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),L=!0}function B(){console.log("THREE.WebGLRenderer: Context Restored."),L=!1;const A=We.autoReset,N=ae.enabled,z=ae.autoUpdate,D=ae.needsUpdate,V=ae.type;Oe(),We.autoReset=A,ae.enabled=N,ae.autoUpdate=z,ae.needsUpdate=D,ae.type=V}function ee(A){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",A.statusMessage)}function re(A){const N=A.target;N.removeEventListener("dispose",re),De(N)}function De(A){He(A),ke.remove(A)}function He(A){const N=ke.get(A).programs;N!==void 0&&(N.forEach(function(z){I.releaseProgram(z)}),A.isShaderMaterial&&I.releaseShaderCache(A))}this.renderBufferDirect=function(A,N,z,D,V,me){N===null&&(N=ut);const be=V.isMesh&&V.matrixWorld.determinant()<0,Me=Xp(A,N,z,D,V);Se.setMaterial(D,be);let Ee=z.index,Ue=1;if(D.wireframe===!0){if(Ee=S.getWireframeAttribute(z),Ee===void 0)return;Ue=2}const Ae=z.drawRange,Pe=z.attributes.position;let qe=Ae.start*Ue,je=(Ae.start+Ae.count)*Ue;me!==null&&(qe=Math.max(qe,me.start*Ue),je=Math.min(je,(me.start+me.count)*Ue)),Ee!==null?(qe=Math.max(qe,0),je=Math.min(je,Ee.count)):Pe!=null&&(qe=Math.max(qe,0),je=Math.min(je,Pe.count));const kt=je-qe;if(kt<0||kt===1/0)return;ue.setup(V,D,Me,z,Ee);let nn,Qe=Z;if(Ee!==null&&(nn=st.get(Ee),Qe=ce,Qe.setIndex(nn)),V.isMesh)D.wireframe===!0?(Se.setLineWidth(D.wireframeLinewidth*Ce()),Qe.setMode(k.LINES)):Qe.setMode(k.TRIANGLES);else if(V.isLine){let Ie=D.linewidth;Ie===void 0&&(Ie=1),Se.setLineWidth(Ie*Ce()),V.isLineSegments?Qe.setMode(k.LINES):V.isLineLoop?Qe.setMode(k.LINE_LOOP):Qe.setMode(k.LINE_STRIP)}else V.isPoints?Qe.setMode(k.POINTS):V.isSprite&&Qe.setMode(k.TRIANGLES);if(V.isInstancedMesh)Qe.renderInstances(qe,kt,V.count);else if(z.isInstancedBufferGeometry){const Ie=z._maxInstanceCount!==void 0?z._maxInstanceCount:1/0,_r=Math.min(z.instanceCount,Ie);Qe.renderInstances(qe,kt,_r)}else Qe.render(qe,kt)},this.compile=function(A,N){function z(D,V,me){D.transparent===!0&&D.side===Kt&&D.forceSinglePass===!1?(D.side=vt,D.needsUpdate=!0,mi(D,V,me),D.side=an,D.needsUpdate=!0,mi(D,V,me),D.side=Kt):mi(D,V,me)}m=ne.get(A),m.init(),E.push(m),A.traverseVisible(function(D){D.isLight&&D.layers.test(N.layers)&&(m.pushLight(D),D.castShadow&&m.pushShadow(D))}),m.setupLights(b._useLegacyLights),A.traverse(function(D){const V=D.material;if(V)if(Array.isArray(V))for(let me=0;me<V.length;me++){const be=V[me];z(be,A,D)}else z(V,A,D)}),E.pop(),m=null};let Ve=null;function Tt(A){Ve&&Ve(A)}function Xe(){bt.stop()}function Wt(){bt.start()}const bt=new Do;bt.setAnimationLoop(Tt),typeof self<"u"&&bt.setContext(self),this.setAnimationLoop=function(A){Ve=A,R.setAnimationLoop(A),A===null?bt.stop():bt.start()},R.addEventListener("sessionstart",Xe),R.addEventListener("sessionend",Wt),this.render=function(A,N){if(N!==void 0&&N.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(L===!0)return;A.matrixWorldAutoUpdate===!0&&A.updateMatrixWorld(),N.parent===null&&N.matrixWorldAutoUpdate===!0&&N.updateMatrixWorld(),R.enabled===!0&&R.isPresenting===!0&&(R.cameraAutoUpdate===!0&&R.updateCamera(N),N=R.getCamera()),A.isScene===!0&&A.onBeforeRender(b,A,N,T),m=ne.get(A,E.length),m.init(),E.push(m),xe.multiplyMatrices(N.projectionMatrix,N.matrixWorldInverse),de.setFromProjectionMatrix(xe),pe=this.localClippingEnabled,_e=fe.init(this.clippingPlanes,pe),y=$.get(A,d.length),y.init(),d.push(y),Cs(A,N,0,b.sortObjects),y.finish(),b.sortObjects===!0&&y.sort(Y,j),this.info.render.frame++,_e===!0&&fe.beginShadows();const z=m.state.shadowsArray;if(ae.render(z,A,N),_e===!0&&fe.endShadows(),this.info.autoReset===!0&&this.info.reset(),O.render(y,A),m.setupLights(b._useLegacyLights),N.isArrayCamera){const D=N.cameras;for(let V=0,me=D.length;V<me;V++){const be=D[V];Ps(y,A,be,be.viewport)}}else Ps(y,A,N);T!==null&&(Le.updateMultisampleRenderTarget(T),Le.updateRenderTargetMipmap(T)),A.isScene===!0&&A.onAfterRender(b,A,N),ue.resetDefaultState(),W=-1,v=null,E.pop(),E.length>0?m=E[E.length-1]:m=null,d.pop(),d.length>0?y=d[d.length-1]:y=null};function Cs(A,N,z,D){if(A.visible===!1)return;if(A.layers.test(N.layers)){if(A.isGroup)z=A.renderOrder;else if(A.isLOD)A.autoUpdate===!0&&A.update(N);else if(A.isLight)m.pushLight(A),A.castShadow&&m.pushShadow(A);else if(A.isSprite){if(!A.frustumCulled||de.intersectsSprite(A)){D&&Be.setFromMatrixPosition(A.matrixWorld).applyMatrix4(xe);const be=g.update(A),Me=A.material;Me.visible&&y.push(A,be,Me,z,Be.z,null)}}else if((A.isMesh||A.isLine||A.isPoints)&&(!A.frustumCulled||de.intersectsObject(A))){const be=g.update(A),Me=A.material;if(D&&(A.boundingSphere!==void 0?(A.boundingSphere===null&&A.computeBoundingSphere(),Be.copy(A.boundingSphere.center)):(be.boundingSphere===null&&be.computeBoundingSphere(),Be.copy(be.boundingSphere.center)),Be.applyMatrix4(A.matrixWorld).applyMatrix4(xe)),Array.isArray(Me)){const Ee=be.groups;for(let Ue=0,Ae=Ee.length;Ue<Ae;Ue++){const Pe=Ee[Ue],qe=Me[Pe.materialIndex];qe&&qe.visible&&y.push(A,be,qe,z,Be.z,Pe)}}else Me.visible&&y.push(A,be,Me,z,Be.z,null)}}const me=A.children;for(let be=0,Me=me.length;be<Me;be++)Cs(me[be],N,z,D)}function Ps(A,N,z,D){const V=A.opaque,me=A.transmissive,be=A.transparent;m.setupLightsView(z),_e===!0&&fe.setGlobalState(b.clippingPlanes,z),me.length>0&&Wp(V,me,N,z),D&&Se.viewport(M.copy(D)),V.length>0&&pi(V,N,z),me.length>0&&pi(me,N,z),be.length>0&&pi(be,N,z),Se.buffers.depth.setTest(!0),Se.buffers.depth.setMask(!0),Se.buffers.color.setMask(!0),Se.setPolygonOffset(!1)}function Wp(A,N,z,D){const V=Te.isWebGL2;ye===null&&(ye=new An(1,1,{generateMipmaps:!0,type:ge.has("EXT_color_buffer_half_float")?da:sn,minFilter:ca,samples:V?4:0})),b.getDrawingBufferSize(he),V?ye.setSize(he.x,he.y):ye.setSize(ka(he.x),ka(he.y));const me=b.getRenderTarget();b.setRenderTarget(ye),b.getClearColor(F),H=b.getClearAlpha(),H<1&&b.setClearColor(16777215,.5),b.clear();const be=b.toneMapping;b.toneMapping=on,pi(A,z,D),Le.updateMultisampleRenderTarget(ye),Le.updateRenderTargetMipmap(ye);let Me=!1;for(let Ee=0,Ue=N.length;Ee<Ue;Ee++){const Ae=N[Ee],Pe=Ae.object,qe=Ae.geometry,je=Ae.material,kt=Ae.group;if(je.side===Kt&&Pe.layers.test(D.layers)){const nn=je.side;je.side=vt,je.needsUpdate=!0,Ns(Pe,z,D,qe,je,kt),je.side=nn,je.needsUpdate=!0,Me=!0}}Me===!0&&(Le.updateMultisampleRenderTarget(ye),Le.updateRenderTargetMipmap(ye)),b.setRenderTarget(me),b.setClearColor(F,H),b.toneMapping=be}function pi(A,N,z){const D=N.isScene===!0?N.overrideMaterial:null;for(let V=0,me=A.length;V<me;V++){const be=A[V],Me=be.object,Ee=be.geometry,Ue=D===null?be.material:D,Ae=be.group;Me.layers.test(z.layers)&&Ns(Me,N,z,Ee,Ue,Ae)}}function Ns(A,N,z,D,V,me){A.onBeforeRender(b,N,z,D,V,me),A.modelViewMatrix.multiplyMatrices(z.matrixWorldInverse,A.matrixWorld),A.normalMatrix.getNormalMatrix(A.modelViewMatrix),V.onBeforeRender(b,N,z,D,A,me),V.transparent===!0&&V.side===Kt&&V.forceSinglePass===!1?(V.side=vt,V.needsUpdate=!0,b.renderBufferDirect(z,N,D,V,A,me),V.side=an,V.needsUpdate=!0,b.renderBufferDirect(z,N,D,V,A,me),V.side=Kt):b.renderBufferDirect(z,N,D,V,A,me),A.onAfterRender(b,N,z,D,V,me)}function mi(A,N,z){N.isScene!==!0&&(N=ut);const D=ke.get(A),V=m.state.lights,me=m.state.shadowsArray,be=V.state.version,Me=I.getParameters(A,V.state,me,N,z),Ee=I.getProgramCacheKey(Me);let Ue=D.programs;D.environment=A.isMeshStandardMaterial?N.environment:null,D.fog=N.fog,D.envMap=(A.isMeshStandardMaterial?rt:Fe).get(A.envMap||D.environment),Ue===void 0&&(A.addEventListener("dispose",re),Ue=new Map,D.programs=Ue);let Ae=Ue.get(Ee);if(Ae!==void 0){if(D.currentProgram===Ae&&D.lightsStateVersion===be)return ks(A,Me),Ae}else Me.uniforms=I.getUniforms(A),A.onBuild(z,Me,b),A.onBeforeCompile(Me,b),Ae=I.acquireProgram(Me,Ee),Ue.set(Ee,Ae),D.uniforms=Me.uniforms;const Pe=D.uniforms;(!A.isShaderMaterial&&!A.isRawShaderMaterial||A.clipping===!0)&&(Pe.clippingPlanes=fe.uniform),ks(A,Me),D.needsLights=Yp(A),D.lightsStateVersion=be,D.needsLights&&(Pe.ambientLightColor.value=V.state.ambient,Pe.lightProbe.value=V.state.probe,Pe.directionalLights.value=V.state.directional,Pe.directionalLightShadows.value=V.state.directionalShadow,Pe.spotLights.value=V.state.spot,Pe.spotLightShadows.value=V.state.spotShadow,Pe.rectAreaLights.value=V.state.rectArea,Pe.ltc_1.value=V.state.rectAreaLTC1,Pe.ltc_2.value=V.state.rectAreaLTC2,Pe.pointLights.value=V.state.point,Pe.pointLightShadows.value=V.state.pointShadow,Pe.hemisphereLights.value=V.state.hemi,Pe.directionalShadowMap.value=V.state.directionalShadowMap,Pe.directionalShadowMatrix.value=V.state.directionalShadowMatrix,Pe.spotShadowMap.value=V.state.spotShadowMap,Pe.spotLightMatrix.value=V.state.spotLightMatrix,Pe.spotLightMap.value=V.state.spotLightMap,Pe.pointShadowMap.value=V.state.pointShadowMap,Pe.pointShadowMatrix.value=V.state.pointShadowMatrix);const qe=Ae.getUniforms(),je=ii.seqWithValue(qe.seq,Pe);return D.currentProgram=Ae,D.uniformsList=je,Ae}function ks(A,N){const z=ke.get(A);z.outputColorSpace=N.outputColorSpace,z.instancing=N.instancing,z.instancingColor=N.instancingColor,z.skinning=N.skinning,z.morphTargets=N.morphTargets,z.morphNormals=N.morphNormals,z.morphColors=N.morphColors,z.morphTargetsCount=N.morphTargetsCount,z.numClippingPlanes=N.numClippingPlanes,z.numIntersection=N.numClipIntersection,z.vertexAlphas=N.vertexAlphas,z.vertexTangents=N.vertexTangents,z.toneMapping=N.toneMapping}function Xp(A,N,z,D,V){N.isScene!==!0&&(N=ut),Le.resetTextureUnits();const me=N.fog,be=D.isMeshStandardMaterial?N.environment:null,Me=T===null?b.outputColorSpace:T.isXRRenderTarget===!0?T.texture.colorSpace:Ht,Ee=(D.isMeshStandardMaterial?rt:Fe).get(D.envMap||be),Ue=D.vertexColors===!0&&!!z.attributes.color&&z.attributes.color.itemSize===4,Ae=!!z.attributes.tangent&&(!!D.normalMap||D.anisotropy>0),Pe=!!z.morphAttributes.position,qe=!!z.morphAttributes.normal,je=!!z.morphAttributes.color;let kt=on;D.toneMapped&&(T===null||T.isXRRenderTarget===!0)&&(kt=b.toneMapping);const nn=z.morphAttributes.position||z.morphAttributes.normal||z.morphAttributes.color,Qe=nn!==void 0?nn.length:0,Ie=ke.get(D),_r=m.state.lights;if(_e===!0&&(pe===!0||A!==v)){const Lt=A===v&&D.id===W;fe.setState(D,A,Lt)}let et=!1;D.version===Ie.__version?(Ie.needsLights&&Ie.lightsStateVersion!==_r.state.version||Ie.outputColorSpace!==Me||V.isInstancedMesh&&Ie.instancing===!1||!V.isInstancedMesh&&Ie.instancing===!0||V.isSkinnedMesh&&Ie.skinning===!1||!V.isSkinnedMesh&&Ie.skinning===!0||V.isInstancedMesh&&Ie.instancingColor===!0&&V.instanceColor===null||V.isInstancedMesh&&Ie.instancingColor===!1&&V.instanceColor!==null||Ie.envMap!==Ee||D.fog===!0&&Ie.fog!==me||Ie.numClippingPlanes!==void 0&&(Ie.numClippingPlanes!==fe.numPlanes||Ie.numIntersection!==fe.numIntersection)||Ie.vertexAlphas!==Ue||Ie.vertexTangents!==Ae||Ie.morphTargets!==Pe||Ie.morphNormals!==qe||Ie.morphColors!==je||Ie.toneMapping!==kt||Te.isWebGL2===!0&&Ie.morphTargetsCount!==Qe)&&(et=!0):(et=!0,Ie.__version=D.version);let Pn=Ie.currentProgram;et===!0&&(Pn=mi(D,N,V));let Ds=!1,Ra=!1,pr=!1;const yt=Pn.getUniforms(),Nn=Ie.uniforms;if(Se.useProgram(Pn.program)&&(Ds=!0,Ra=!0,pr=!0),D.id!==W&&(W=D.id,Ra=!0),Ds||v!==A){yt.setValue(k,"projectionMatrix",A.projectionMatrix),yt.setValue(k,"viewMatrix",A.matrixWorldInverse);const Lt=yt.map.cameraPosition;Lt!==void 0&&Lt.setValue(k,Be.setFromMatrixPosition(A.matrixWorld)),Te.logarithmicDepthBuffer&&yt.setValue(k,"logDepthBufFC",2/(Math.log(A.far+1)/Math.LN2)),(D.isMeshPhongMaterial||D.isMeshToonMaterial||D.isMeshLambertMaterial||D.isMeshBasicMaterial||D.isMeshStandardMaterial||D.isShaderMaterial)&&yt.setValue(k,"isOrthographic",A.isOrthographicCamera===!0),v!==A&&(v=A,Ra=!0,pr=!0)}if(V.isSkinnedMesh){yt.setOptional(k,V,"bindMatrix"),yt.setOptional(k,V,"bindMatrixInverse");const Lt=V.skeleton;Lt&&(Te.floatVertexTextures?(Lt.boneTexture===null&&Lt.computeBoneTexture(),yt.setValue(k,"boneTexture",Lt.boneTexture,Le),yt.setValue(k,"boneTextureSize",Lt.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const mr=z.morphAttributes;if((mr.position!==void 0||mr.normal!==void 0||mr.color!==void 0&&Te.isWebGL2===!0)&&w.update(V,z,Pn),(Ra||Ie.receiveShadow!==V.receiveShadow)&&(Ie.receiveShadow=V.receiveShadow,yt.setValue(k,"receiveShadow",V.receiveShadow)),D.isMeshGouraudMaterial&&D.envMap!==null&&(Nn.envMap.value=Ee,Nn.flipEnvMap.value=Ee.isCubeTexture&&Ee.isRenderTargetTexture===!1?-1:1),Ra&&(yt.setValue(k,"toneMappingExposure",b.toneMappingExposure),Ie.needsLights&&Kp(Nn,pr),me&&D.fog===!0&&te.refreshFogUniforms(Nn,me),te.refreshMaterialUniforms(Nn,D,X,Q,ye),ii.upload(k,Ie.uniformsList,Nn,Le)),D.isShaderMaterial&&D.uniformsNeedUpdate===!0&&(ii.upload(k,Ie.uniformsList,Nn,Le),D.uniformsNeedUpdate=!1),D.isSpriteMaterial&&yt.setValue(k,"center",V.center),yt.setValue(k,"modelViewMatrix",V.modelViewMatrix),yt.setValue(k,"normalMatrix",V.normalMatrix),yt.setValue(k,"modelMatrix",V.matrixWorld),D.isShaderMaterial||D.isRawShaderMaterial){const Lt=D.uniformsGroups;for(let fr=0,Zp=Lt.length;fr<Zp;fr++)if(Te.isWebGL2){const Us=Lt[fr];we.update(Us,Pn),we.bind(Us,Pn)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Pn}function Kp(A,N){A.ambientLightColor.needsUpdate=N,A.lightProbe.needsUpdate=N,A.directionalLights.needsUpdate=N,A.directionalLightShadows.needsUpdate=N,A.pointLights.needsUpdate=N,A.pointLightShadows.needsUpdate=N,A.spotLights.needsUpdate=N,A.spotLightShadows.needsUpdate=N,A.rectAreaLights.needsUpdate=N,A.hemisphereLights.needsUpdate=N}function Yp(A){return A.isMeshLambertMaterial||A.isMeshToonMaterial||A.isMeshPhongMaterial||A.isMeshStandardMaterial||A.isShadowMaterial||A.isShaderMaterial&&A.lights===!0}this.getActiveCubeFace=function(){return x},this.getActiveMipmapLevel=function(){return P},this.getRenderTarget=function(){return T},this.setRenderTargetTextures=function(A,N,z){ke.get(A.texture).__webglTexture=N,ke.get(A.depthTexture).__webglTexture=z;const D=ke.get(A);D.__hasExternalTextures=!0,D.__hasExternalTextures&&(D.__autoAllocateDepthBuffer=z===void 0,D.__autoAllocateDepthBuffer||ge.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),D.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(A,N){const z=ke.get(A);z.__webglFramebuffer=N,z.__useDefaultFramebuffer=N===void 0},this.setRenderTarget=function(A,N=0,z=0){T=A,x=N,P=z;let D=!0,V=null,me=!1,be=!1;if(A){const Ee=ke.get(A);Ee.__useDefaultFramebuffer!==void 0?(Se.bindFramebuffer(k.FRAMEBUFFER,null),D=!1):Ee.__webglFramebuffer===void 0?Le.setupRenderTarget(A):Ee.__hasExternalTextures&&Le.rebindTextures(A,ke.get(A.texture).__webglTexture,ke.get(A.depthTexture).__webglTexture);const Ue=A.texture;(Ue.isData3DTexture||Ue.isDataArrayTexture||Ue.isCompressedArrayTexture)&&(be=!0);const Ae=ke.get(A).__webglFramebuffer;A.isWebGLCubeRenderTarget?(Array.isArray(Ae[N])?V=Ae[N][z]:V=Ae[N],me=!0):Te.isWebGL2&&A.samples>0&&Le.useMultisampledRTT(A)===!1?V=ke.get(A).__webglMultisampledFramebuffer:Array.isArray(Ae)?V=Ae[z]:V=Ae,M.copy(A.viewport),q.copy(A.scissor),ie=A.scissorTest}else M.copy(J).multiplyScalar(X).floor(),q.copy(U).multiplyScalar(X).floor(),ie=K;if(Se.bindFramebuffer(k.FRAMEBUFFER,V)&&Te.drawBuffers&&D&&Se.drawBuffers(A,V),Se.viewport(M),Se.scissor(q),Se.setScissorTest(ie),me){const Ee=ke.get(A.texture);k.framebufferTexture2D(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,k.TEXTURE_CUBE_MAP_POSITIVE_X+N,Ee.__webglTexture,z)}else if(be){const Ee=ke.get(A.texture),Ue=N||0;k.framebufferTextureLayer(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,Ee.__webglTexture,z||0,Ue)}W=-1},this.readRenderTargetPixels=function(A,N,z,D,V,me,be){if(!(A&&A.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Me=ke.get(A).__webglFramebuffer;if(A.isWebGLCubeRenderTarget&&be!==void 0&&(Me=Me[be]),Me){Se.bindFramebuffer(k.FRAMEBUFFER,Me);try{const Ee=A.texture,Ue=Ee.format,Ae=Ee.type;if(Ue!==Ut&&oe.convert(Ue)!==k.getParameter(k.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Pe=Ae===da&&(ge.has("EXT_color_buffer_half_float")||Te.isWebGL2&&ge.has("EXT_color_buffer_float"));if(Ae!==sn&&oe.convert(Ae)!==k.getParameter(k.IMPLEMENTATION_COLOR_READ_TYPE)&&!(Ae===un&&(Te.isWebGL2||ge.has("OES_texture_float")||ge.has("WEBGL_color_buffer_float")))&&!Pe){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}N>=0&&N<=A.width-D&&z>=0&&z<=A.height-V&&k.readPixels(N,z,D,V,oe.convert(Ue),oe.convert(Ae),me)}finally{const Ee=T!==null?ke.get(T).__webglFramebuffer:null;Se.bindFramebuffer(k.FRAMEBUFFER,Ee)}}},this.copyFramebufferToTexture=function(A,N,z=0){const D=Math.pow(2,-z),V=Math.floor(N.image.width*D),me=Math.floor(N.image.height*D);Le.setTexture2D(N,0),k.copyTexSubImage2D(k.TEXTURE_2D,z,0,0,A.x,A.y,V,me),Se.unbindTexture()},this.copyTextureToTexture=function(A,N,z,D=0){const V=N.image.width,me=N.image.height,be=oe.convert(z.format),Me=oe.convert(z.type);Le.setTexture2D(z,0),k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,z.flipY),k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,z.premultiplyAlpha),k.pixelStorei(k.UNPACK_ALIGNMENT,z.unpackAlignment),N.isDataTexture?k.texSubImage2D(k.TEXTURE_2D,D,A.x,A.y,V,me,be,Me,N.image.data):N.isCompressedTexture?k.compressedTexSubImage2D(k.TEXTURE_2D,D,A.x,A.y,N.mipmaps[0].width,N.mipmaps[0].height,be,N.mipmaps[0].data):k.texSubImage2D(k.TEXTURE_2D,D,A.x,A.y,be,Me,N.image),D===0&&z.generateMipmaps&&k.generateMipmap(k.TEXTURE_2D),Se.unbindTexture()},this.copyTextureToTexture3D=function(A,N,z,D,V=0){if(b.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const me=A.max.x-A.min.x+1,be=A.max.y-A.min.y+1,Me=A.max.z-A.min.z+1,Ee=oe.convert(D.format),Ue=oe.convert(D.type);let Ae;if(D.isData3DTexture)Le.setTexture3D(D,0),Ae=k.TEXTURE_3D;else if(D.isDataArrayTexture)Le.setTexture2DArray(D,0),Ae=k.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,D.flipY),k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,D.premultiplyAlpha),k.pixelStorei(k.UNPACK_ALIGNMENT,D.unpackAlignment);const Pe=k.getParameter(k.UNPACK_ROW_LENGTH),qe=k.getParameter(k.UNPACK_IMAGE_HEIGHT),je=k.getParameter(k.UNPACK_SKIP_PIXELS),kt=k.getParameter(k.UNPACK_SKIP_ROWS),nn=k.getParameter(k.UNPACK_SKIP_IMAGES),Qe=z.isCompressedTexture?z.mipmaps[0]:z.image;k.pixelStorei(k.UNPACK_ROW_LENGTH,Qe.width),k.pixelStorei(k.UNPACK_IMAGE_HEIGHT,Qe.height),k.pixelStorei(k.UNPACK_SKIP_PIXELS,A.min.x),k.pixelStorei(k.UNPACK_SKIP_ROWS,A.min.y),k.pixelStorei(k.UNPACK_SKIP_IMAGES,A.min.z),z.isDataTexture||z.isData3DTexture?k.texSubImage3D(Ae,V,N.x,N.y,N.z,me,be,Me,Ee,Ue,Qe.data):z.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),k.compressedTexSubImage3D(Ae,V,N.x,N.y,N.z,me,be,Me,Ee,Qe.data)):k.texSubImage3D(Ae,V,N.x,N.y,N.z,me,be,Me,Ee,Ue,Qe),k.pixelStorei(k.UNPACK_ROW_LENGTH,Pe),k.pixelStorei(k.UNPACK_IMAGE_HEIGHT,qe),k.pixelStorei(k.UNPACK_SKIP_PIXELS,je),k.pixelStorei(k.UNPACK_SKIP_ROWS,kt),k.pixelStorei(k.UNPACK_SKIP_IMAGES,nn),V===0&&D.generateMipmaps&&k.generateMipmap(Ae),Se.unbindTexture()},this.initTexture=function(A){A.isCubeTexture?Le.setTextureCube(A,0):A.isData3DTexture?Le.setTexture3D(A,0):A.isDataArrayTexture||A.isCompressedArrayTexture?Le.setTexture2DArray(A,0):Le.setTexture2D(A,0),Se.unbindTexture()},this.resetState=function(){x=0,P=0,T=null,Se.reset(),ue.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Yt}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===Ke?bn:ro}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===bn?Ke:Ht}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class Ep extends ss{}Ep.prototype.isWebGL1Renderer=!0;class xp extends lt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}}class wp{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Li,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Zt()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Zt()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Zt()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const gt=new C;class ri{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)gt.fromBufferAttribute(this,t),gt.applyMatrix4(e),this.setXYZ(t,gt.x,gt.y,gt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)gt.fromBufferAttribute(this,t),gt.applyNormalMatrix(e),this.setXYZ(t,gt.x,gt.y,gt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)gt.fromBufferAttribute(this,t),gt.transformDirection(e),this.setXYZ(t,gt.x,gt.y,gt.z);return this}setX(e,t){return this.normalized&&(t=ze(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=ze(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=ze(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=ze(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=zt(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=zt(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=zt(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=zt(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array),i=ze(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=ze(t,this.array),n=ze(n,this.array),i=ze(i,this.array),r=ze(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new Mt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new ri(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class ls extends xn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Ge(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let oa;const Ea=new C,sa=new C,la=new C,ua=new ve,xa=new ve,us=new Ze,oi=new C,wa=new C,si=new C,cs=new ve,ir=new ve,ds=new ve;class Tp extends lt{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",oa===void 0){oa=new xt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new wp(t,5);oa.setIndex([0,1,2,0,2,3]),oa.setAttribute("position",new ri(n,3,0,!1)),oa.setAttribute("uv",new ri(n,2,3,!1))}this.geometry=oa,this.material=e!==void 0?e:new ls,this.center=new ve(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),sa.setFromMatrixScale(this.matrixWorld),us.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),la.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&sa.multiplyScalar(-la.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const s=this.center;li(oi.set(-.5,-.5,0),la,s,sa,i,r),li(wa.set(.5,-.5,0),la,s,sa,i,r),li(si.set(.5,.5,0),la,s,sa,i,r),cs.set(0,0),ir.set(1,0),ds.set(1,1);let o=e.ray.intersectTriangle(oi,wa,si,!1,Ea);if(o===null&&(li(wa.set(-.5,.5,0),la,s,sa,i,r),ir.set(0,1),o=e.ray.intersectTriangle(oi,si,wa,!1,Ea),o===null))return;const l=e.ray.origin.distanceTo(Ea);l<e.near||l>e.far||t.push({distance:l,point:Ea.clone(),uv:Pt.getInterpolation(Ea,oi,wa,si,cs,ir,ds,new ve),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function li(a,e,t,n,i,r){ua.subVectors(a,t).addScalar(.5).multiply(n),i!==void 0?(xa.x=r*ua.x-i*ua.y,xa.y=i*ua.x+r*ua.y):xa.copy(ua),a.copy(e),a.x+=xa.x,a.y+=xa.y,a.applyMatrix4(us)}class _s extends xn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ge(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const ps=new C,ms=new C,fs=new Ze,rr=new Fa,ui=new ya;class Lp extends lt{constructor(e=new xt,t=new _s){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)ps.fromBufferAttribute(t,i-1),ms.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=ps.distanceTo(ms);e.setAttribute("lineDistance",new Gt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,s=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),ui.copy(n.boundingSphere),ui.applyMatrix4(i),ui.radius+=r,e.ray.intersectsSphere(ui)===!1)return;fs.copy(i).invert(),rr.copy(e.ray).applyMatrix4(fs);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,u=new C,c=new C,_=new C,p=new C,f=this.isLineSegments?2:1,h=n.index,m=n.attributes.position;if(h!==null){const d=Math.max(0,s.start),E=Math.min(h.count,s.start+s.count);for(let b=d,L=E-1;b<L;b+=f){const x=h.getX(b),P=h.getX(b+1);if(u.fromBufferAttribute(m,x),c.fromBufferAttribute(m,P),rr.distanceSqToSegment(u,c,p,_)>l)continue;p.applyMatrix4(this.matrixWorld);const W=e.ray.origin.distanceTo(p);W<e.near||W>e.far||t.push({distance:W,point:_.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this})}}else{const d=Math.max(0,s.start),E=Math.min(m.count,s.start+s.count);for(let b=d,L=E-1;b<L;b+=f){if(u.fromBufferAttribute(m,b),c.fromBufferAttribute(m,b+1),rr.distanceSqToSegment(u,c,p,_)>l)continue;p.applyMatrix4(this.matrixWorld);const P=e.ray.origin.distanceTo(p);P<e.near||P>e.far||t.push({distance:P,point:_.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}}class hs extends xn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Ge(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const gs=new Ze,or=new Fa,ci=new ya,di=new C;class Rp extends lt{constructor(e=new xt,t=new hs){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,s=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),ci.copy(n.boundingSphere),ci.applyMatrix4(i),ci.radius+=r,e.ray.intersectsSphere(ci)===!1)return;gs.copy(i).invert(),or.copy(e.ray).applyMatrix4(gs);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,u=n.index,_=n.attributes.position;if(u!==null){const p=Math.max(0,s.start),f=Math.min(u.count,s.start+s.count);for(let h=p,y=f;h<y;h++){const m=u.getX(h);di.fromBufferAttribute(_,m),bs(di,m,l,i,e,t,this)}}else{const p=Math.max(0,s.start),f=Math.min(_.count,s.start+s.count);for(let h=p,y=f;h<y;h++)di.fromBufferAttribute(_,h),bs(di,h,l,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}}function bs(a,e,t,n,i,r,s){const o=or.distanceSqToPoint(a);if(o<t){const l=new C;or.closestPointToPoint(a,l),l.applyMatrix4(n);const u=i.ray.origin.distanceTo(l);if(u<i.near||u>i.far)return;r.push({distance:u,distanceToRay:Math.sqrt(o),point:l,index:e,face:null,object:s})}}class sr extends xt{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,s=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:s,thetaLength:o},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(s+o,Math.PI);let u=0;const c=[],_=new C,p=new C,f=[],h=[],y=[],m=[];for(let d=0;d<=n;d++){const E=[],b=d/n;let L=0;d===0&&s===0?L=.5/t:d===n&&l===Math.PI&&(L=-.5/t);for(let x=0;x<=t;x++){const P=x/t;_.x=-e*Math.cos(i+P*r)*Math.sin(s+b*o),_.y=e*Math.cos(s+b*o),_.z=e*Math.sin(i+P*r)*Math.sin(s+b*o),h.push(_.x,_.y,_.z),p.copy(_).normalize(),y.push(p.x,p.y,p.z),m.push(P+L,1-b),E.push(u++)}c.push(E)}for(let d=0;d<n;d++)for(let E=0;E<t;E++){const b=c[d][E+1],L=c[d][E],x=c[d+1][E],P=c[d+1][E+1];(d!==0||s>0)&&f.push(b,L,P),(d!==n-1||l<Math.PI)&&f.push(L,x,P)}this.setIndex(f),this.setAttribute("position",new Gt(h,3)),this.setAttribute("normal",new Gt(y,3)),this.setAttribute("uv",new Gt(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new sr(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Cp extends lt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Ge(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}const lr=new Ze,ys=new C,vs=new C;class Pp{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ve(512,512),this.map=null,this.mapPass=null,this.matrix=new Ze,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new ji,this._frameExtents=new ve(1,1),this._viewportCount=1,this._viewports=[new Ye(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;ys.setFromMatrixPosition(e.matrixWorld),t.position.copy(ys),vs.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(vs),t.updateMatrixWorld(),lr.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(lr),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(lr)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}const As=new Ze,Ta=new C,ur=new C;class Np extends Pp{constructor(){super(new wt(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ve(4,2),this._viewportCount=6,this._viewports=[new Ye(2,1,1,1),new Ye(0,1,1,1),new Ye(3,1,1,1),new Ye(1,1,1,1),new Ye(3,0,1,1),new Ye(1,0,1,1)],this._cubeDirections=[new C(1,0,0),new C(-1,0,0),new C(0,0,1),new C(0,0,-1),new C(0,1,0),new C(0,-1,0)],this._cubeUps=[new C(0,1,0),new C(0,1,0),new C(0,1,0),new C(0,1,0),new C(0,0,1),new C(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Ta.setFromMatrixPosition(e.matrixWorld),n.position.copy(Ta),ur.copy(n.position),ur.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(ur),n.updateMatrixWorld(),i.makeTranslation(-Ta.x,-Ta.y,-Ta.z),As.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(As)}}class kp extends Cp{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Np}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Ss{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(dt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:mt}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=mt);function Dp(a,e={}){const{fontface:t="Arial",fontsize:n=24,color:i="rgba(0, 0, 0, 1.0)"}=e;var r=document.createElement("canvas");r.setAttribute("width","256"),r.setAttribute("height","64");var s=r.getContext("2d");s.font=`${n}px ${t}`,s.textAlign="center",s.fillStyle=i,s.fillText(a,128,24);var o=new At(r);o.needsUpdate=!0;var l=new ls({map:o}),u=new Tp(l);return u.scale.set(256,64,1),u}const fn=class fn extends C{constructor(t,n,i){var e=(...Bm)=>{super(...Bm);Je(this,"h");Je(this,"lat");Je(this,"long");Je(this,"x");Je(this,"y");Je(this,"z")};let r=0,s=0,o=0;t instanceof C?(e(t.x,t.y,t.z),r=t.x,s=t.y,o=t.z):(e(t,n,i),r=t,s=n,o=i),this.x=r,this.y=s,this.z=o;const l=this.length();this.h=l-fn.planetRadius,this.lat=-Math.asin(-s/l),this.long=-Math.atan2(r,-o)}asVector(){return new C(this.x,this.y,this.z)}static fromV(t){return new fn(t.x,t.y,t.z)}static fromLLd(t,n,i){return fn.fromLL(t*Math.PI/180,n*Math.PI/180,i)}static fromLL(t,n,i=0){const s=fn.planetRadius+i;return new fn(s*Math.cos(-n)*Math.sin(-t),-s*Math.sin(-n),-s*Math.cos(-n)*Math.cos(-t))}};Je(fn,"planetRadius",6731e3);let La=fn;const cr={type:"Topology",objects:{countries:{type:"GeometryCollection",bbox:[-179.99999999999997,-90.00000000000003,180.00000000000014,83.64513000000001],geometries:[{type:"Polygon",id:"AFG",arcs:[[0,1,2,3,4,5]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Afghanistan",sov_a3:"AFG",adm0_dif:0,level:2,type:"Sovereign country",admin:"Afghanistan",adm0_a3:"AFG",geou_dif:0,geounit:"Afghanistan",gu_a3:"AFG",su_dif:0,subunit:"Afghanistan",su_a3:"AFG",brk_diff:0,name:"Afghanistan",name_long:"Afghanistan",brk_a3:"AFG",brk_name:"Afghanistan",brk_group:null,abbrev:"Afg.",postal:"AF",formal_en:"Islamic State of Afghanistan",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Afghanistan",name_alt:null,mapcolor7:5,mapcolor8:6,mapcolor9:8,mapcolor13:7,pop_est:284e5,gdp_md_est:22270,pop_year:-99,lastcensus:1979,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"AF",iso_a3:"AFG",iso_n3:"004",un_a3:"004",wb_a2:"AF",wb_a3:"AFG",woe_id:-99,adm0_a3_is:"AFG",adm0_a3_us:"AFG",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Southern Asia",region_wb:"South Asia",name_len:11,long_len:11,abbrev_len:4,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"AGO",arcs:[[[6,7,8,9]],[[10,11,12]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Angola",sov_a3:"AGO",adm0_dif:0,level:2,type:"Sovereign country",admin:"Angola",adm0_a3:"AGO",geou_dif:0,geounit:"Angola",gu_a3:"AGO",su_dif:0,subunit:"Angola",su_a3:"AGO",brk_diff:0,name:"Angola",name_long:"Angola",brk_a3:"AGO",brk_name:"Angola",brk_group:null,abbrev:"Ang.",postal:"AO",formal_en:"People's Republic of Angola",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Angola",name_alt:null,mapcolor7:3,mapcolor8:2,mapcolor9:6,mapcolor13:1,pop_est:12799293,gdp_md_est:110300,pop_year:-99,lastcensus:1970,gdp_year:-99,economy:"7. Least developed region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"AO",iso_a3:"AGO",iso_n3:"024",un_a3:"024",wb_a2:"AO",wb_a3:"AGO",woe_id:-99,adm0_a3_is:"AGO",adm0_a3_us:"AGO",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Middle Africa",region_wb:"Sub-Saharan Africa",name_len:6,long_len:6,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"ALB",arcs:[[13,14,15,16,17]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:6,sovereignt:"Albania",sov_a3:"ALB",adm0_dif:0,level:2,type:"Sovereign country",admin:"Albania",adm0_a3:"ALB",geou_dif:0,geounit:"Albania",gu_a3:"ALB",su_dif:0,subunit:"Albania",su_a3:"ALB",brk_diff:0,name:"Albania",name_long:"Albania",brk_a3:"ALB",brk_name:"Albania",brk_group:null,abbrev:"Alb.",postal:"AL",formal_en:"Republic of Albania",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Albania",name_alt:null,mapcolor7:1,mapcolor8:4,mapcolor9:1,mapcolor13:6,pop_est:3639453,gdp_md_est:21810,pop_year:-99,lastcensus:2001,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"AL",iso_a3:"ALB",iso_n3:"008",un_a3:"008",wb_a2:"AL",wb_a3:"ALB",woe_id:-99,adm0_a3_is:"ALB",adm0_a3_us:"ALB",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Southern Europe",region_wb:"Europe & Central Asia",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"ARE",arcs:[[18,19,20,21,22]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"United Arab Emirates",sov_a3:"ARE",adm0_dif:0,level:2,type:"Sovereign country",admin:"United Arab Emirates",adm0_a3:"ARE",geou_dif:0,geounit:"United Arab Emirates",gu_a3:"ARE",su_dif:0,subunit:"United Arab Emirates",su_a3:"ARE",brk_diff:0,name:"United Arab Emirates",name_long:"United Arab Emirates",brk_a3:"ARE",brk_name:"United Arab Emirates",brk_group:null,abbrev:"U.A.E.",postal:"AE",formal_en:"United Arab Emirates",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"United Arab Emirates",name_alt:null,mapcolor7:2,mapcolor8:1,mapcolor9:3,mapcolor13:3,pop_est:4798491,gdp_md_est:184300,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"6. Developing region",income_grp:"2. High income: nonOECD",wikipedia:-99,fips_10:null,iso_a2:"AE",iso_a3:"ARE",iso_n3:"784",un_a3:"784",wb_a2:"AE",wb_a3:"ARE",woe_id:-99,adm0_a3_is:"ARE",adm0_a3_us:"ARE",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Western Asia",region_wb:"Middle East & North Africa",name_len:20,long_len:20,abbrev_len:6,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"ARG",arcs:[[[23,24]],[[25,26,27,28,29,30]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Argentina",sov_a3:"ARG",adm0_dif:0,level:2,type:"Sovereign country",admin:"Argentina",adm0_a3:"ARG",geou_dif:0,geounit:"Argentina",gu_a3:"ARG",su_dif:0,subunit:"Argentina",su_a3:"ARG",brk_diff:0,name:"Argentina",name_long:"Argentina",brk_a3:"ARG",brk_name:"Argentina",brk_group:null,abbrev:"Arg.",postal:"AR",formal_en:"Argentine Republic",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Argentina",name_alt:null,mapcolor7:3,mapcolor8:1,mapcolor9:3,mapcolor13:13,pop_est:40913584,gdp_md_est:573900,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"5. Emerging region: G20",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"AR",iso_a3:"ARG",iso_n3:"032",un_a3:"032",wb_a2:"AR",wb_a3:"ARG",woe_id:-99,adm0_a3_is:"ARG",adm0_a3_us:"ARG",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"South America",region_un:"Americas",subregion:"South America",region_wb:"Latin America & Caribbean",name_len:9,long_len:9,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"ARM",arcs:[[31,32,33,34,35]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:6,sovereignt:"Armenia",sov_a3:"ARM",adm0_dif:0,level:2,type:"Sovereign country",admin:"Armenia",adm0_a3:"ARM",geou_dif:0,geounit:"Armenia",gu_a3:"ARM",su_dif:0,subunit:"Armenia",su_a3:"ARM",brk_diff:0,name:"Armenia",name_long:"Armenia",brk_a3:"ARM",brk_name:"Armenia",brk_group:null,abbrev:"Arm.",postal:"ARM",formal_en:"Republic of Armenia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Armenia",name_alt:null,mapcolor7:3,mapcolor8:1,mapcolor9:2,mapcolor13:10,pop_est:2967004,gdp_md_est:18770,pop_year:-99,lastcensus:2001,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"AM",iso_a3:"ARM",iso_n3:"051",un_a3:"051",wb_a2:"AM",wb_a3:"ARM",woe_id:-99,adm0_a3_is:"ARM",adm0_a3_us:"ARM",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Western Asia",region_wb:"Europe & Central Asia",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"ATA",arcs:[[[36]],[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Antarctica",sov_a3:"ATA",adm0_dif:0,level:2,type:"Indeterminate",admin:"Antarctica",adm0_a3:"ATA",geou_dif:0,geounit:"Antarctica",gu_a3:"ATA",su_dif:0,subunit:"Antarctica",su_a3:"ATA",brk_diff:0,name:"Antarctica",name_long:"Antarctica",brk_a3:"ATA",brk_name:"Antarctica",brk_group:null,abbrev:"Ant.",postal:"AQ",formal_en:null,formal_fr:null,note_adm0:null,note_brk:"Multiple claims held in abeyance",name_sort:"Antarctica",name_alt:null,mapcolor7:4,mapcolor8:5,mapcolor9:1,mapcolor13:-99,pop_est:3802,gdp_md_est:760.4,pop_year:-99,lastcensus:-99,gdp_year:-99,economy:"6. Developing region",income_grp:"2. High income: nonOECD",wikipedia:-99,fips_10:null,iso_a2:"AQ",iso_a3:"ATA",iso_n3:"010",un_a3:"-099",wb_a2:"-99",wb_a3:"-99",woe_id:-99,adm0_a3_is:"ATA",adm0_a3_us:"ATA",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Antarctica",region_un:"Antarctica",subregion:"Antarctica",region_wb:"Antarctica",name_len:10,long_len:10,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"ATF",arcs:[[44]],properties:{scalerank:3,featurecla:"Admin-0 country",labelrank:6,sovereignt:"France",sov_a3:"FR1",adm0_dif:1,level:2,type:"Dependency",admin:"French Southern and Antarctic Lands",adm0_a3:"ATF",geou_dif:0,geounit:"French Southern and Antarctic Lands",gu_a3:"ATF",su_dif:0,subunit:"French Southern and Antarctic Lands",su_a3:"ATF",brk_diff:0,name:"Fr. S. Antarctic Lands",name_long:"French Southern and Antarctic Lands",brk_a3:"ATF",brk_name:"Fr. S. and Antarctic Lands",brk_group:null,abbrev:"Fr. S.A.L.",postal:"TF",formal_en:"Territory of the French Southern and Antarctic Lands",formal_fr:null,note_adm0:"Fr.",note_brk:null,name_sort:"French Southern and Antarctic Lands",name_alt:null,mapcolor7:7,mapcolor8:5,mapcolor9:9,mapcolor13:11,pop_est:140,gdp_md_est:16,pop_year:-99,lastcensus:-99,gdp_year:-99,economy:"6. Developing region",income_grp:"2. High income: nonOECD",wikipedia:-99,fips_10:null,iso_a2:"TF",iso_a3:"ATF",iso_n3:"260",un_a3:"-099",wb_a2:"-99",wb_a3:"-99",woe_id:-99,adm0_a3_is:"ATF",adm0_a3_us:"ATF",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Seven seas (open ocean)",region_un:"Seven seas (open ocean)",subregion:"Seven seas (open ocean)",region_wb:"Sub-Saharan Africa",name_len:22,long_len:35,abbrev_len:10,tiny:2,homepart:-99}},{type:"MultiPolygon",id:"AUS",arcs:[[[45]],[[46]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Australia",sov_a3:"AU1",adm0_dif:1,level:2,type:"Country",admin:"Australia",adm0_a3:"AUS",geou_dif:0,geounit:"Australia",gu_a3:"AUS",su_dif:0,subunit:"Australia",su_a3:"AUS",brk_diff:0,name:"Australia",name_long:"Australia",brk_a3:"AUS",brk_name:"Australia",brk_group:null,abbrev:"Auz.",postal:"AU",formal_en:"Commonwealth of Australia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Australia",name_alt:null,mapcolor7:1,mapcolor8:2,mapcolor9:2,mapcolor13:7,pop_est:21262641,gdp_md_est:800200,pop_year:-99,lastcensus:2006,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"AU",iso_a3:"AUS",iso_n3:"036",un_a3:"036",wb_a2:"AU",wb_a3:"AUS",woe_id:-99,adm0_a3_is:"AUS",adm0_a3_us:"AUS",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Oceania",region_un:"Oceania",subregion:"Australia and New Zealand",region_wb:"East Asia & Pacific",name_len:9,long_len:9,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"AUT",arcs:[[47,48,49,50,51,52,53]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Austria",sov_a3:"AUT",adm0_dif:0,level:2,type:"Sovereign country",admin:"Austria",adm0_a3:"AUT",geou_dif:0,geounit:"Austria",gu_a3:"AUT",su_dif:0,subunit:"Austria",su_a3:"AUT",brk_diff:0,name:"Austria",name_long:"Austria",brk_a3:"AUT",brk_name:"Austria",brk_group:null,abbrev:"Aust.",postal:"A",formal_en:"Republic of Austria",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Austria",name_alt:null,mapcolor7:3,mapcolor8:1,mapcolor9:3,mapcolor13:4,pop_est:8210281,gdp_md_est:329500,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"AT",iso_a3:"AUT",iso_n3:"040",un_a3:"040",wb_a2:"AT",wb_a3:"AUT",woe_id:-99,adm0_a3_is:"AUT",adm0_a3_us:"AUT",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Western Europe",region_wb:"Europe & Central Asia",name_len:7,long_len:7,abbrev_len:5,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"AZE",arcs:[[[54,-35]],[[55,56,-33,57,58]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Azerbaijan",sov_a3:"AZE",adm0_dif:0,level:2,type:"Sovereign country",admin:"Azerbaijan",adm0_a3:"AZE",geou_dif:0,geounit:"Azerbaijan",gu_a3:"AZE",su_dif:0,subunit:"Azerbaijan",su_a3:"AZE",brk_diff:0,name:"Azerbaijan",name_long:"Azerbaijan",brk_a3:"AZE",brk_name:"Azerbaijan",brk_group:null,abbrev:"Aze.",postal:"AZ",formal_en:"Republic of Azerbaijan",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Azerbaijan",name_alt:null,mapcolor7:1,mapcolor8:6,mapcolor9:5,mapcolor13:8,pop_est:8238672,gdp_md_est:77610,pop_year:-99,lastcensus:2009,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"AZ",iso_a3:"AZE",iso_n3:"031",un_a3:"031",wb_a2:"AZ",wb_a3:"AZE",woe_id:-99,adm0_a3_is:"AZE",adm0_a3_us:"AZE",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Western Asia",region_wb:"Europe & Central Asia",name_len:10,long_len:10,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"BDI",arcs:[[59,60,61]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:6,sovereignt:"Burundi",sov_a3:"BDI",adm0_dif:0,level:2,type:"Sovereign country",admin:"Burundi",adm0_a3:"BDI",geou_dif:0,geounit:"Burundi",gu_a3:"BDI",su_dif:0,subunit:"Burundi",su_a3:"BDI",brk_diff:0,name:"Burundi",name_long:"Burundi",brk_a3:"BDI",brk_name:"Burundi",brk_group:null,abbrev:"Bur.",postal:"BI",formal_en:"Republic of Burundi",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Burundi",name_alt:null,mapcolor7:2,mapcolor8:2,mapcolor9:5,mapcolor13:8,pop_est:8988091,gdp_md_est:3102,pop_year:-99,lastcensus:2008,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"BI",iso_a3:"BDI",iso_n3:"108",un_a3:"108",wb_a2:"BI",wb_a3:"BDI",woe_id:-99,adm0_a3_is:"BDI",adm0_a3_us:"BDI",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Eastern Africa",region_wb:"Sub-Saharan Africa",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"BEL",arcs:[[62,63,64,65,66]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Belgium",sov_a3:"BEL",adm0_dif:0,level:2,type:"Sovereign country",admin:"Belgium",adm0_a3:"BEL",geou_dif:0,geounit:"Belgium",gu_a3:"BEL",su_dif:0,subunit:"Belgium",su_a3:"BEL",brk_diff:0,name:"Belgium",name_long:"Belgium",brk_a3:"BEL",brk_name:"Belgium",brk_group:null,abbrev:"Belg.",postal:"B",formal_en:"Kingdom of Belgium",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Belgium",name_alt:null,mapcolor7:3,mapcolor8:2,mapcolor9:1,mapcolor13:8,pop_est:10414336,gdp_md_est:389300,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"BE",iso_a3:"BEL",iso_n3:"056",un_a3:"056",wb_a2:"BE",wb_a3:"BEL",woe_id:-99,adm0_a3_is:"BEL",adm0_a3_us:"BEL",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Western Europe",region_wb:"Europe & Central Asia",name_len:7,long_len:7,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"BEN",arcs:[[67,68,69,70,71]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Benin",sov_a3:"BEN",adm0_dif:0,level:2,type:"Sovereign country",admin:"Benin",adm0_a3:"BEN",geou_dif:0,geounit:"Benin",gu_a3:"BEN",su_dif:0,subunit:"Benin",su_a3:"BEN",brk_diff:0,name:"Benin",name_long:"Benin",brk_a3:"BEN",brk_name:"Benin",brk_group:null,abbrev:"Benin",postal:"BJ",formal_en:"Republic of Benin",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Benin",name_alt:null,mapcolor7:1,mapcolor8:2,mapcolor9:2,mapcolor13:12,pop_est:8791832,gdp_md_est:12830,pop_year:-99,lastcensus:2002,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"BJ",iso_a3:"BEN",iso_n3:"204",un_a3:"204",wb_a2:"BJ",wb_a3:"BEN",woe_id:-99,adm0_a3_is:"BEN",adm0_a3_us:"BEN",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Western Africa",region_wb:"Sub-Saharan Africa",name_len:5,long_len:5,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"BFA",arcs:[[72,73,74,-70,75,76]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Burkina Faso",sov_a3:"BFA",adm0_dif:0,level:2,type:"Sovereign country",admin:"Burkina Faso",adm0_a3:"BFA",geou_dif:0,geounit:"Burkina Faso",gu_a3:"BFA",su_dif:0,subunit:"Burkina Faso",su_a3:"BFA",brk_diff:0,name:"Burkina Faso",name_long:"Burkina Faso",brk_a3:"BFA",brk_name:"Burkina Faso",brk_group:null,abbrev:"B.F.",postal:"BF",formal_en:"Burkina Faso",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Burkina Faso",name_alt:null,mapcolor7:2,mapcolor8:1,mapcolor9:5,mapcolor13:11,pop_est:15746232,gdp_md_est:17820,pop_year:-99,lastcensus:2006,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"BF",iso_a3:"BFA",iso_n3:"854",un_a3:"854",wb_a2:"BF",wb_a3:"BFA",woe_id:-99,adm0_a3_is:"BFA",adm0_a3_us:"BFA",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Western Africa",region_wb:"Sub-Saharan Africa",name_len:12,long_len:12,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"BGD",arcs:[[77,78,79]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Bangladesh",sov_a3:"BGD",adm0_dif:0,level:2,type:"Sovereign country",admin:"Bangladesh",adm0_a3:"BGD",geou_dif:0,geounit:"Bangladesh",gu_a3:"BGD",su_dif:0,subunit:"Bangladesh",su_a3:"BGD",brk_diff:0,name:"Bangladesh",name_long:"Bangladesh",brk_a3:"BGD",brk_name:"Bangladesh",brk_group:null,abbrev:"Bang.",postal:"BD",formal_en:"People's Republic of Bangladesh",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Bangladesh",name_alt:null,mapcolor7:3,mapcolor8:4,mapcolor9:7,mapcolor13:7,pop_est:156050883,gdp_md_est:224e3,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"BD",iso_a3:"BGD",iso_n3:"050",un_a3:"050",wb_a2:"BD",wb_a3:"BGD",woe_id:-99,adm0_a3_is:"BGD",adm0_a3_us:"BGD",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Southern Asia",region_wb:"South Asia",name_len:10,long_len:10,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"BGR",arcs:[[80,81,82,83,84,85]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Bulgaria",sov_a3:"BGR",adm0_dif:0,level:2,type:"Sovereign country",admin:"Bulgaria",adm0_a3:"BGR",geou_dif:0,geounit:"Bulgaria",gu_a3:"BGR",su_dif:0,subunit:"Bulgaria",su_a3:"BGR",brk_diff:0,name:"Bulgaria",name_long:"Bulgaria",brk_a3:"BGR",brk_name:"Bulgaria",brk_group:null,abbrev:"Bulg.",postal:"BG",formal_en:"Republic of Bulgaria",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Bulgaria",name_alt:null,mapcolor7:4,mapcolor8:5,mapcolor9:1,mapcolor13:8,pop_est:7204687,gdp_md_est:93750,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"BG",iso_a3:"BGR",iso_n3:"100",un_a3:"100",wb_a2:"BG",wb_a3:"BGR",woe_id:-99,adm0_a3_is:"BGR",adm0_a3_us:"BGR",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Eastern Europe",region_wb:"Europe & Central Asia",name_len:8,long_len:8,abbrev_len:5,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"BHS",arcs:[[[86]],[[87]],[[88]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"The Bahamas",sov_a3:"BHS",adm0_dif:0,level:2,type:"Sovereign country",admin:"The Bahamas",adm0_a3:"BHS",geou_dif:0,geounit:"The Bahamas",gu_a3:"BHS",su_dif:0,subunit:"The Bahamas",su_a3:"BHS",brk_diff:0,name:"Bahamas",name_long:"Bahamas",brk_a3:"BHS",brk_name:"Bahamas",brk_group:null,abbrev:"Bhs.",postal:"BS",formal_en:"Commonwealth of the Bahamas",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Bahamas, The",name_alt:null,mapcolor7:1,mapcolor8:1,mapcolor9:2,mapcolor13:5,pop_est:309156,gdp_md_est:9093,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"6. Developing region",income_grp:"2. High income: nonOECD",wikipedia:-99,fips_10:null,iso_a2:"BS",iso_a3:"BHS",iso_n3:"044",un_a3:"044",wb_a2:"BS",wb_a3:"BHS",woe_id:-99,adm0_a3_is:"BHS",adm0_a3_us:"BHS",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"North America",region_un:"Americas",subregion:"Caribbean",region_wb:"Latin America & Caribbean",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"BIH",arcs:[[89,90,91]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Bosnia and Herzegovina",sov_a3:"BIH",adm0_dif:0,level:2,type:"Sovereign country",admin:"Bosnia and Herzegovina",adm0_a3:"BIH",geou_dif:0,geounit:"Bosnia and Herzegovina",gu_a3:"BIH",su_dif:0,subunit:"Bosnia and Herzegovina",su_a3:"BIH",brk_diff:0,name:"Bosnia and Herz.",name_long:"Bosnia and Herzegovina",brk_a3:"BIH",brk_name:"Bosnia and Herz.",brk_group:null,abbrev:"B.H.",postal:"BiH",formal_en:"Bosnia and Herzegovina",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Bosnia and Herzegovina",name_alt:null,mapcolor7:1,mapcolor8:1,mapcolor9:1,mapcolor13:2,pop_est:4613414,gdp_md_est:29700,pop_year:-99,lastcensus:1991,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"BA",iso_a3:"BIH",iso_n3:"070",un_a3:"070",wb_a2:"BA",wb_a3:"BIH",woe_id:-99,adm0_a3_is:"BIH",adm0_a3_us:"BIH",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Southern Europe",region_wb:"Europe & Central Asia",name_len:16,long_len:22,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"BLR",arcs:[[92,93,94,95,96]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Belarus",sov_a3:"BLR",adm0_dif:0,level:2,type:"Sovereign country",admin:"Belarus",adm0_a3:"BLR",geou_dif:0,geounit:"Belarus",gu_a3:"BLR",su_dif:0,subunit:"Belarus",su_a3:"BLR",brk_diff:0,name:"Belarus",name_long:"Belarus",brk_a3:"BLR",brk_name:"Belarus",brk_group:null,abbrev:"Bela.",postal:"BY",formal_en:"Republic of Belarus",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Belarus",name_alt:null,mapcolor7:1,mapcolor8:1,mapcolor9:5,mapcolor13:11,pop_est:9648533,gdp_md_est:114100,pop_year:-99,lastcensus:2009,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"BY",iso_a3:"BLR",iso_n3:"112",un_a3:"112",wb_a2:"BY",wb_a3:"BLR",woe_id:-99,adm0_a3_is:"BLR",adm0_a3_us:"BLR",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Eastern Europe",region_wb:"Europe & Central Asia",name_len:7,long_len:7,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"BLZ",arcs:[[97,98,99]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:6,sovereignt:"Belize",sov_a3:"BLZ",adm0_dif:0,level:2,type:"Sovereign country",admin:"Belize",adm0_a3:"BLZ",geou_dif:0,geounit:"Belize",gu_a3:"BLZ",su_dif:0,subunit:"Belize",su_a3:"BLZ",brk_diff:0,name:"Belize",name_long:"Belize",brk_a3:"BLZ",brk_name:"Belize",brk_group:null,abbrev:"Belize",postal:"BZ",formal_en:"Belize",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Belize",name_alt:null,mapcolor7:1,mapcolor8:4,mapcolor9:5,mapcolor13:7,pop_est:307899,gdp_md_est:2536,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"BZ",iso_a3:"BLZ",iso_n3:"084",un_a3:"084",wb_a2:"BZ",wb_a3:"BLZ",woe_id:-99,adm0_a3_is:"BLZ",adm0_a3_us:"BLZ",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"North America",region_un:"Americas",subregion:"Central America",region_wb:"Latin America & Caribbean",name_len:6,long_len:6,abbrev_len:6,tiny:-99,homepart:1}},{type:"Polygon",id:"BOL",arcs:[[100,101,102,103,-31]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Bolivia",sov_a3:"BOL",adm0_dif:0,level:2,type:"Sovereign country",admin:"Bolivia",adm0_a3:"BOL",geou_dif:0,geounit:"Bolivia",gu_a3:"BOL",su_dif:0,subunit:"Bolivia",su_a3:"BOL",brk_diff:0,name:"Bolivia",name_long:"Bolivia",brk_a3:"BOL",brk_name:"Bolivia",brk_group:null,abbrev:"Bolivia",postal:"BO",formal_en:"Plurinational State of Bolivia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Bolivia",name_alt:null,mapcolor7:1,mapcolor8:5,mapcolor9:2,mapcolor13:3,pop_est:9775246,gdp_md_est:43270,pop_year:-99,lastcensus:2001,gdp_year:-99,economy:"5. Emerging region: G20",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"BO",iso_a3:"BOL",iso_n3:"068",un_a3:"068",wb_a2:"BO",wb_a3:"BOL",woe_id:-99,adm0_a3_is:"BOL",adm0_a3_us:"BOL",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"South America",region_un:"Americas",subregion:"South America",region_wb:"Latin America & Caribbean",name_len:7,long_len:7,abbrev_len:7,tiny:-99,homepart:1}},{type:"Polygon",id:"BRA",arcs:[[-27,104,-103,105,106,107,108,109,110,111,112]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Brazil",sov_a3:"BRA",adm0_dif:0,level:2,type:"Sovereign country",admin:"Brazil",adm0_a3:"BRA",geou_dif:0,geounit:"Brazil",gu_a3:"BRA",su_dif:0,subunit:"Brazil",su_a3:"BRA",brk_diff:0,name:"Brazil",name_long:"Brazil",brk_a3:"BRA",brk_name:"Brazil",brk_group:null,abbrev:"Brazil",postal:"BR",formal_en:"Federative Republic of Brazil",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Brazil",name_alt:null,mapcolor7:5,mapcolor8:6,mapcolor9:5,mapcolor13:7,pop_est:198739269,gdp_md_est:1993e3,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"3. Emerging region: BRIC",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"BR",iso_a3:"BRA",iso_n3:"076",un_a3:"076",wb_a2:"BR",wb_a3:"BRA",woe_id:-99,adm0_a3_is:"BRA",adm0_a3_us:"BRA",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"South America",region_un:"Americas",subregion:"South America",region_wb:"Latin America & Caribbean",name_len:6,long_len:6,abbrev_len:6,tiny:-99,homepart:1}},{type:"Polygon",id:"BRN",arcs:[[113,114]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:6,sovereignt:"Brunei",sov_a3:"BRN",adm0_dif:0,level:2,type:"Sovereign country",admin:"Brunei",adm0_a3:"BRN",geou_dif:0,geounit:"Brunei",gu_a3:"BRN",su_dif:0,subunit:"Brunei",su_a3:"BRN",brk_diff:0,name:"Brunei",name_long:"Brunei Darussalam",brk_a3:"BRN",brk_name:"Brunei",brk_group:null,abbrev:"Brunei",postal:"BN",formal_en:"Negara Brunei Darussalam",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Brunei",name_alt:null,mapcolor7:4,mapcolor8:6,mapcolor9:6,mapcolor13:12,pop_est:388190,gdp_md_est:20250,pop_year:-99,lastcensus:2001,gdp_year:-99,economy:"6. Developing region",income_grp:"2. High income: nonOECD",wikipedia:-99,fips_10:null,iso_a2:"BN",iso_a3:"BRN",iso_n3:"096",un_a3:"096",wb_a2:"BN",wb_a3:"BRN",woe_id:-99,adm0_a3_is:"BRN",adm0_a3_us:"BRN",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"South-Eastern Asia",region_wb:"East Asia & Pacific",name_len:6,long_len:17,abbrev_len:6,tiny:2,homepart:1}},{type:"Polygon",id:"BTN",arcs:[[115,116]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Bhutan",sov_a3:"BTN",adm0_dif:0,level:2,type:"Sovereign country",admin:"Bhutan",adm0_a3:"BTN",geou_dif:0,geounit:"Bhutan",gu_a3:"BTN",su_dif:0,subunit:"Bhutan",su_a3:"BTN",brk_diff:0,name:"Bhutan",name_long:"Bhutan",brk_a3:"BTN",brk_name:"Bhutan",brk_group:null,abbrev:"Bhutan",postal:"BT",formal_en:"Kingdom of Bhutan",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Bhutan",name_alt:null,mapcolor7:5,mapcolor8:6,mapcolor9:1,mapcolor13:8,pop_est:691141,gdp_md_est:3524,pop_year:-99,lastcensus:2005,gdp_year:-99,economy:"7. Least developed region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"BT",iso_a3:"BTN",iso_n3:"064",un_a3:"064",wb_a2:"BT",wb_a3:"BTN",woe_id:-99,adm0_a3_is:"BTN",adm0_a3_us:"BTN",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Southern Asia",region_wb:"South Asia",name_len:6,long_len:6,abbrev_len:6,tiny:-99,homepart:1}},{type:"Polygon",id:"BWA",arcs:[[117,118,119,120]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Botswana",sov_a3:"BWA",adm0_dif:0,level:2,type:"Sovereign country",admin:"Botswana",adm0_a3:"BWA",geou_dif:0,geounit:"Botswana",gu_a3:"BWA",su_dif:0,subunit:"Botswana",su_a3:"BWA",brk_diff:0,name:"Botswana",name_long:"Botswana",brk_a3:"BWA",brk_name:"Botswana",brk_group:null,abbrev:"Bwa.",postal:"BW",formal_en:"Republic of Botswana",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Botswana",name_alt:null,mapcolor7:6,mapcolor8:5,mapcolor9:7,mapcolor13:3,pop_est:1990876,gdp_md_est:27060,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"BW",iso_a3:"BWA",iso_n3:"072",un_a3:"072",wb_a2:"BW",wb_a3:"BWA",woe_id:-99,adm0_a3_is:"BWA",adm0_a3_us:"BWA",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Southern Africa",region_wb:"Sub-Saharan Africa",name_len:8,long_len:8,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"CAF",arcs:[[121,122,123,124,125,126,127]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Central African Republic",sov_a3:"CAF",adm0_dif:0,level:2,type:"Sovereign country",admin:"Central African Republic",adm0_a3:"CAF",geou_dif:0,geounit:"Central African Republic",gu_a3:"CAF",su_dif:0,subunit:"Central African Republic",su_a3:"CAF",brk_diff:0,name:"Central African Rep.",name_long:"Central African Republic",brk_a3:"CAF",brk_name:"Central African Rep.",brk_group:null,abbrev:"C.A.R.",postal:"CF",formal_en:"Central African Republic",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Central African Republic",name_alt:null,mapcolor7:5,mapcolor8:6,mapcolor9:6,mapcolor13:9,pop_est:4511488,gdp_md_est:3198,pop_year:-99,lastcensus:2003,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"CF",iso_a3:"CAF",iso_n3:"140",un_a3:"140",wb_a2:"CF",wb_a3:"CAF",woe_id:-99,adm0_a3_is:"CAF",adm0_a3_us:"CAF",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Middle Africa",region_wb:"Sub-Saharan Africa",name_len:20,long_len:24,abbrev_len:6,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"CAN",arcs:[[[128]],[[129]],[[130]],[[131]],[[132]],[[133]],[[134]],[[135]],[[136]],[[137]],[[138,139,140,141]],[[142]],[[143]],[[144]],[[145]],[[146]],[[147]],[[148]],[[149]],[[150]],[[151]],[[152]],[[153]],[[154]],[[155]],[[156]],[[157]],[[158]],[[159]],[[160]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Canada",sov_a3:"CAN",adm0_dif:0,level:2,type:"Sovereign country",admin:"Canada",adm0_a3:"CAN",geou_dif:0,geounit:"Canada",gu_a3:"CAN",su_dif:0,subunit:"Canada",su_a3:"CAN",brk_diff:0,name:"Canada",name_long:"Canada",brk_a3:"CAN",brk_name:"Canada",brk_group:null,abbrev:"Can.",postal:"CA",formal_en:"Canada",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Canada",name_alt:null,mapcolor7:6,mapcolor8:6,mapcolor9:2,mapcolor13:2,pop_est:33487208,gdp_md_est:13e5,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"1. Developed region: G7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"CA",iso_a3:"CAN",iso_n3:"124",un_a3:"124",wb_a2:"CA",wb_a3:"CAN",woe_id:-99,adm0_a3_is:"CAN",adm0_a3_us:"CAN",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"North America",region_un:"Americas",subregion:"Northern America",region_wb:"North America",name_len:6,long_len:6,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"CHE",arcs:[[-51,161,162,163]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Switzerland",sov_a3:"CHE",adm0_dif:0,level:2,type:"Sovereign country",admin:"Switzerland",adm0_a3:"CHE",geou_dif:0,geounit:"Switzerland",gu_a3:"CHE",su_dif:0,subunit:"Switzerland",su_a3:"CHE",brk_diff:0,name:"Switzerland",name_long:"Switzerland",brk_a3:"CHE",brk_name:"Switzerland",brk_group:null,abbrev:"Switz.",postal:"CH",formal_en:"Swiss Confederation",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Switzerland",name_alt:null,mapcolor7:5,mapcolor8:2,mapcolor9:7,mapcolor13:3,pop_est:7604467,gdp_md_est:316700,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"CH",iso_a3:"CHE",iso_n3:"756",un_a3:"756",wb_a2:"CH",wb_a3:"CHE",woe_id:-99,adm0_a3_is:"CHE",adm0_a3_us:"CHE",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Western Europe",region_wb:"Europe & Central Asia",name_len:11,long_len:11,abbrev_len:6,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"CHL",arcs:[[[-24,164]],[[-30,165,166,-101]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Chile",sov_a3:"CHL",adm0_dif:0,level:2,type:"Sovereign country",admin:"Chile",adm0_a3:"CHL",geou_dif:0,geounit:"Chile",gu_a3:"CHL",su_dif:0,subunit:"Chile",su_a3:"CHL",brk_diff:0,name:"Chile",name_long:"Chile",brk_a3:"CHL",brk_name:"Chile",brk_group:null,abbrev:"Chile",postal:"CL",formal_en:"Republic of Chile",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Chile",name_alt:null,mapcolor7:5,mapcolor8:1,mapcolor9:5,mapcolor13:9,pop_est:16601707,gdp_md_est:244500,pop_year:-99,lastcensus:2002,gdp_year:-99,economy:"5. Emerging region: G20",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"CL",iso_a3:"CHL",iso_n3:"152",un_a3:"152",wb_a2:"CL",wb_a3:"CHL",woe_id:-99,adm0_a3_is:"CHL",adm0_a3_us:"CHL",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"South America",region_un:"Americas",subregion:"South America",region_wb:"Latin America & Caribbean",name_len:5,long_len:5,abbrev_len:5,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"CHN",arcs:[[[167]],[[168,169,170,171,172,173,-117,174,175,176,177,-4,178,179,180,181,182,183]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"China",sov_a3:"CH1",adm0_dif:1,level:2,type:"Country",admin:"China",adm0_a3:"CHN",geou_dif:0,geounit:"China",gu_a3:"CHN",su_dif:0,subunit:"China",su_a3:"CHN",brk_diff:0,name:"China",name_long:"China",brk_a3:"CHN",brk_name:"China",brk_group:null,abbrev:"China",postal:"CN",formal_en:"People's Republic of China",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"China",name_alt:null,mapcolor7:4,mapcolor8:4,mapcolor9:4,mapcolor13:3,pop_est:1338612970,gdp_md_est:7973e3,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"3. Emerging region: BRIC",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"CN",iso_a3:"CHN",iso_n3:"156",un_a3:"156",wb_a2:"CN",wb_a3:"CHN",woe_id:-99,adm0_a3_is:"CHN",adm0_a3_us:"CHN",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Eastern Asia",region_wb:"East Asia & Pacific",name_len:5,long_len:5,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"CIV",arcs:[[184,185,186,187,-73,188]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Ivory Coast",sov_a3:"CIV",adm0_dif:0,level:2,type:"Sovereign country",admin:"Ivory Coast",adm0_a3:"CIV",geou_dif:0,geounit:"Ivory Coast",gu_a3:"CIV",su_dif:0,subunit:"Ivory Coast",su_a3:"CIV",brk_diff:0,name:"Côte d'Ivoire",name_long:"Côte d'Ivoire",brk_a3:"CIV",brk_name:"Côte d'Ivoire",brk_group:null,abbrev:"I.C.",postal:"CI",formal_en:"Republic of Ivory Coast",formal_fr:"Republic of Cote D'Ivoire",note_adm0:null,note_brk:null,name_sort:"Côte d'Ivoire",name_alt:null,mapcolor7:4,mapcolor8:6,mapcolor9:3,mapcolor13:3,pop_est:20617068,gdp_md_est:33850,pop_year:-99,lastcensus:1998,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"CI",iso_a3:"CIV",iso_n3:"384",un_a3:"384",wb_a2:"CI",wb_a3:"CIV",woe_id:-99,adm0_a3_is:"CIV",adm0_a3_us:"CIV",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Western Africa",region_wb:"Sub-Saharan Africa",name_len:13,long_len:13,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"CMR",arcs:[[189,190,191,192,193,194,-128,195]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Cameroon",sov_a3:"CMR",adm0_dif:0,level:2,type:"Sovereign country",admin:"Cameroon",adm0_a3:"CMR",geou_dif:0,geounit:"Cameroon",gu_a3:"CMR",su_dif:0,subunit:"Cameroon",su_a3:"CMR",brk_diff:0,name:"Cameroon",name_long:"Cameroon",brk_a3:"CMR",brk_name:"Cameroon",brk_group:null,abbrev:"Cam.",postal:"CM",formal_en:"Republic of Cameroon",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Cameroon",name_alt:null,mapcolor7:1,mapcolor8:4,mapcolor9:1,mapcolor13:3,pop_est:18879301,gdp_md_est:42750,pop_year:-99,lastcensus:2005,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"CM",iso_a3:"CMR",iso_n3:"120",un_a3:"120",wb_a2:"CM",wb_a3:"CMR",woe_id:-99,adm0_a3_is:"CMR",adm0_a3_us:"CMR",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Middle Africa",region_wb:"Sub-Saharan Africa",name_len:8,long_len:8,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"COD",arcs:[[196,197,-60,198,199,-10,200,-13,201,-126,202]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Democratic Republic of the Congo",sov_a3:"COD",adm0_dif:0,level:2,type:"Sovereign country",admin:"Democratic Republic of the Congo",adm0_a3:"COD",geou_dif:0,geounit:"Democratic Republic of the Congo",gu_a3:"COD",su_dif:0,subunit:"Democratic Republic of the Congo",su_a3:"COD",brk_diff:0,name:"Dem. Rep. Congo",name_long:"Democratic Republic of the Congo",brk_a3:"COD",brk_name:"Democratic Republic of the Congo",brk_group:null,abbrev:"D.R.C.",postal:"DRC",formal_en:"Democratic Republic of the Congo",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Congo, Dem. Rep.",name_alt:null,mapcolor7:4,mapcolor8:4,mapcolor9:4,mapcolor13:7,pop_est:68692542,gdp_md_est:20640,pop_year:-99,lastcensus:1984,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"CD",iso_a3:"COD",iso_n3:"180",un_a3:"180",wb_a2:"ZR",wb_a3:"ZAR",woe_id:-99,adm0_a3_is:"COD",adm0_a3_us:"COD",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Middle Africa",region_wb:"Sub-Saharan Africa",name_len:15,long_len:32,abbrev_len:6,tiny:-99,homepart:1}},{type:"Polygon",id:"COG",arcs:[[-12,203,204,-196,-127,-202]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Republic of Congo",sov_a3:"COG",adm0_dif:0,level:2,type:"Sovereign country",admin:"Republic of Congo",adm0_a3:"COG",geou_dif:0,geounit:"Republic of Congo",gu_a3:"COG",su_dif:0,subunit:"Republic of Congo",su_a3:"COG",brk_diff:0,name:"Congo",name_long:"Republic of Congo",brk_a3:"COG",brk_name:"Republic of Congo",brk_group:null,abbrev:"Rep. Congo",postal:"CG",formal_en:"Republic of Congo",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Congo, Rep.",name_alt:null,mapcolor7:2,mapcolor8:1,mapcolor9:3,mapcolor13:10,pop_est:4012809,gdp_md_est:15350,pop_year:-99,lastcensus:2007,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"CG",iso_a3:"COG",iso_n3:"178",un_a3:"178",wb_a2:"CG",wb_a3:"COG",woe_id:-99,adm0_a3_is:"COG",adm0_a3_us:"COG",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Middle Africa",region_wb:"Sub-Saharan Africa",name_len:5,long_len:17,abbrev_len:10,tiny:-99,homepart:1}},{type:"Polygon",id:"COL",arcs:[[205,206,207,208,209,-107,210]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Colombia",sov_a3:"COL",adm0_dif:0,level:2,type:"Sovereign country",admin:"Colombia",adm0_a3:"COL",geou_dif:0,geounit:"Colombia",gu_a3:"COL",su_dif:0,subunit:"Colombia",su_a3:"COL",brk_diff:0,name:"Colombia",name_long:"Colombia",brk_a3:"COL",brk_name:"Colombia",brk_group:null,abbrev:"Col.",postal:"CO",formal_en:"Republic of Colombia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Colombia",name_alt:null,mapcolor7:2,mapcolor8:1,mapcolor9:3,mapcolor13:1,pop_est:45644023,gdp_md_est:395400,pop_year:-99,lastcensus:2006,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"CO",iso_a3:"COL",iso_n3:"170",un_a3:"170",wb_a2:"CO",wb_a3:"COL",woe_id:-99,adm0_a3_is:"COL",adm0_a3_us:"COL",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"South America",region_un:"Americas",subregion:"South America",region_wb:"Latin America & Caribbean",name_len:8,long_len:8,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"CRI",arcs:[[211,212,213,214]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Costa Rica",sov_a3:"CRI",adm0_dif:0,level:2,type:"Sovereign country",admin:"Costa Rica",adm0_a3:"CRI",geou_dif:0,geounit:"Costa Rica",gu_a3:"CRI",su_dif:0,subunit:"Costa Rica",su_a3:"CRI",brk_diff:0,name:"Costa Rica",name_long:"Costa Rica",brk_a3:"CRI",brk_name:"Costa Rica",brk_group:null,abbrev:"C.R.",postal:"CR",formal_en:"Republic of Costa Rica",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Costa Rica",name_alt:null,mapcolor7:3,mapcolor8:2,mapcolor9:4,mapcolor13:2,pop_est:4253877,gdp_md_est:48320,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"5. Emerging region: G20",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"CR",iso_a3:"CRI",iso_n3:"188",un_a3:"188",wb_a2:"CR",wb_a3:"CRI",woe_id:-99,adm0_a3_is:"CRI",adm0_a3_us:"CRI",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"North America",region_un:"Americas",subregion:"Central America",region_wb:"Latin America & Caribbean",name_len:10,long_len:10,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"CUB",arcs:[[215]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Cuba",sov_a3:"CUB",adm0_dif:0,level:2,type:"Sovereign country",admin:"Cuba",adm0_a3:"CUB",geou_dif:0,geounit:"Cuba",gu_a3:"CUB",su_dif:0,subunit:"Cuba",su_a3:"CUB",brk_diff:0,name:"Cuba",name_long:"Cuba",brk_a3:"CUB",brk_name:"Cuba",brk_group:null,abbrev:"Cuba",postal:"CU",formal_en:"Republic of Cuba",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Cuba",name_alt:null,mapcolor7:3,mapcolor8:5,mapcolor9:3,mapcolor13:4,pop_est:11451652,gdp_md_est:108200,pop_year:-99,lastcensus:2002,gdp_year:-99,economy:"5. Emerging region: G20",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"CU",iso_a3:"CUB",iso_n3:"192",un_a3:"192",wb_a2:"CU",wb_a3:"CUB",woe_id:-99,adm0_a3_is:"CUB",adm0_a3_us:"CUB",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"North America",region_un:"Americas",subregion:"Caribbean",region_wb:"Latin America & Caribbean",name_len:4,long_len:4,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"-99",arcs:[[216,217]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Somaliland",sov_a3:"SOL",adm0_dif:0,level:2,type:"Indeterminate",admin:"Somaliland",adm0_a3:"SOL",geou_dif:0,geounit:"Somaliland",gu_a3:"SOL",su_dif:0,subunit:"Somaliland",su_a3:"SOL",brk_diff:1,name:"Somaliland",name_long:"Somaliland",brk_a3:"B30",brk_name:"Somaliland",brk_group:null,abbrev:"Solnd.",postal:"SL",formal_en:"Republic of Somaliland",formal_fr:null,note_adm0:"Self admin.",note_brk:"Self admin.; Claimed by Somalia",name_sort:"Somaliland",name_alt:null,mapcolor7:3,mapcolor8:6,mapcolor9:5,mapcolor13:2,pop_est:35e5,gdp_md_est:12250,pop_year:-99,lastcensus:-99,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"-99",iso_a3:"-99",iso_n3:"-99",un_a3:"-099",wb_a2:"-99",wb_a3:"-99",woe_id:-99,adm0_a3_is:"SOM",adm0_a3_us:"SOM",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Eastern Africa",region_wb:"Sub-Saharan Africa",name_len:10,long_len:10,abbrev_len:6,tiny:-99,homepart:1}},{type:"Polygon",id:"CYP",arcs:[[218,-218]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Cyprus",sov_a3:"CYP",adm0_dif:0,level:2,type:"Sovereign country",admin:"Cyprus",adm0_a3:"CYP",geou_dif:0,geounit:"Cyprus",gu_a3:"CYP",su_dif:0,subunit:"Cyprus",su_a3:"CYP",brk_diff:0,name:"Cyprus",name_long:"Cyprus",brk_a3:"CYP",brk_name:"Cyprus",brk_group:null,abbrev:"Cyp.",postal:"CY",formal_en:"Republic of Cyprus",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Cyprus",name_alt:null,mapcolor7:1,mapcolor8:2,mapcolor9:3,mapcolor13:7,pop_est:531640,gdp_md_est:22700,pop_year:-99,lastcensus:2001,gdp_year:-99,economy:"6. Developing region",income_grp:"2. High income: nonOECD",wikipedia:-99,fips_10:null,iso_a2:"CY",iso_a3:"CYP",iso_n3:"196",un_a3:"196",wb_a2:"CY",wb_a3:"CYP",woe_id:-99,adm0_a3_is:"CYP",adm0_a3_us:"CYP",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Western Asia",region_wb:"Europe & Central Asia",name_len:6,long_len:6,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"CZE",arcs:[[-53,219,220,221]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Czech Republic",sov_a3:"CZE",adm0_dif:0,level:2,type:"Sovereign country",admin:"Czech Republic",adm0_a3:"CZE",geou_dif:0,geounit:"Czech Republic",gu_a3:"CZE",su_dif:0,subunit:"Czech Republic",su_a3:"CZE",brk_diff:0,name:"Czech Rep.",name_long:"Czech Republic",brk_a3:"CZE",brk_name:"Czech Rep.",brk_group:null,abbrev:"Cz. Rep.",postal:"CZ",formal_en:"Czech Republic",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Czech Republic",name_alt:null,mapcolor7:1,mapcolor8:1,mapcolor9:2,mapcolor13:6,pop_est:10211904,gdp_md_est:265200,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"CZ",iso_a3:"CZE",iso_n3:"203",un_a3:"203",wb_a2:"CZ",wb_a3:"CZE",woe_id:-99,adm0_a3_is:"CZE",adm0_a3_us:"CZE",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Eastern Europe",region_wb:"Europe & Central Asia",name_len:10,long_len:14,abbrev_len:8,tiny:-99,homepart:1}},{type:"Polygon",id:"DEU",arcs:[[222,223,-220,-52,-164,224,225,-64,226,227,228]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Germany",sov_a3:"DEU",adm0_dif:0,level:2,type:"Sovereign country",admin:"Germany",adm0_a3:"DEU",geou_dif:0,geounit:"Germany",gu_a3:"DEU",su_dif:0,subunit:"Germany",su_a3:"DEU",brk_diff:0,name:"Germany",name_long:"Germany",brk_a3:"DEU",brk_name:"Germany",brk_group:null,abbrev:"Ger.",postal:"D",formal_en:"Federal Republic of Germany",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Germany",name_alt:null,mapcolor7:2,mapcolor8:5,mapcolor9:5,mapcolor13:1,pop_est:82329758,gdp_md_est:2918e3,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"1. Developed region: G7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"DE",iso_a3:"DEU",iso_n3:"276",un_a3:"276",wb_a2:"DE",wb_a3:"DEU",woe_id:-99,adm0_a3_is:"DEU",adm0_a3_us:"DEU",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Western Europe",region_wb:"Europe & Central Asia",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"DJI",arcs:[[229,230,231,232]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Djibouti",sov_a3:"DJI",adm0_dif:0,level:2,type:"Sovereign country",admin:"Djibouti",adm0_a3:"DJI",geou_dif:0,geounit:"Djibouti",gu_a3:"DJI",su_dif:0,subunit:"Djibouti",su_a3:"DJI",brk_diff:0,name:"Djibouti",name_long:"Djibouti",brk_a3:"DJI",brk_name:"Djibouti",brk_group:null,abbrev:"Dji.",postal:"DJ",formal_en:"Republic of Djibouti",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Djibouti",name_alt:null,mapcolor7:1,mapcolor8:2,mapcolor9:4,mapcolor13:8,pop_est:516055,gdp_md_est:1885,pop_year:-99,lastcensus:2009,gdp_year:-99,economy:"7. Least developed region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"DJ",iso_a3:"DJI",iso_n3:"262",un_a3:"262",wb_a2:"DJ",wb_a3:"DJI",woe_id:-99,adm0_a3_is:"DJI",adm0_a3_us:"DJI",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Eastern Africa",region_wb:"Middle East & North Africa",name_len:8,long_len:8,abbrev_len:4,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"DNK",arcs:[[[233]],[[-229,234]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Denmark",sov_a3:"DN1",adm0_dif:1,level:2,type:"Country",admin:"Denmark",adm0_a3:"DNK",geou_dif:0,geounit:"Denmark",gu_a3:"DNK",su_dif:0,subunit:"Denmark",su_a3:"DNK",brk_diff:0,name:"Denmark",name_long:"Denmark",brk_a3:"DNK",brk_name:"Denmark",brk_group:null,abbrev:"Den.",postal:"DK",formal_en:"Kingdom of Denmark",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Denmark",name_alt:null,mapcolor7:4,mapcolor8:1,mapcolor9:3,mapcolor13:12,pop_est:5500510,gdp_md_est:203600,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"DK",iso_a3:"DNK",iso_n3:"208",un_a3:"208",wb_a2:"DK",wb_a3:"DNK",woe_id:-99,adm0_a3_is:"DNK",adm0_a3_us:"DNK",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Northern Europe",region_wb:"Europe & Central Asia",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"DOM",arcs:[[235,236]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Dominican Republic",sov_a3:"DOM",adm0_dif:0,level:2,type:"Sovereign country",admin:"Dominican Republic",adm0_a3:"DOM",geou_dif:0,geounit:"Dominican Republic",gu_a3:"DOM",su_dif:0,subunit:"Dominican Republic",su_a3:"DOM",brk_diff:0,name:"Dominican Rep.",name_long:"Dominican Republic",brk_a3:"DOM",brk_name:"Dominican Rep.",brk_group:null,abbrev:"Dom. Rep.",postal:"DO",formal_en:"Dominican Republic",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Dominican Republic",name_alt:null,mapcolor7:5,mapcolor8:2,mapcolor9:5,mapcolor13:7,pop_est:9650054,gdp_md_est:78e3,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"DO",iso_a3:"DOM",iso_n3:"214",un_a3:"214",wb_a2:"DO",wb_a3:"DOM",woe_id:-99,adm0_a3_is:"DOM",adm0_a3_us:"DOM",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"North America",region_un:"Americas",subregion:"Caribbean",region_wb:"Latin America & Caribbean",name_len:14,long_len:18,abbrev_len:9,tiny:-99,homepart:1}},{type:"Polygon",id:"DZA",arcs:[[237,238,239,240,241,242,243,244]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Algeria",sov_a3:"DZA",adm0_dif:0,level:2,type:"Sovereign country",admin:"Algeria",adm0_a3:"DZA",geou_dif:0,geounit:"Algeria",gu_a3:"DZA",su_dif:0,subunit:"Algeria",su_a3:"DZA",brk_diff:0,name:"Algeria",name_long:"Algeria",brk_a3:"DZA",brk_name:"Algeria",brk_group:null,abbrev:"Alg.",postal:"DZ",formal_en:"People's Democratic Republic of Algeria",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Algeria",name_alt:null,mapcolor7:5,mapcolor8:1,mapcolor9:6,mapcolor13:3,pop_est:34178188,gdp_md_est:232900,pop_year:-99,lastcensus:2008,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"DZ",iso_a3:"DZA",iso_n3:"012",un_a3:"012",wb_a2:"DZ",wb_a3:"DZA",woe_id:-99,adm0_a3_is:"DZA",adm0_a3_us:"DZA",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Northern Africa",region_wb:"Middle East & North Africa",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"ECU",arcs:[[245,-206,246]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Ecuador",sov_a3:"ECU",adm0_dif:0,level:2,type:"Sovereign country",admin:"Ecuador",adm0_a3:"ECU",geou_dif:0,geounit:"Ecuador",gu_a3:"ECU",su_dif:0,subunit:"Ecuador",su_a3:"ECU",brk_diff:0,name:"Ecuador",name_long:"Ecuador",brk_a3:"ECU",brk_name:"Ecuador",brk_group:null,abbrev:"Ecu.",postal:"EC",formal_en:"Republic of Ecuador",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Ecuador",name_alt:null,mapcolor7:1,mapcolor8:5,mapcolor9:2,mapcolor13:12,pop_est:14573101,gdp_md_est:107700,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"EC",iso_a3:"ECU",iso_n3:"218",un_a3:"218",wb_a2:"EC",wb_a3:"ECU",woe_id:-99,adm0_a3_is:"ECU",adm0_a3_us:"ECU",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"South America",region_un:"Americas",subregion:"South America",region_wb:"Latin America & Caribbean",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"EGY",arcs:[[247,248,249,250,251]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Egypt",sov_a3:"EGY",adm0_dif:0,level:2,type:"Sovereign country",admin:"Egypt",adm0_a3:"EGY",geou_dif:0,geounit:"Egypt",gu_a3:"EGY",su_dif:0,subunit:"Egypt",su_a3:"EGY",brk_diff:0,name:"Egypt",name_long:"Egypt",brk_a3:"EGY",brk_name:"Egypt",brk_group:null,abbrev:"Egypt",postal:"EG",formal_en:"Arab Republic of Egypt",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Egypt, Arab Rep.",name_alt:null,mapcolor7:4,mapcolor8:6,mapcolor9:7,mapcolor13:2,pop_est:83082869,gdp_md_est:443700,pop_year:-99,lastcensus:2006,gdp_year:-99,economy:"5. Emerging region: G20",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"EG",iso_a3:"EGY",iso_n3:"818",un_a3:"818",wb_a2:"EG",wb_a3:"EGY",woe_id:-99,adm0_a3_is:"EGY",adm0_a3_us:"EGY",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Northern Africa",region_wb:"Middle East & North Africa",name_len:5,long_len:5,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"ERI",arcs:[[252,253,254,-233]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Eritrea",sov_a3:"ERI",adm0_dif:0,level:2,type:"Sovereign country",admin:"Eritrea",adm0_a3:"ERI",geou_dif:0,geounit:"Eritrea",gu_a3:"ERI",su_dif:0,subunit:"Eritrea",su_a3:"ERI",brk_diff:0,name:"Eritrea",name_long:"Eritrea",brk_a3:"ERI",brk_name:"Eritrea",brk_group:null,abbrev:"Erit.",postal:"ER",formal_en:"State of Eritrea",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Eritrea",name_alt:null,mapcolor7:3,mapcolor8:1,mapcolor9:2,mapcolor13:12,pop_est:5647168,gdp_md_est:3945,pop_year:-99,lastcensus:1984,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"ER",iso_a3:"ERI",iso_n3:"232",un_a3:"232",wb_a2:"ER",wb_a3:"ERI",woe_id:-99,adm0_a3_is:"ERI",adm0_a3_us:"ERI",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Eastern Africa",region_wb:"Sub-Saharan Africa",name_len:7,long_len:7,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"ESP",arcs:[[255,256,257,258]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Spain",sov_a3:"ESP",adm0_dif:0,level:2,type:"Sovereign country",admin:"Spain",adm0_a3:"ESP",geou_dif:0,geounit:"Spain",gu_a3:"ESP",su_dif:0,subunit:"Spain",su_a3:"ESP",brk_diff:0,name:"Spain",name_long:"Spain",brk_a3:"ESP",brk_name:"Spain",brk_group:null,abbrev:"Sp.",postal:"E",formal_en:"Kingdom of Spain",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Spain",name_alt:null,mapcolor7:4,mapcolor8:5,mapcolor9:5,mapcolor13:5,pop_est:40525002,gdp_md_est:1403e3,pop_year:-99,lastcensus:2001,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"ES",iso_a3:"ESP",iso_n3:"724",un_a3:"724",wb_a2:"ES",wb_a3:"ESP",woe_id:-99,adm0_a3_is:"ESP",adm0_a3_us:"ESP",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Southern Europe",region_wb:"Europe & Central Asia",name_len:5,long_len:5,abbrev_len:3,tiny:-99,homepart:1}},{type:"Polygon",id:"EST",arcs:[[259,260,261]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:6,sovereignt:"Estonia",sov_a3:"EST",adm0_dif:0,level:2,type:"Sovereign country",admin:"Estonia",adm0_a3:"EST",geou_dif:0,geounit:"Estonia",gu_a3:"EST",su_dif:0,subunit:"Estonia",su_a3:"EST",brk_diff:0,name:"Estonia",name_long:"Estonia",brk_a3:"EST",brk_name:"Estonia",brk_group:null,abbrev:"Est.",postal:"EST",formal_en:"Republic of Estonia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Estonia",name_alt:null,mapcolor7:3,mapcolor8:2,mapcolor9:1,mapcolor13:10,pop_est:1299371,gdp_md_est:27410,pop_year:-99,lastcensus:2e3,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"EE",iso_a3:"EST",iso_n3:"233",un_a3:"233",wb_a2:"EE",wb_a3:"EST",woe_id:-99,adm0_a3_is:"EST",adm0_a3_us:"EST",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Northern Europe",region_wb:"Europe & Central Asia",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"ETH",arcs:[[-232,262,263,264,265,266,267,-253]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Ethiopia",sov_a3:"ETH",adm0_dif:0,level:2,type:"Sovereign country",admin:"Ethiopia",adm0_a3:"ETH",geou_dif:0,geounit:"Ethiopia",gu_a3:"ETH",su_dif:0,subunit:"Ethiopia",su_a3:"ETH",brk_diff:0,name:"Ethiopia",name_long:"Ethiopia",brk_a3:"ETH",brk_name:"Ethiopia",brk_group:null,abbrev:"Eth.",postal:"ET",formal_en:"Federal Democratic Republic of Ethiopia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Ethiopia",name_alt:null,mapcolor7:4,mapcolor8:4,mapcolor9:1,mapcolor13:13,pop_est:85237338,gdp_md_est:68770,pop_year:-99,lastcensus:2007,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"ET",iso_a3:"ETH",iso_n3:"231",un_a3:"231",wb_a2:"ET",wb_a3:"ETH",woe_id:-99,adm0_a3_is:"ETH",adm0_a3_us:"ETH",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Eastern Africa",region_wb:"Sub-Saharan Africa",name_len:8,long_len:8,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"FIN",arcs:[[268,269,270,271]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Finland",sov_a3:"FI1",adm0_dif:1,level:2,type:"Country",admin:"Finland",adm0_a3:"FIN",geou_dif:0,geounit:"Finland",gu_a3:"FIN",su_dif:0,subunit:"Finland",su_a3:"FIN",brk_diff:0,name:"Finland",name_long:"Finland",brk_a3:"FIN",brk_name:"Finland",brk_group:null,abbrev:"Fin.",postal:"FIN",formal_en:"Republic of Finland",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Finland",name_alt:null,mapcolor7:4,mapcolor8:1,mapcolor9:4,mapcolor13:6,pop_est:5250275,gdp_md_est:193500,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"FI",iso_a3:"FIN",iso_n3:"246",un_a3:"246",wb_a2:"FI",wb_a3:"FIN",woe_id:-99,adm0_a3_is:"FIN",adm0_a3_us:"FIN",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Northern Europe",region_wb:"Europe & Central Asia",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"FJI",arcs:[[[272]],[[273]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:6,sovereignt:"Fiji",sov_a3:"FJI",adm0_dif:0,level:2,type:"Sovereign country",admin:"Fiji",adm0_a3:"FJI",geou_dif:0,geounit:"Fiji",gu_a3:"FJI",su_dif:0,subunit:"Fiji",su_a3:"FJI",brk_diff:0,name:"Fiji",name_long:"Fiji",brk_a3:"FJI",brk_name:"Fiji",brk_group:null,abbrev:"Fiji",postal:"FJ",formal_en:"Republic of Fiji",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Fiji",name_alt:null,mapcolor7:5,mapcolor8:1,mapcolor9:2,mapcolor13:2,pop_est:944720,gdp_md_est:3579,pop_year:-99,lastcensus:2007,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"FJ",iso_a3:"FJI",iso_n3:"242",un_a3:"242",wb_a2:"FJ",wb_a3:"FJI",woe_id:-99,adm0_a3_is:"FJI",adm0_a3_us:"FJI",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Oceania",region_un:"Oceania",subregion:"Melanesia",region_wb:"East Asia & Pacific",name_len:4,long_len:4,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"FLK",arcs:[[274]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"United Kingdom",sov_a3:"GB1",adm0_dif:1,level:2,type:"Dependency",admin:"Falkland Islands",adm0_a3:"FLK",geou_dif:0,geounit:"Falkland Islands",gu_a3:"FLK",su_dif:0,subunit:"Falkland Islands",su_a3:"FLK",brk_diff:1,name:"Falkland Is.",name_long:"Falkland Islands",brk_a3:"B12",brk_name:"Falkland Is.",brk_group:null,abbrev:"Flk. Is.",postal:"FK",formal_en:"Falkland Islands",formal_fr:null,note_adm0:"U.K.",note_brk:"Admin. by U.K.; Claimed by Argentina",name_sort:"Falkland Islands",name_alt:"Islas Malvinas",mapcolor7:6,mapcolor8:6,mapcolor9:6,mapcolor13:3,pop_est:3140,gdp_md_est:105.1,pop_year:-99,lastcensus:-99,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"FK",iso_a3:"FLK",iso_n3:"238",un_a3:"238",wb_a2:"-99",wb_a3:"-99",woe_id:-99,adm0_a3_is:"FLK",adm0_a3_us:"FLK",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"South America",region_un:"Americas",subregion:"South America",region_wb:"Latin America & Caribbean",name_len:12,long_len:16,abbrev_len:8,tiny:-99,homepart:-99}},{type:"MultiPolygon",id:"FRA",arcs:[[[275,276,277,278,-111]],[[279]],[[280,-225,-163,281,282,-257,283,-66]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"France",sov_a3:"FR1",adm0_dif:1,level:2,type:"Country",admin:"France",adm0_a3:"FRA",geou_dif:0,geounit:"France",gu_a3:"FRA",su_dif:0,subunit:"France",su_a3:"FRA",brk_diff:0,name:"France",name_long:"France",brk_a3:"FRA",brk_name:"France",brk_group:null,abbrev:"Fr.",postal:"F",formal_en:"French Republic",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"France",name_alt:null,mapcolor7:7,mapcolor8:5,mapcolor9:9,mapcolor13:11,pop_est:64057792,gdp_md_est:2128e3,pop_year:-99,lastcensus:-99,gdp_year:-99,economy:"1. Developed region: G7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"FR",iso_a3:"FRA",iso_n3:"250",un_a3:"250",wb_a2:"FR",wb_a3:"FRA",woe_id:-99,adm0_a3_is:"FRA",adm0_a3_us:"FRA",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Western Europe",region_wb:"Europe & Central Asia",name_len:6,long_len:6,abbrev_len:3,tiny:-99,homepart:1}},{type:"Polygon",id:"GAB",arcs:[[284,285,-190,-205]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Gabon",sov_a3:"GAB",adm0_dif:0,level:2,type:"Sovereign country",admin:"Gabon",adm0_a3:"GAB",geou_dif:0,geounit:"Gabon",gu_a3:"GAB",su_dif:0,subunit:"Gabon",su_a3:"GAB",brk_diff:0,name:"Gabon",name_long:"Gabon",brk_a3:"GAB",brk_name:"Gabon",brk_group:null,abbrev:"Gabon",postal:"GA",formal_en:"Gabonese Republic",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Gabon",name_alt:null,mapcolor7:6,mapcolor8:2,mapcolor9:5,mapcolor13:5,pop_est:1514993,gdp_md_est:21110,pop_year:-99,lastcensus:2003,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"GA",iso_a3:"GAB",iso_n3:"266",un_a3:"266",wb_a2:"GA",wb_a3:"GAB",woe_id:-99,adm0_a3_is:"GAB",adm0_a3_us:"GAB",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Middle Africa",region_wb:"Sub-Saharan Africa",name_len:5,long_len:5,abbrev_len:5,tiny:3,homepart:1}},{type:"MultiPolygon",id:"GBR",arcs:[[[286,287]],[[288]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"United Kingdom",sov_a3:"GB1",adm0_dif:1,level:2,type:"Country",admin:"United Kingdom",adm0_a3:"GBR",geou_dif:0,geounit:"United Kingdom",gu_a3:"GBR",su_dif:0,subunit:"United Kingdom",su_a3:"GBR",brk_diff:0,name:"United Kingdom",name_long:"United Kingdom",brk_a3:"GBR",brk_name:"United Kingdom",brk_group:null,abbrev:"U.K.",postal:"GB",formal_en:"United Kingdom of Great Britain and Northern Ireland",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"United Kingdom",name_alt:null,mapcolor7:6,mapcolor8:6,mapcolor9:6,mapcolor13:3,pop_est:62262e3,gdp_md_est:1977704,pop_year:0,lastcensus:2011,gdp_year:2009,economy:"1. Developed region: G7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"GB",iso_a3:"GBR",iso_n3:"826",un_a3:"826",wb_a2:"GB",wb_a3:"GBR",woe_id:-99,adm0_a3_is:"GBR",adm0_a3_us:"GBR",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Northern Europe",region_wb:"Europe & Central Asia",name_len:14,long_len:14,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"GEO",arcs:[[289,290,-58,-32,291]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Georgia",sov_a3:"GEO",adm0_dif:0,level:2,type:"Sovereign country",admin:"Georgia",adm0_a3:"GEO",geou_dif:0,geounit:"Georgia",gu_a3:"GEO",su_dif:0,subunit:"Georgia",su_a3:"GEO",brk_diff:0,name:"Georgia",name_long:"Georgia",brk_a3:"GEO",brk_name:"Georgia",brk_group:null,abbrev:"Geo.",postal:"GE",formal_en:"Georgia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Georgia",name_alt:null,mapcolor7:5,mapcolor8:1,mapcolor9:3,mapcolor13:2,pop_est:4615807,gdp_md_est:21510,pop_year:-99,lastcensus:2002,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"GE",iso_a3:"GEO",iso_n3:"268",un_a3:"268",wb_a2:"GE",wb_a3:"GEO",woe_id:-99,adm0_a3_is:"GEO",adm0_a3_us:"GEO",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Western Asia",region_wb:"Europe & Central Asia",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"GHA",arcs:[[292,-189,-77,293]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Ghana",sov_a3:"GHA",adm0_dif:0,level:2,type:"Sovereign country",admin:"Ghana",adm0_a3:"GHA",geou_dif:0,geounit:"Ghana",gu_a3:"GHA",su_dif:0,subunit:"Ghana",su_a3:"GHA",brk_diff:0,name:"Ghana",name_long:"Ghana",brk_a3:"GHA",brk_name:"Ghana",brk_group:null,abbrev:"Ghana",postal:"GH",formal_en:"Republic of Ghana",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Ghana",name_alt:null,mapcolor7:5,mapcolor8:3,mapcolor9:1,mapcolor13:4,pop_est:23832495,gdp_md_est:34200,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"GH",iso_a3:"GHA",iso_n3:"288",un_a3:"288",wb_a2:"GH",wb_a3:"GHA",woe_id:-99,adm0_a3_is:"GHA",adm0_a3_us:"GHA",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Western Africa",region_wb:"Sub-Saharan Africa",name_len:5,long_len:5,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"GIN",arcs:[[294,295,296,297,298,299,-187]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Guinea",sov_a3:"GIN",adm0_dif:0,level:2,type:"Sovereign country",admin:"Guinea",adm0_a3:"GIN",geou_dif:0,geounit:"Guinea",gu_a3:"GIN",su_dif:0,subunit:"Guinea",su_a3:"GIN",brk_diff:0,name:"Guinea",name_long:"Guinea",brk_a3:"GIN",brk_name:"Guinea",brk_group:null,abbrev:"Gin.",postal:"GN",formal_en:"Republic of Guinea",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Guinea",name_alt:null,mapcolor7:6,mapcolor8:3,mapcolor9:7,mapcolor13:2,pop_est:10057975,gdp_md_est:10600,pop_year:-99,lastcensus:1996,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"GN",iso_a3:"GIN",iso_n3:"324",un_a3:"324",wb_a2:"GN",wb_a3:"GIN",woe_id:-99,adm0_a3_is:"GIN",adm0_a3_us:"GIN",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Western Africa",region_wb:"Sub-Saharan Africa",name_len:6,long_len:6,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"GMB",arcs:[[300,301]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:6,sovereignt:"Gambia",sov_a3:"GMB",adm0_dif:0,level:2,type:"Sovereign country",admin:"Gambia",adm0_a3:"GMB",geou_dif:0,geounit:"Gambia",gu_a3:"GMB",su_dif:0,subunit:"Gambia",su_a3:"GMB",brk_diff:0,name:"Gambia",name_long:"The Gambia",brk_a3:"GMB",brk_name:"Gambia",brk_group:null,abbrev:"Gambia",postal:"GM",formal_en:"Republic of the Gambia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Gambia, The",name_alt:null,mapcolor7:1,mapcolor8:4,mapcolor9:1,mapcolor13:8,pop_est:1782893,gdp_md_est:2272,pop_year:-99,lastcensus:2003,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"GM",iso_a3:"GMB",iso_n3:"270",un_a3:"270",wb_a2:"GM",wb_a3:"GMB",woe_id:-99,adm0_a3_is:"GMB",adm0_a3_us:"GMB",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Western Africa",region_wb:"Sub-Saharan Africa",name_len:6,long_len:10,abbrev_len:6,tiny:-99,homepart:1}},{type:"Polygon",id:"GNB",arcs:[[302,303,-298]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:6,sovereignt:"Guinea Bissau",sov_a3:"GNB",adm0_dif:0,level:2,type:"Sovereign country",admin:"Guinea Bissau",adm0_a3:"GNB",geou_dif:0,geounit:"Guinea Bissau",gu_a3:"GNB",su_dif:0,subunit:"Guinea Bissau",su_a3:"GNB",brk_diff:0,name:"Guinea-Bissau",name_long:"Guinea-Bissau",brk_a3:"GNB",brk_name:"Guinea-Bissau",brk_group:null,abbrev:"GnB.",postal:"GW",formal_en:"Republic of Guinea-Bissau",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Guinea-Bissau",name_alt:null,mapcolor7:3,mapcolor8:5,mapcolor9:3,mapcolor13:4,pop_est:1533964,gdp_md_est:904.2,pop_year:-99,lastcensus:2009,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"GW",iso_a3:"GNB",iso_n3:"624",un_a3:"624",wb_a2:"GW",wb_a3:"GNB",woe_id:-99,adm0_a3_is:"GNB",adm0_a3_us:"GNB",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Western Africa",region_wb:"Sub-Saharan Africa",name_len:13,long_len:13,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"GNQ",arcs:[[304,-191,-286]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Equatorial Guinea",sov_a3:"GNQ",adm0_dif:0,level:2,type:"Sovereign country",admin:"Equatorial Guinea",adm0_a3:"GNQ",geou_dif:0,geounit:"Equatorial Guinea",gu_a3:"GNQ",su_dif:0,subunit:"Equatorial Guinea",su_a3:"GNQ",brk_diff:0,name:"Eq. Guinea",name_long:"Equatorial Guinea",brk_a3:"GNQ",brk_name:"Eq. Guinea",brk_group:null,abbrev:"Eq. G.",postal:"GQ",formal_en:"Republic of Equatorial Guinea",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Equatorial Guinea",name_alt:null,mapcolor7:4,mapcolor8:1,mapcolor9:4,mapcolor13:8,pop_est:650702,gdp_md_est:14060,pop_year:0,lastcensus:2002,gdp_year:0,economy:"7. Least developed region",income_grp:"2. High income: nonOECD",wikipedia:-99,fips_10:null,iso_a2:"GQ",iso_a3:"GNQ",iso_n3:"226",un_a3:"226",wb_a2:"GQ",wb_a3:"GNQ",woe_id:-99,adm0_a3_is:"GNQ",adm0_a3_us:"GNQ",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Middle Africa",region_wb:"Sub-Saharan Africa",name_len:10,long_len:17,abbrev_len:6,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"GRC",arcs:[[[305]],[[306,-15,307,-84,308]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Greece",sov_a3:"GRC",adm0_dif:0,level:2,type:"Sovereign country",admin:"Greece",adm0_a3:"GRC",geou_dif:0,geounit:"Greece",gu_a3:"GRC",su_dif:0,subunit:"Greece",su_a3:"GRC",brk_diff:0,name:"Greece",name_long:"Greece",brk_a3:"GRC",brk_name:"Greece",brk_group:null,abbrev:"Greece",postal:"GR",formal_en:"Hellenic Republic",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Greece",name_alt:null,mapcolor7:2,mapcolor8:2,mapcolor9:2,mapcolor13:9,pop_est:10737428,gdp_md_est:343e3,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"GR",iso_a3:"GRC",iso_n3:"300",un_a3:"300",wb_a2:"GR",wb_a3:"GRC",woe_id:-99,adm0_a3_is:"GRC",adm0_a3_us:"GRC",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Southern Europe",region_wb:"Europe & Central Asia",name_len:6,long_len:6,abbrev_len:6,tiny:-99,homepart:1}},{type:"Polygon",id:"GRL",arcs:[[309]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Denmark",sov_a3:"DN1",adm0_dif:1,level:2,type:"Country",admin:"Greenland",adm0_a3:"GRL",geou_dif:0,geounit:"Greenland",gu_a3:"GRL",su_dif:0,subunit:"Greenland",su_a3:"GRL",brk_diff:0,name:"Greenland",name_long:"Greenland",brk_a3:"GRL",brk_name:"Greenland",brk_group:null,abbrev:"Grlnd.",postal:"GL",formal_en:"Greenland",formal_fr:null,note_adm0:"Den.",note_brk:null,name_sort:"Greenland",name_alt:null,mapcolor7:4,mapcolor8:1,mapcolor9:3,mapcolor13:12,pop_est:57600,gdp_md_est:1100,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"2. High income: nonOECD",wikipedia:-99,fips_10:null,iso_a2:"GL",iso_a3:"GRL",iso_n3:"304",un_a3:"304",wb_a2:"GL",wb_a3:"GRL",woe_id:-99,adm0_a3_is:"GRL",adm0_a3_us:"GRL",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"North America",region_un:"Americas",subregion:"Northern America",region_wb:"Europe & Central Asia",name_len:9,long_len:9,abbrev_len:6,tiny:-99,homepart:-99}},{type:"Polygon",id:"GTM",arcs:[[310,311,-100,312,313,314]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Guatemala",sov_a3:"GTM",adm0_dif:0,level:2,type:"Sovereign country",admin:"Guatemala",adm0_a3:"GTM",geou_dif:0,geounit:"Guatemala",gu_a3:"GTM",su_dif:0,subunit:"Guatemala",su_a3:"GTM",brk_diff:0,name:"Guatemala",name_long:"Guatemala",brk_a3:"GTM",brk_name:"Guatemala",brk_group:null,abbrev:"Guat.",postal:"GT",formal_en:"Republic of Guatemala",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Guatemala",name_alt:null,mapcolor7:3,mapcolor8:3,mapcolor9:3,mapcolor13:6,pop_est:13276517,gdp_md_est:68580,pop_year:-99,lastcensus:2002,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"GT",iso_a3:"GTM",iso_n3:"320",un_a3:"320",wb_a2:"GT",wb_a3:"GTM",woe_id:-99,adm0_a3_is:"GTM",adm0_a3_us:"GTM",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"North America",region_un:"Americas",subregion:"Central America",region_wb:"Latin America & Caribbean",name_len:9,long_len:9,abbrev_len:5,tiny:4,homepart:1}},{type:"Polygon",id:"GUY",arcs:[[315,316,-109,317]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Guyana",sov_a3:"GUY",adm0_dif:0,level:2,type:"Sovereign country",admin:"Guyana",adm0_a3:"GUY",geou_dif:0,geounit:"Guyana",gu_a3:"GUY",su_dif:0,subunit:"Guyana",su_a3:"GUY",brk_diff:0,name:"Guyana",name_long:"Guyana",brk_a3:"GUY",brk_name:"Guyana",brk_group:null,abbrev:"Guy.",postal:"GY",formal_en:"Co-operative Republic of Guyana",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Guyana",name_alt:null,mapcolor7:3,mapcolor8:1,mapcolor9:4,mapcolor13:8,pop_est:772298,gdp_md_est:2966,pop_year:-99,lastcensus:2002,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"GY",iso_a3:"GUY",iso_n3:"328",un_a3:"328",wb_a2:"GY",wb_a3:"GUY",woe_id:-99,adm0_a3_is:"GUY",adm0_a3_us:"GUY",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"South America",region_un:"Americas",subregion:"South America",region_wb:"Latin America & Caribbean",name_len:6,long_len:6,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"HND",arcs:[[318,319,-314,320,321]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Honduras",sov_a3:"HND",adm0_dif:0,level:2,type:"Sovereign country",admin:"Honduras",adm0_a3:"HND",geou_dif:0,geounit:"Honduras",gu_a3:"HND",su_dif:0,subunit:"Honduras",su_a3:"HND",brk_diff:0,name:"Honduras",name_long:"Honduras",brk_a3:"HND",brk_name:"Honduras",brk_group:null,abbrev:"Hond.",postal:"HN",formal_en:"Republic of Honduras",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Honduras",name_alt:null,mapcolor7:2,mapcolor8:5,mapcolor9:2,mapcolor13:5,pop_est:7792854,gdp_md_est:33720,pop_year:-99,lastcensus:2001,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"HN",iso_a3:"HND",iso_n3:"340",un_a3:"340",wb_a2:"HN",wb_a3:"HND",woe_id:-99,adm0_a3_is:"HND",adm0_a3_us:"HND",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"North America",region_un:"Americas",subregion:"Central America",region_wb:"Latin America & Caribbean",name_len:8,long_len:8,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"HRV",arcs:[[322,-92,323,324,325,326]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:6,sovereignt:"Croatia",sov_a3:"HRV",adm0_dif:0,level:2,type:"Sovereign country",admin:"Croatia",adm0_a3:"HRV",geou_dif:0,geounit:"Croatia",gu_a3:"HRV",su_dif:0,subunit:"Croatia",su_a3:"HRV",brk_diff:0,name:"Croatia",name_long:"Croatia",brk_a3:"HRV",brk_name:"Croatia",brk_group:null,abbrev:"Cro.",postal:"HR",formal_en:"Republic of Croatia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Croatia",name_alt:null,mapcolor7:5,mapcolor8:4,mapcolor9:5,mapcolor13:1,pop_est:4489409,gdp_md_est:82390,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"2. High income: nonOECD",wikipedia:-99,fips_10:null,iso_a2:"HR",iso_a3:"HRV",iso_n3:"191",un_a3:"191",wb_a2:"HR",wb_a3:"HRV",woe_id:-99,adm0_a3_is:"HRV",adm0_a3_us:"HRV",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Southern Europe",region_wb:"Europe & Central Asia",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"HTI",arcs:[[-237,327]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Haiti",sov_a3:"HTI",adm0_dif:0,level:2,type:"Sovereign country",admin:"Haiti",adm0_a3:"HTI",geou_dif:0,geounit:"Haiti",gu_a3:"HTI",su_dif:0,subunit:"Haiti",su_a3:"HTI",brk_diff:0,name:"Haiti",name_long:"Haiti",brk_a3:"HTI",brk_name:"Haiti",brk_group:null,abbrev:"Haiti",postal:"HT",formal_en:"Republic of Haiti",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Haiti",name_alt:null,mapcolor7:2,mapcolor8:1,mapcolor9:7,mapcolor13:2,pop_est:9035536,gdp_md_est:11500,pop_year:-99,lastcensus:2003,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"HT",iso_a3:"HTI",iso_n3:"332",un_a3:"332",wb_a2:"HT",wb_a3:"HTI",woe_id:-99,adm0_a3_is:"HTI",adm0_a3_us:"HTI",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"North America",region_un:"Americas",subregion:"Caribbean",region_wb:"Latin America & Caribbean",name_len:5,long_len:5,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"HUN",arcs:[[-48,328,329,330,331,-327,332]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Hungary",sov_a3:"HUN",adm0_dif:0,level:2,type:"Sovereign country",admin:"Hungary",adm0_a3:"HUN",geou_dif:0,geounit:"Hungary",gu_a3:"HUN",su_dif:0,subunit:"Hungary",su_a3:"HUN",brk_diff:0,name:"Hungary",name_long:"Hungary",brk_a3:"HUN",brk_name:"Hungary",brk_group:null,abbrev:"Hun.",postal:"HU",formal_en:"Republic of Hungary",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Hungary",name_alt:null,mapcolor7:4,mapcolor8:6,mapcolor9:1,mapcolor13:5,pop_est:9905596,gdp_md_est:196600,pop_year:-99,lastcensus:2001,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"HU",iso_a3:"HUN",iso_n3:"348",un_a3:"348",wb_a2:"HU",wb_a3:"HUN",woe_id:-99,adm0_a3_is:"HUN",adm0_a3_us:"HUN",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Eastern Europe",region_wb:"Europe & Central Asia",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"IDN",arcs:[[[333]],[[334,335]],[[336]],[[337]],[[338]],[[339]],[[340]],[[341]],[[342,343]],[[344]],[[345]],[[346,347]],[[348]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Indonesia",sov_a3:"IDN",adm0_dif:0,level:2,type:"Sovereign country",admin:"Indonesia",adm0_a3:"IDN",geou_dif:0,geounit:"Indonesia",gu_a3:"IDN",su_dif:0,subunit:"Indonesia",su_a3:"IDN",brk_diff:0,name:"Indonesia",name_long:"Indonesia",brk_a3:"IDN",brk_name:"Indonesia",brk_group:null,abbrev:"Indo.",postal:"INDO",formal_en:"Republic of Indonesia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Indonesia",name_alt:null,mapcolor7:6,mapcolor8:6,mapcolor9:6,mapcolor13:11,pop_est:240271522,gdp_md_est:914600,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"4. Emerging region: MIKT",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"ID",iso_a3:"IDN",iso_n3:"360",un_a3:"360",wb_a2:"ID",wb_a3:"IDN",woe_id:-99,adm0_a3_is:"IDN",adm0_a3_us:"IDN",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"South-Eastern Asia",region_wb:"East Asia & Pacific",name_len:9,long_len:9,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"IND",arcs:[[-177,349,-175,-116,-174,350,-80,351,352]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"India",sov_a3:"IND",adm0_dif:0,level:2,type:"Sovereign country",admin:"India",adm0_a3:"IND",geou_dif:0,geounit:"India",gu_a3:"IND",su_dif:0,subunit:"India",su_a3:"IND",brk_diff:0,name:"India",name_long:"India",brk_a3:"IND",brk_name:"India",brk_group:null,abbrev:"India",postal:"IND",formal_en:"Republic of India",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"India",name_alt:null,mapcolor7:1,mapcolor8:3,mapcolor9:2,mapcolor13:2,pop_est:1166079220,gdp_md_est:3297e3,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"3. Emerging region: BRIC",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"IN",iso_a3:"IND",iso_n3:"356",un_a3:"356",wb_a2:"IN",wb_a3:"IND",woe_id:-99,adm0_a3_is:"IND",adm0_a3_us:"IND",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Southern Asia",region_wb:"South Asia",name_len:5,long_len:5,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"IRL",arcs:[[353,-287]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Ireland",sov_a3:"IRL",adm0_dif:0,level:2,type:"Sovereign country",admin:"Ireland",adm0_a3:"IRL",geou_dif:0,geounit:"Ireland",gu_a3:"IRL",su_dif:0,subunit:"Ireland",su_a3:"IRL",brk_diff:0,name:"Ireland",name_long:"Ireland",brk_a3:"IRL",brk_name:"Ireland",brk_group:null,abbrev:"Ire.",postal:"IRL",formal_en:"Ireland",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Ireland",name_alt:null,mapcolor7:2,mapcolor8:3,mapcolor9:2,mapcolor13:2,pop_est:4203200,gdp_md_est:188400,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"IE",iso_a3:"IRL",iso_n3:"372",un_a3:"372",wb_a2:"IE",wb_a3:"IRL",woe_id:-99,adm0_a3_is:"IRL",adm0_a3_us:"IRL",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Northern Europe",region_wb:"Europe & Central Asia",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"IRN",arcs:[[354,-6,355,356,357,358,-55,-34,-57,359]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Iran",sov_a3:"IRN",adm0_dif:0,level:2,type:"Sovereign country",admin:"Iran",adm0_a3:"IRN",geou_dif:0,geounit:"Iran",gu_a3:"IRN",su_dif:0,subunit:"Iran",su_a3:"IRN",brk_diff:0,name:"Iran",name_long:"Iran",brk_a3:"IRN",brk_name:"Iran",brk_group:null,abbrev:"Iran",postal:"IRN",formal_en:"Islamic Republic of Iran",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Iran, Islamic Rep.",name_alt:null,mapcolor7:4,mapcolor8:3,mapcolor9:4,mapcolor13:13,pop_est:66429284,gdp_md_est:841700,pop_year:-99,lastcensus:2006,gdp_year:-99,economy:"5. Emerging region: G20",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"IR",iso_a3:"IRN",iso_n3:"364",un_a3:"364",wb_a2:"IR",wb_a3:"IRN",woe_id:-99,adm0_a3_is:"IRN",adm0_a3_us:"IRN",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Southern Asia",region_wb:"Middle East & North Africa",name_len:4,long_len:4,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"IRQ",arcs:[[360,361,362,363,364,365,-358]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Iraq",sov_a3:"IRQ",adm0_dif:0,level:2,type:"Sovereign country",admin:"Iraq",adm0_a3:"IRQ",geou_dif:0,geounit:"Iraq",gu_a3:"IRQ",su_dif:0,subunit:"Iraq",su_a3:"IRQ",brk_diff:0,name:"Iraq",name_long:"Iraq",brk_a3:"IRQ",brk_name:"Iraq",brk_group:null,abbrev:"Iraq",postal:"IRQ",formal_en:"Republic of Iraq",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Iraq",name_alt:null,mapcolor7:1,mapcolor8:4,mapcolor9:3,mapcolor13:1,pop_est:31129225,gdp_md_est:103900,pop_year:-99,lastcensus:1997,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"IQ",iso_a3:"IRQ",iso_n3:"368",un_a3:"368",wb_a2:"IQ",wb_a3:"IRQ",woe_id:-99,adm0_a3_is:"IRQ",adm0_a3_us:"IRQ",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Western Asia",region_wb:"Middle East & North Africa",name_len:4,long_len:4,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"ISL",arcs:[[366]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Iceland",sov_a3:"ISL",adm0_dif:0,level:2,type:"Sovereign country",admin:"Iceland",adm0_a3:"ISL",geou_dif:0,geounit:"Iceland",gu_a3:"ISL",su_dif:0,subunit:"Iceland",su_a3:"ISL",brk_diff:0,name:"Iceland",name_long:"Iceland",brk_a3:"ISL",brk_name:"Iceland",brk_group:null,abbrev:"Iceland",postal:"IS",formal_en:"Republic of Iceland",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Iceland",name_alt:null,mapcolor7:1,mapcolor8:4,mapcolor9:4,mapcolor13:9,pop_est:306694,gdp_md_est:12710,pop_year:-99,lastcensus:-99,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"IS",iso_a3:"ISL",iso_n3:"352",un_a3:"352",wb_a2:"IS",wb_a3:"ISL",woe_id:-99,adm0_a3_is:"ISL",adm0_a3_us:"ISL",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Northern Europe",region_wb:"Europe & Central Asia",name_len:7,long_len:7,abbrev_len:7,tiny:-99,homepart:1}},{type:"Polygon",id:"ISR",arcs:[[367,368,369,-252,370,371,372]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Israel",sov_a3:"ISR",adm0_dif:0,level:2,type:"Sovereign country",admin:"Israel",adm0_a3:"ISR",geou_dif:0,geounit:"Israel",gu_a3:"ISR",su_dif:0,subunit:"Israel",su_a3:"ISR",brk_diff:0,name:"Israel",name_long:"Israel",brk_a3:"ISR",brk_name:"Israel",brk_group:null,abbrev:"Isr.",postal:"IS",formal_en:"State of Israel",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Israel",name_alt:null,mapcolor7:3,mapcolor8:2,mapcolor9:5,mapcolor13:9,pop_est:7233701,gdp_md_est:201400,pop_year:-99,lastcensus:2009,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"IL",iso_a3:"ISR",iso_n3:"376",un_a3:"376",wb_a2:"IL",wb_a3:"ISR",woe_id:-99,adm0_a3_is:"ISR",adm0_a3_us:"ISR",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Western Asia",region_wb:"Middle East & North Africa",name_len:6,long_len:6,abbrev_len:4,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"ITA",arcs:[[[373]],[[374]],[[375,376,-282,-162,-50]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Italy",sov_a3:"ITA",adm0_dif:0,level:2,type:"Sovereign country",admin:"Italy",adm0_a3:"ITA",geou_dif:0,geounit:"Italy",gu_a3:"ITA",su_dif:0,subunit:"Italy",su_a3:"ITA",brk_diff:0,name:"Italy",name_long:"Italy",brk_a3:"ITA",brk_name:"Italy",brk_group:null,abbrev:"Italy",postal:"I",formal_en:"Italian Republic",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Italy",name_alt:null,mapcolor7:6,mapcolor8:7,mapcolor9:8,mapcolor13:7,pop_est:58126212,gdp_md_est:1823e3,pop_year:-99,lastcensus:2012,gdp_year:-99,economy:"1. Developed region: G7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"IT",iso_a3:"ITA",iso_n3:"380",un_a3:"380",wb_a2:"IT",wb_a3:"ITA",woe_id:-99,adm0_a3_is:"ITA",adm0_a3_us:"ITA",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Southern Europe",region_wb:"Europe & Central Asia",name_len:5,long_len:5,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"JAM",arcs:[[377]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Jamaica",sov_a3:"JAM",adm0_dif:0,level:2,type:"Sovereign country",admin:"Jamaica",adm0_a3:"JAM",geou_dif:0,geounit:"Jamaica",gu_a3:"JAM",su_dif:0,subunit:"Jamaica",su_a3:"JAM",brk_diff:0,name:"Jamaica",name_long:"Jamaica",brk_a3:"JAM",brk_name:"Jamaica",brk_group:null,abbrev:"Jam.",postal:"J",formal_en:"Jamaica",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Jamaica",name_alt:null,mapcolor7:1,mapcolor8:2,mapcolor9:4,mapcolor13:10,pop_est:2825928,gdp_md_est:20910,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"JM",iso_a3:"JAM",iso_n3:"388",un_a3:"388",wb_a2:"JM",wb_a3:"JAM",woe_id:-99,adm0_a3_is:"JAM",adm0_a3_us:"JAM",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"North America",region_un:"Americas",subregion:"Caribbean",region_wb:"Latin America & Caribbean",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"JOR",arcs:[[-368,378,-364,379,380,-370,381]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Jordan",sov_a3:"JOR",adm0_dif:0,level:2,type:"Sovereign country",admin:"Jordan",adm0_a3:"JOR",geou_dif:0,geounit:"Jordan",gu_a3:"JOR",su_dif:0,subunit:"Jordan",su_a3:"JOR",brk_diff:0,name:"Jordan",name_long:"Jordan",brk_a3:"JOR",brk_name:"Jordan",brk_group:null,abbrev:"Jord.",postal:"J",formal_en:"Hashemite Kingdom of Jordan",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Jordan",name_alt:null,mapcolor7:5,mapcolor8:3,mapcolor9:4,mapcolor13:4,pop_est:6342948,gdp_md_est:31610,pop_year:-99,lastcensus:2004,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"JO",iso_a3:"JOR",iso_n3:"400",un_a3:"400",wb_a2:"JO",wb_a3:"JOR",woe_id:-99,adm0_a3_is:"JOR",adm0_a3_us:"JOR",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Western Asia",region_wb:"Middle East & North Africa",name_len:6,long_len:6,abbrev_len:5,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"JPN",arcs:[[[382]],[[383]],[[384]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Japan",sov_a3:"JPN",adm0_dif:0,level:2,type:"Sovereign country",admin:"Japan",adm0_a3:"JPN",geou_dif:0,geounit:"Japan",gu_a3:"JPN",su_dif:0,subunit:"Japan",su_a3:"JPN",brk_diff:0,name:"Japan",name_long:"Japan",brk_a3:"JPN",brk_name:"Japan",brk_group:null,abbrev:"Japan",postal:"J",formal_en:"Japan",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Japan",name_alt:null,mapcolor7:5,mapcolor8:3,mapcolor9:5,mapcolor13:4,pop_est:127078679,gdp_md_est:4329e3,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"1. Developed region: G7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"JP",iso_a3:"JPN",iso_n3:"392",un_a3:"392",wb_a2:"JP",wb_a3:"JPN",woe_id:-99,adm0_a3_is:"JPN",adm0_a3_us:"JPN",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Eastern Asia",region_wb:"East Asia & Pacific",name_len:5,long_len:5,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"KAZ",arcs:[[385,386,387,388,-181,389]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Kazakhstan",sov_a3:"KAZ",adm0_dif:0,level:2,type:"Sovereign country",admin:"Kazakhstan",adm0_a3:"KAZ",geou_dif:0,geounit:"Kazakhstan",gu_a3:"KAZ",su_dif:0,subunit:"Kazakhstan",su_a3:"KAZ",brk_diff:0,name:"Kazakhstan",name_long:"Kazakhstan",brk_a3:"KAZ",brk_name:"Kazakhstan",brk_group:null,abbrev:"Kaz.",postal:"KZ",formal_en:"Republic of Kazakhstan",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Kazakhstan",name_alt:null,mapcolor7:6,mapcolor8:1,mapcolor9:6,mapcolor13:1,pop_est:15399437,gdp_md_est:175800,pop_year:-99,lastcensus:2009,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"KZ",iso_a3:"KAZ",iso_n3:"398",un_a3:"398",wb_a2:"KZ",wb_a3:"KAZ",woe_id:-99,adm0_a3_is:"KAZ",adm0_a3_us:"KAZ",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Central Asia",region_wb:"Europe & Central Asia",name_len:10,long_len:10,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"KEN",arcs:[[390,391,392,393,-265,394]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Kenya",sov_a3:"KEN",adm0_dif:0,level:2,type:"Sovereign country",admin:"Kenya",adm0_a3:"KEN",geou_dif:0,geounit:"Kenya",gu_a3:"KEN",su_dif:0,subunit:"Kenya",su_a3:"KEN",brk_diff:0,name:"Kenya",name_long:"Kenya",brk_a3:"KEN",brk_name:"Kenya",brk_group:null,abbrev:"Ken.",postal:"KE",formal_en:"Republic of Kenya",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Kenya",name_alt:null,mapcolor7:5,mapcolor8:2,mapcolor9:7,mapcolor13:3,pop_est:39002772,gdp_md_est:61510,pop_year:-99,lastcensus:2009,gdp_year:-99,economy:"5. Emerging region: G20",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"KE",iso_a3:"KEN",iso_n3:"404",un_a3:"404",wb_a2:"KE",wb_a3:"KEN",woe_id:-99,adm0_a3_is:"KEN",adm0_a3_us:"KEN",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Eastern Africa",region_wb:"Sub-Saharan Africa",name_len:5,long_len:5,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"KGZ",arcs:[[-390,-180,395,396]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Kyrgyzstan",sov_a3:"KGZ",adm0_dif:0,level:2,type:"Sovereign country",admin:"Kyrgyzstan",adm0_a3:"KGZ",geou_dif:0,geounit:"Kyrgyzstan",gu_a3:"KGZ",su_dif:0,subunit:"Kyrgyzstan",su_a3:"KGZ",brk_diff:0,name:"Kyrgyzstan",name_long:"Kyrgyzstan",brk_a3:"KGZ",brk_name:"Kyrgyzstan",brk_group:null,abbrev:"Kgz.",postal:"KG",formal_en:"Kyrgyz Republic",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Kyrgyz Republic",name_alt:null,mapcolor7:5,mapcolor8:7,mapcolor9:7,mapcolor13:6,pop_est:5431747,gdp_md_est:11610,pop_year:-99,lastcensus:2009,gdp_year:-99,economy:"6. Developing region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"KG",iso_a3:"KGZ",iso_n3:"417",un_a3:"417",wb_a2:"KG",wb_a3:"KGZ",woe_id:-99,adm0_a3_is:"KGZ",adm0_a3_us:"KGZ",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Central Asia",region_wb:"Europe & Central Asia",name_len:10,long_len:10,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"KHM",arcs:[[397,398,399,400]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Cambodia",sov_a3:"KHM",adm0_dif:0,level:2,type:"Sovereign country",admin:"Cambodia",adm0_a3:"KHM",geou_dif:0,geounit:"Cambodia",gu_a3:"KHM",su_dif:0,subunit:"Cambodia",su_a3:"KHM",brk_diff:0,name:"Cambodia",name_long:"Cambodia",brk_a3:"KHM",brk_name:"Cambodia",brk_group:null,abbrev:"Camb.",postal:"KH",formal_en:"Kingdom of Cambodia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Cambodia",name_alt:null,mapcolor7:6,mapcolor8:3,mapcolor9:6,mapcolor13:5,pop_est:14494293,gdp_md_est:27940,pop_year:-99,lastcensus:2008,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"KH",iso_a3:"KHM",iso_n3:"116",un_a3:"116",wb_a2:"KH",wb_a3:"KHM",woe_id:-99,adm0_a3_is:"KHM",adm0_a3_us:"KHM",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"South-Eastern Asia",region_wb:"East Asia & Pacific",name_len:8,long_len:8,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"KOR",arcs:[[401,402]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"South Korea",sov_a3:"KOR",adm0_dif:0,level:2,type:"Sovereign country",admin:"South Korea",adm0_a3:"KOR",geou_dif:0,geounit:"South Korea",gu_a3:"KOR",su_dif:0,subunit:"South Korea",su_a3:"KOR",brk_diff:0,name:"Korea",name_long:"Republic of Korea",brk_a3:"KOR",brk_name:"Republic of Korea",brk_group:null,abbrev:"S.K.",postal:"KR",formal_en:"Republic of Korea",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Korea, Rep.",name_alt:null,mapcolor7:4,mapcolor8:1,mapcolor9:1,mapcolor13:5,pop_est:48508972,gdp_md_est:1335e3,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"4. Emerging region: MIKT",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"KR",iso_a3:"KOR",iso_n3:"410",un_a3:"410",wb_a2:"KR",wb_a3:"KOR",woe_id:-99,adm0_a3_is:"KOR",adm0_a3_us:"KOR",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Eastern Asia",region_wb:"East Asia & Pacific",name_len:5,long_len:17,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"-99",arcs:[[-18,403,404,405]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Somaliland",sov_a3:"SOL",adm0_dif:0,level:2,type:"Indeterminate",admin:"Somaliland",adm0_a3:"SOL",geou_dif:0,geounit:"Somaliland",gu_a3:"SOL",su_dif:0,subunit:"Somaliland",su_a3:"SOL",brk_diff:1,name:"Somaliland",name_long:"Somaliland",brk_a3:"B30",brk_name:"Somaliland",brk_group:null,abbrev:"Solnd.",postal:"SL",formal_en:"Republic of Somaliland",formal_fr:null,note_adm0:"Self admin.",note_brk:"Self admin.; Claimed by Somalia",name_sort:"Somaliland",name_alt:null,mapcolor7:3,mapcolor8:6,mapcolor9:5,mapcolor13:2,pop_est:35e5,gdp_md_est:12250,pop_year:-99,lastcensus:-99,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"-99",iso_a3:"-99",iso_n3:"-99",un_a3:"-099",wb_a2:"-99",wb_a3:"-99",woe_id:-99,adm0_a3_is:"SOM",adm0_a3_us:"SOM",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Eastern Africa",region_wb:"Sub-Saharan Africa",name_len:10,long_len:10,abbrev_len:6,tiny:-99,homepart:1}},{type:"Polygon",id:"KWT",arcs:[[406,407,-362]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:6,sovereignt:"Kuwait",sov_a3:"KWT",adm0_dif:0,level:2,type:"Sovereign country",admin:"Kuwait",adm0_a3:"KWT",geou_dif:0,geounit:"Kuwait",gu_a3:"KWT",su_dif:0,subunit:"Kuwait",su_a3:"KWT",brk_diff:0,name:"Kuwait",name_long:"Kuwait",brk_a3:"KWT",brk_name:"Kuwait",brk_group:null,abbrev:"Kwt.",postal:"KW",formal_en:"State of Kuwait",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Kuwait",name_alt:null,mapcolor7:2,mapcolor8:2,mapcolor9:2,mapcolor13:2,pop_est:2691158,gdp_md_est:149100,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"6. Developing region",income_grp:"2. High income: nonOECD",wikipedia:-99,fips_10:null,iso_a2:"KW",iso_a3:"KWT",iso_n3:"414",un_a3:"414",wb_a2:"KW",wb_a3:"KWT",woe_id:-99,adm0_a3_is:"KWT",adm0_a3_us:"KWT",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Western Asia",region_wb:"Middle East & North Africa",name_len:6,long_len:6,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"LAO",arcs:[[408,409,-172,410,-399]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Laos",sov_a3:"LAO",adm0_dif:0,level:2,type:"Sovereign country",admin:"Laos",adm0_a3:"LAO",geou_dif:0,geounit:"Laos",gu_a3:"LAO",su_dif:0,subunit:"Laos",su_a3:"LAO",brk_diff:0,name:"Lao PDR",name_long:"Lao PDR",brk_a3:"LAO",brk_name:"Laos",brk_group:null,abbrev:"Laos",postal:"LA",formal_en:"Lao People's Democratic Republic",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Lao PDR",name_alt:null,mapcolor7:1,mapcolor8:1,mapcolor9:1,mapcolor13:9,pop_est:6834942,gdp_md_est:13980,pop_year:-99,lastcensus:2005,gdp_year:-99,economy:"7. Least developed region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"LA",iso_a3:"LAO",iso_n3:"418",un_a3:"418",wb_a2:"LA",wb_a3:"LAO",woe_id:-99,adm0_a3_is:"LAO",adm0_a3_us:"LAO",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"South-Eastern Asia",region_wb:"East Asia & Pacific",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"LBN",arcs:[[-372,411,412]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Lebanon",sov_a3:"LBN",adm0_dif:0,level:2,type:"Sovereign country",admin:"Lebanon",adm0_a3:"LBN",geou_dif:0,geounit:"Lebanon",gu_a3:"LBN",su_dif:0,subunit:"Lebanon",su_a3:"LBN",brk_diff:0,name:"Lebanon",name_long:"Lebanon",brk_a3:"LBN",brk_name:"Lebanon",brk_group:null,abbrev:"Leb.",postal:"LB",formal_en:"Lebanese Republic",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Lebanon",name_alt:null,mapcolor7:4,mapcolor8:4,mapcolor9:4,mapcolor13:12,pop_est:4017095,gdp_md_est:44060,pop_year:-99,lastcensus:1970,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"LB",iso_a3:"LBN",iso_n3:"422",un_a3:"422",wb_a2:"LB",wb_a3:"LBN",woe_id:-99,adm0_a3_is:"LBN",adm0_a3_us:"LBN",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Western Asia",region_wb:"Middle East & North Africa",name_len:7,long_len:7,abbrev_len:4,tiny:4,homepart:1}},{type:"Polygon",id:"LBR",arcs:[[413,414,-295,-186]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Liberia",sov_a3:"LBR",adm0_dif:0,level:2,type:"Sovereign country",admin:"Liberia",adm0_a3:"LBR",geou_dif:0,geounit:"Liberia",gu_a3:"LBR",su_dif:0,subunit:"Liberia",su_a3:"LBR",brk_diff:0,name:"Liberia",name_long:"Liberia",brk_a3:"LBR",brk_name:"Liberia",brk_group:null,abbrev:"Liberia",postal:"LR",formal_en:"Republic of Liberia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Liberia",name_alt:null,mapcolor7:2,mapcolor8:3,mapcolor9:4,mapcolor13:9,pop_est:3441790,gdp_md_est:1526,pop_year:-99,lastcensus:2008,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"LR",iso_a3:"LBR",iso_n3:"430",un_a3:"430",wb_a2:"LR",wb_a3:"LBR",woe_id:-99,adm0_a3_is:"LBR",adm0_a3_us:"LBR",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Western Africa",region_wb:"Sub-Saharan Africa",name_len:7,long_len:7,abbrev_len:7,tiny:-99,homepart:1}},{type:"Polygon",id:"LBY",arcs:[[415,-245,416,417,-250,418,419]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Libya",sov_a3:"LBY",adm0_dif:0,level:2,type:"Sovereign country",admin:"Libya",adm0_a3:"LBY",geou_dif:0,geounit:"Libya",gu_a3:"LBY",su_dif:0,subunit:"Libya",su_a3:"LBY",brk_diff:0,name:"Libya",name_long:"Libya",brk_a3:"LBY",brk_name:"Libya",brk_group:null,abbrev:"Libya",postal:"LY",formal_en:"Libya",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Libya",name_alt:null,mapcolor7:1,mapcolor8:2,mapcolor9:2,mapcolor13:11,pop_est:6310434,gdp_md_est:88830,pop_year:-99,lastcensus:2006,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"LY",iso_a3:"LBY",iso_n3:"434",un_a3:"434",wb_a2:"LY",wb_a3:"LBY",woe_id:-99,adm0_a3_is:"LBY",adm0_a3_us:"LBY",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Northern Africa",region_wb:"Middle East & North Africa",name_len:5,long_len:5,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"LKA",arcs:[[420]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Sri Lanka",sov_a3:"LKA",adm0_dif:0,level:2,type:"Sovereign country",admin:"Sri Lanka",adm0_a3:"LKA",geou_dif:0,geounit:"Sri Lanka",gu_a3:"LKA",su_dif:0,subunit:"Sri Lanka",su_a3:"LKA",brk_diff:0,name:"Sri Lanka",name_long:"Sri Lanka",brk_a3:"LKA",brk_name:"Sri Lanka",brk_group:null,abbrev:"Sri L.",postal:"LK",formal_en:"Democratic Socialist Republic of Sri Lanka",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Sri Lanka",name_alt:null,mapcolor7:3,mapcolor8:5,mapcolor9:4,mapcolor13:9,pop_est:21324791,gdp_md_est:91870,pop_year:-99,lastcensus:2001,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"LK",iso_a3:"LKA",iso_n3:"144",un_a3:"144",wb_a2:"LK",wb_a3:"LKA",woe_id:-99,adm0_a3_is:"LKA",adm0_a3_us:"LKA",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Southern Asia",region_wb:"South Asia",name_len:9,long_len:9,abbrev_len:6,tiny:-99,homepart:1}},{type:"Polygon",id:"LSO",arcs:[[421]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:6,sovereignt:"Lesotho",sov_a3:"LSO",adm0_dif:0,level:2,type:"Sovereign country",admin:"Lesotho",adm0_a3:"LSO",geou_dif:0,geounit:"Lesotho",gu_a3:"LSO",su_dif:0,subunit:"Lesotho",su_a3:"LSO",brk_diff:0,name:"Lesotho",name_long:"Lesotho",brk_a3:"LSO",brk_name:"Lesotho",brk_group:null,abbrev:"Les.",postal:"LS",formal_en:"Kingdom of Lesotho",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Lesotho",name_alt:null,mapcolor7:1,mapcolor8:5,mapcolor9:2,mapcolor13:8,pop_est:2130819,gdp_md_est:3293,pop_year:-99,lastcensus:2006,gdp_year:-99,economy:"7. Least developed region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"LS",iso_a3:"LSO",iso_n3:"426",un_a3:"426",wb_a2:"LS",wb_a3:"LSO",woe_id:-99,adm0_a3_is:"LSO",adm0_a3_us:"LSO",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Southern Africa",region_wb:"Sub-Saharan Africa",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"LTU",arcs:[[422,423,424,-93,425]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Lithuania",sov_a3:"LTU",adm0_dif:0,level:2,type:"Sovereign country",admin:"Lithuania",adm0_a3:"LTU",geou_dif:0,geounit:"Lithuania",gu_a3:"LTU",su_dif:0,subunit:"Lithuania",su_a3:"LTU",brk_diff:0,name:"Lithuania",name_long:"Lithuania",brk_a3:"LTU",brk_name:"Lithuania",brk_group:null,abbrev:"Lith.",postal:"LT",formal_en:"Republic of Lithuania",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Lithuania",name_alt:null,mapcolor7:6,mapcolor8:3,mapcolor9:3,mapcolor13:9,pop_est:3555179,gdp_md_est:63330,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"LT",iso_a3:"LTU",iso_n3:"440",un_a3:"440",wb_a2:"LT",wb_a3:"LTU",woe_id:-99,adm0_a3_is:"LTU",adm0_a3_us:"LTU",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Northern Europe",region_wb:"Europe & Central Asia",name_len:9,long_len:9,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"LUX",arcs:[[-226,-281,-65]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:6,sovereignt:"Luxembourg",sov_a3:"LUX",adm0_dif:0,level:2,type:"Sovereign country",admin:"Luxembourg",adm0_a3:"LUX",geou_dif:0,geounit:"Luxembourg",gu_a3:"LUX",su_dif:0,subunit:"Luxembourg",su_a3:"LUX",brk_diff:0,name:"Luxembourg",name_long:"Luxembourg",brk_a3:"LUX",brk_name:"Luxembourg",brk_group:null,abbrev:"Lux.",postal:"L",formal_en:"Grand Duchy of Luxembourg",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Luxembourg",name_alt:null,mapcolor7:1,mapcolor8:7,mapcolor9:3,mapcolor13:7,pop_est:491775,gdp_md_est:39370,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"LU",iso_a3:"LUX",iso_n3:"442",un_a3:"442",wb_a2:"LU",wb_a3:"LUX",woe_id:-99,adm0_a3_is:"LUX",adm0_a3_us:"LUX",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Western Europe",region_wb:"Europe & Central Asia",name_len:10,long_len:10,abbrev_len:4,tiny:5,homepart:1}},{type:"Polygon",id:"LVA",arcs:[[426,-262,427,-94,-425]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Latvia",sov_a3:"LVA",adm0_dif:0,level:2,type:"Sovereign country",admin:"Latvia",adm0_a3:"LVA",geou_dif:0,geounit:"Latvia",gu_a3:"LVA",su_dif:0,subunit:"Latvia",su_a3:"LVA",brk_diff:0,name:"Latvia",name_long:"Latvia",brk_a3:"LVA",brk_name:"Latvia",brk_group:null,abbrev:"Lat.",postal:"LV",formal_en:"Republic of Latvia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Latvia",name_alt:null,mapcolor7:4,mapcolor8:7,mapcolor9:6,mapcolor13:13,pop_est:2231503,gdp_md_est:38860,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"LV",iso_a3:"LVA",iso_n3:"428",un_a3:"428",wb_a2:"LV",wb_a3:"LVA",woe_id:-99,adm0_a3_is:"LVA",adm0_a3_us:"LVA",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Northern Europe",region_wb:"Europe & Central Asia",name_len:6,long_len:6,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"MAR",arcs:[[-242,428,429]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Morocco",sov_a3:"MAR",adm0_dif:0,level:2,type:"Sovereign country",admin:"Morocco",adm0_a3:"MAR",geou_dif:0,geounit:"Morocco",gu_a3:"MAR",su_dif:0,subunit:"Morocco",su_a3:"MAR",brk_diff:0,name:"Morocco",name_long:"Morocco",brk_a3:"MAR",brk_name:"Morocco",brk_group:null,abbrev:"Mor.",postal:"MA",formal_en:"Kingdom of Morocco",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Morocco",name_alt:null,mapcolor7:2,mapcolor8:2,mapcolor9:3,mapcolor13:9,pop_est:34859364,gdp_md_est:136600,pop_year:-99,lastcensus:2004,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"MA",iso_a3:"MAR",iso_n3:"504",un_a3:"504",wb_a2:"MA",wb_a3:"MAR",woe_id:-99,adm0_a3_is:"MAR",adm0_a3_us:"MAR",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Northern Africa",region_wb:"Middle East & North Africa",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"MDA",arcs:[[430,431]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:6,sovereignt:"Moldova",sov_a3:"MDA",adm0_dif:0,level:2,type:"Sovereign country",admin:"Moldova",adm0_a3:"MDA",geou_dif:0,geounit:"Moldova",gu_a3:"MDA",su_dif:0,subunit:"Moldova",su_a3:"MDA",brk_diff:0,name:"Moldova",name_long:"Moldova",brk_a3:"MDA",brk_name:"Moldova",brk_group:null,abbrev:"Mda.",postal:"MD",formal_en:"Republic of Moldova",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Moldova",name_alt:null,mapcolor7:3,mapcolor8:5,mapcolor9:4,mapcolor13:12,pop_est:4320748,gdp_md_est:10670,pop_year:-99,lastcensus:2004,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"MD",iso_a3:"MDA",iso_n3:"498",un_a3:"498",wb_a2:"MD",wb_a3:"MDA",woe_id:-99,adm0_a3_is:"MDA",adm0_a3_us:"MDA",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Eastern Europe",region_wb:"Europe & Central Asia",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"MDG",arcs:[[432]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Madagascar",sov_a3:"MDG",adm0_dif:0,level:2,type:"Sovereign country",admin:"Madagascar",adm0_a3:"MDG",geou_dif:0,geounit:"Madagascar",gu_a3:"MDG",su_dif:0,subunit:"Madagascar",su_a3:"MDG",brk_diff:0,name:"Madagascar",name_long:"Madagascar",brk_a3:"MDG",brk_name:"Madagascar",brk_group:null,abbrev:"Mad.",postal:"MG",formal_en:"Republic of Madagascar",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Madagascar",name_alt:null,mapcolor7:6,mapcolor8:5,mapcolor9:2,mapcolor13:3,pop_est:20653556,gdp_md_est:20130,pop_year:-99,lastcensus:1993,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"MG",iso_a3:"MDG",iso_n3:"450",un_a3:"450",wb_a2:"MG",wb_a3:"MDG",woe_id:-99,adm0_a3_is:"MDG",adm0_a3_us:"MDG",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Eastern Africa",region_wb:"Sub-Saharan Africa",name_len:10,long_len:10,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"MEX",arcs:[[433,-98,-312,434,435]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Mexico",sov_a3:"MEX",adm0_dif:0,level:2,type:"Sovereign country",admin:"Mexico",adm0_a3:"MEX",geou_dif:0,geounit:"Mexico",gu_a3:"MEX",su_dif:0,subunit:"Mexico",su_a3:"MEX",brk_diff:0,name:"Mexico",name_long:"Mexico",brk_a3:"MEX",brk_name:"Mexico",brk_group:null,abbrev:"Mex.",postal:"MX",formal_en:"United Mexican States",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Mexico",name_alt:null,mapcolor7:6,mapcolor8:1,mapcolor9:7,mapcolor13:3,pop_est:111211789,gdp_md_est:1563e3,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"4. Emerging region: MIKT",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"MX",iso_a3:"MEX",iso_n3:"484",un_a3:"484",wb_a2:"MX",wb_a3:"MEX",woe_id:-99,adm0_a3_is:"MEX",adm0_a3_us:"MEX",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"North America",region_un:"Americas",subregion:"Central America",region_wb:"Latin America & Caribbean",name_len:6,long_len:6,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"MKD",arcs:[[-406,436,-85,-308,-14]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:6,sovereignt:"Macedonia",sov_a3:"MKD",adm0_dif:0,level:2,type:"Sovereign country",admin:"Macedonia",adm0_a3:"MKD",geou_dif:0,geounit:"Macedonia",gu_a3:"MKD",su_dif:0,subunit:"Macedonia",su_a3:"MKD",brk_diff:0,name:"Macedonia",name_long:"Macedonia",brk_a3:"MKD",brk_name:"Macedonia",brk_group:null,abbrev:"Mkd.",postal:"MK",formal_en:"Former Yugoslav Republic of Macedonia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Macedonia, FYR",name_alt:null,mapcolor7:5,mapcolor8:3,mapcolor9:7,mapcolor13:3,pop_est:2066718,gdp_md_est:18780,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"MK",iso_a3:"MKD",iso_n3:"807",un_a3:"807",wb_a2:"MK",wb_a3:"MKD",woe_id:-99,adm0_a3_is:"MKD",adm0_a3_us:"MKD",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Southern Europe",region_wb:"Europe & Central Asia",name_len:9,long_len:9,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"MLI",arcs:[[437,-239,438,-74,-188,-300,439]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Mali",sov_a3:"MLI",adm0_dif:0,level:2,type:"Sovereign country",admin:"Mali",adm0_a3:"MLI",geou_dif:0,geounit:"Mali",gu_a3:"MLI",su_dif:0,subunit:"Mali",su_a3:"MLI",brk_diff:0,name:"Mali",name_long:"Mali",brk_a3:"MLI",brk_name:"Mali",brk_group:null,abbrev:"Mali",postal:"ML",formal_en:"Republic of Mali",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Mali",name_alt:null,mapcolor7:1,mapcolor8:4,mapcolor9:1,mapcolor13:7,pop_est:12666987,gdp_md_est:14590,pop_year:-99,lastcensus:2009,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"ML",iso_a3:"MLI",iso_n3:"466",un_a3:"466",wb_a2:"ML",wb_a3:"MLI",woe_id:-99,adm0_a3_is:"MLI",adm0_a3_us:"MLI",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Western Africa",region_wb:"Sub-Saharan Africa",name_len:4,long_len:4,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"MMR",arcs:[[440,-78,-351,-173,-410,441]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Myanmar",sov_a3:"MMR",adm0_dif:0,level:2,type:"Sovereign country",admin:"Myanmar",adm0_a3:"MMR",geou_dif:0,geounit:"Myanmar",gu_a3:"MMR",su_dif:0,subunit:"Myanmar",su_a3:"MMR",brk_diff:0,name:"Myanmar",name_long:"Myanmar",brk_a3:"MMR",brk_name:"Myanmar",brk_group:null,abbrev:"Myan.",postal:"MM",formal_en:"Republic of the Union of Myanmar",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Myanmar",name_alt:null,mapcolor7:2,mapcolor8:2,mapcolor9:5,mapcolor13:13,pop_est:48137741,gdp_md_est:55130,pop_year:-99,lastcensus:1983,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"MM",iso_a3:"MMR",iso_n3:"104",un_a3:"104",wb_a2:"MM",wb_a3:"MMR",woe_id:-99,adm0_a3_is:"MMR",adm0_a3_us:"MMR",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"South-Eastern Asia",region_wb:"East Asia & Pacific",name_len:7,long_len:7,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"MNE",arcs:[[442,-324,-91,443,-404,-17]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:6,sovereignt:"Montenegro",sov_a3:"MNE",adm0_dif:0,level:2,type:"Sovereign country",admin:"Montenegro",adm0_a3:"MNE",geou_dif:0,geounit:"Montenegro",gu_a3:"MNE",su_dif:0,subunit:"Montenegro",su_a3:"MNE",brk_diff:0,name:"Montenegro",name_long:"Montenegro",brk_a3:"MNE",brk_name:"Montenegro",brk_group:null,abbrev:"Mont.",postal:"ME",formal_en:"Montenegro",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Montenegro",name_alt:null,mapcolor7:4,mapcolor8:1,mapcolor9:4,mapcolor13:5,pop_est:672180,gdp_md_est:6816,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"ME",iso_a3:"MNE",iso_n3:"499",un_a3:"499",wb_a2:"ME",wb_a3:"MNE",woe_id:-99,adm0_a3_is:"MNE",adm0_a3_us:"MNE",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Southern Europe",region_wb:"Europe & Central Asia",name_len:10,long_len:10,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"MNG",arcs:[[444,-183]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Mongolia",sov_a3:"MNG",adm0_dif:0,level:2,type:"Sovereign country",admin:"Mongolia",adm0_a3:"MNG",geou_dif:0,geounit:"Mongolia",gu_a3:"MNG",su_dif:0,subunit:"Mongolia",su_a3:"MNG",brk_diff:0,name:"Mongolia",name_long:"Mongolia",brk_a3:"MNG",brk_name:"Mongolia",brk_group:null,abbrev:"Mong.",postal:"MN",formal_en:"Mongolia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Mongolia",name_alt:null,mapcolor7:3,mapcolor8:5,mapcolor9:5,mapcolor13:6,pop_est:3041142,gdp_md_est:9476,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"MN",iso_a3:"MNG",iso_n3:"496",un_a3:"496",wb_a2:"MN",wb_a3:"MNG",woe_id:-99,adm0_a3_is:"MNG",adm0_a3_us:"MNG",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Eastern Asia",region_wb:"East Asia & Pacific",name_len:8,long_len:8,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"MOZ",arcs:[[445,446,447,448,449,450,451,452]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Mozambique",sov_a3:"MOZ",adm0_dif:0,level:2,type:"Sovereign country",admin:"Mozambique",adm0_a3:"MOZ",geou_dif:0,geounit:"Mozambique",gu_a3:"MOZ",su_dif:0,subunit:"Mozambique",su_a3:"MOZ",brk_diff:0,name:"Mozambique",name_long:"Mozambique",brk_a3:"MOZ",brk_name:"Mozambique",brk_group:null,abbrev:"Moz.",postal:"MZ",formal_en:"Republic of Mozambique",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Mozambique",name_alt:null,mapcolor7:4,mapcolor8:2,mapcolor9:1,mapcolor13:4,pop_est:21669278,gdp_md_est:18940,pop_year:-99,lastcensus:2007,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"MZ",iso_a3:"MOZ",iso_n3:"508",un_a3:"508",wb_a2:"MZ",wb_a3:"MOZ",woe_id:-99,adm0_a3_is:"MOZ",adm0_a3_us:"MOZ",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Eastern Africa",region_wb:"Sub-Saharan Africa",name_len:10,long_len:10,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"MRT",arcs:[[453,454,455,-240,-438]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Mauritania",sov_a3:"MRT",adm0_dif:0,level:2,type:"Sovereign country",admin:"Mauritania",adm0_a3:"MRT",geou_dif:0,geounit:"Mauritania",gu_a3:"MRT",su_dif:0,subunit:"Mauritania",su_a3:"MRT",brk_diff:0,name:"Mauritania",name_long:"Mauritania",brk_a3:"MRT",brk_name:"Mauritania",brk_group:null,abbrev:"Mrt.",postal:"MR",formal_en:"Islamic Republic of Mauritania",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Mauritania",name_alt:null,mapcolor7:3,mapcolor8:3,mapcolor9:2,mapcolor13:1,pop_est:3129486,gdp_md_est:6308,pop_year:-99,lastcensus:2e3,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"MR",iso_a3:"MRT",iso_n3:"478",un_a3:"478",wb_a2:"MR",wb_a3:"MRT",woe_id:-99,adm0_a3_is:"MRT",adm0_a3_us:"MRT",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Western Africa",region_wb:"Sub-Saharan Africa",name_len:10,long_len:10,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"MWI",arcs:[[-453,456,457]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:6,sovereignt:"Malawi",sov_a3:"MWI",adm0_dif:0,level:2,type:"Sovereign country",admin:"Malawi",adm0_a3:"MWI",geou_dif:0,geounit:"Malawi",gu_a3:"MWI",su_dif:0,subunit:"Malawi",su_a3:"MWI",brk_diff:0,name:"Malawi",name_long:"Malawi",brk_a3:"MWI",brk_name:"Malawi",brk_group:null,abbrev:"Mal.",postal:"MW",formal_en:"Republic of Malawi",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Malawi",name_alt:null,mapcolor7:1,mapcolor8:3,mapcolor9:4,mapcolor13:5,pop_est:14268711,gdp_md_est:11810,pop_year:-99,lastcensus:2008,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"MW",iso_a3:"MWI",iso_n3:"454",un_a3:"454",wb_a2:"MW",wb_a3:"MWI",woe_id:-99,adm0_a3_is:"MWI",adm0_a3_us:"MWI",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Eastern Africa",region_wb:"Sub-Saharan Africa",name_len:6,long_len:6,abbrev_len:4,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"MYS",arcs:[[[458,459]],[[-347,460,-115,461]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Malaysia",sov_a3:"MYS",adm0_dif:0,level:2,type:"Sovereign country",admin:"Malaysia",adm0_a3:"MYS",geou_dif:0,geounit:"Malaysia",gu_a3:"MYS",su_dif:0,subunit:"Malaysia",su_a3:"MYS",brk_diff:0,name:"Malaysia",name_long:"Malaysia",brk_a3:"MYS",brk_name:"Malaysia",brk_group:null,abbrev:"Malay.",postal:"MY",formal_en:"Malaysia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Malaysia",name_alt:null,mapcolor7:2,mapcolor8:4,mapcolor9:3,mapcolor13:6,pop_est:25715819,gdp_md_est:384300,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"MY",iso_a3:"MYS",iso_n3:"458",un_a3:"458",wb_a2:"MY",wb_a3:"MYS",woe_id:-99,adm0_a3_is:"MYS",adm0_a3_us:"MYS",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"South-Eastern Asia",region_wb:"East Asia & Pacific",name_len:8,long_len:8,abbrev_len:6,tiny:-99,homepart:1}},{type:"Polygon",id:"NAM",arcs:[[462,-8,463,-119,464]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Namibia",sov_a3:"NAM",adm0_dif:0,level:2,type:"Sovereign country",admin:"Namibia",adm0_a3:"NAM",geou_dif:0,geounit:"Namibia",gu_a3:"NAM",su_dif:0,subunit:"Namibia",su_a3:"NAM",brk_diff:0,name:"Namibia",name_long:"Namibia",brk_a3:"NAM",brk_name:"Namibia",brk_group:null,abbrev:"Nam.",postal:"NA",formal_en:"Republic of Namibia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Namibia",name_alt:null,mapcolor7:4,mapcolor8:1,mapcolor9:1,mapcolor13:7,pop_est:2108665,gdp_md_est:13250,pop_year:-99,lastcensus:2001,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"NA",iso_a3:"NAM",iso_n3:"516",un_a3:"516",wb_a2:"NA",wb_a3:"NAM",woe_id:-99,adm0_a3_is:"NAM",adm0_a3_us:"NAM",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Southern Africa",region_wb:"Sub-Saharan Africa",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"NCL",arcs:[[465]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"France",sov_a3:"FR1",adm0_dif:1,level:2,type:"Dependency",admin:"New Caledonia",adm0_a3:"NCL",geou_dif:0,geounit:"New Caledonia",gu_a3:"NCL",su_dif:0,subunit:"New Caledonia",su_a3:"NCL",brk_diff:0,name:"New Caledonia",name_long:"New Caledonia",brk_a3:"NCL",brk_name:"New Caledonia",brk_group:null,abbrev:"New C.",postal:"NC",formal_en:"New Caledonia",formal_fr:"Nouvelle-Calédonie",note_adm0:"Fr.",note_brk:null,name_sort:"New Caledonia",name_alt:null,mapcolor7:7,mapcolor8:5,mapcolor9:9,mapcolor13:11,pop_est:227436,gdp_md_est:3158,pop_year:-99,lastcensus:2009,gdp_year:-99,economy:"6. Developing region",income_grp:"2. High income: nonOECD",wikipedia:-99,fips_10:null,iso_a2:"NC",iso_a3:"NCL",iso_n3:"540",un_a3:"540",wb_a2:"NC",wb_a3:"NCL",woe_id:-99,adm0_a3_is:"NCL",adm0_a3_us:"NCL",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Oceania",region_un:"Oceania",subregion:"Melanesia",region_wb:"East Asia & Pacific",name_len:13,long_len:13,abbrev_len:6,tiny:-99,homepart:-99}},{type:"Polygon",id:"NER",arcs:[[-75,-439,-238,-416,466,-194,467,-71]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Niger",sov_a3:"NER",adm0_dif:0,level:2,type:"Sovereign country",admin:"Niger",adm0_a3:"NER",geou_dif:0,geounit:"Niger",gu_a3:"NER",su_dif:0,subunit:"Niger",su_a3:"NER",brk_diff:0,name:"Niger",name_long:"Niger",brk_a3:"NER",brk_name:"Niger",brk_group:null,abbrev:"Niger",postal:"NE",formal_en:"Republic of Niger",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Niger",name_alt:null,mapcolor7:4,mapcolor8:5,mapcolor9:3,mapcolor13:13,pop_est:15306252,gdp_md_est:10040,pop_year:-99,lastcensus:2001,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"NE",iso_a3:"NER",iso_n3:"562",un_a3:"562",wb_a2:"NE",wb_a3:"NER",woe_id:-99,adm0_a3_is:"NER",adm0_a3_us:"NER",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Western Africa",region_wb:"Sub-Saharan Africa",name_len:5,long_len:5,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"NGA",arcs:[[468,-72,-468,-193]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Nigeria",sov_a3:"NGA",adm0_dif:0,level:2,type:"Sovereign country",admin:"Nigeria",adm0_a3:"NGA",geou_dif:0,geounit:"Nigeria",gu_a3:"NGA",su_dif:0,subunit:"Nigeria",su_a3:"NGA",brk_diff:0,name:"Nigeria",name_long:"Nigeria",brk_a3:"NGA",brk_name:"Nigeria",brk_group:null,abbrev:"Nigeria",postal:"NG",formal_en:"Federal Republic of Nigeria",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Nigeria",name_alt:null,mapcolor7:3,mapcolor8:2,mapcolor9:5,mapcolor13:2,pop_est:149229090,gdp_md_est:335400,pop_year:-99,lastcensus:2006,gdp_year:-99,economy:"5. Emerging region: G20",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"NG",iso_a3:"NGA",iso_n3:"566",un_a3:"566",wb_a2:"NG",wb_a3:"NGA",woe_id:-99,adm0_a3_is:"NGA",adm0_a3_us:"NGA",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Western Africa",region_wb:"Sub-Saharan Africa",name_len:7,long_len:7,abbrev_len:7,tiny:-99,homepart:1}},{type:"Polygon",id:"NIC",arcs:[[469,-322,470,-213]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Nicaragua",sov_a3:"NIC",adm0_dif:0,level:2,type:"Sovereign country",admin:"Nicaragua",adm0_a3:"NIC",geou_dif:0,geounit:"Nicaragua",gu_a3:"NIC",su_dif:0,subunit:"Nicaragua",su_a3:"NIC",brk_diff:0,name:"Nicaragua",name_long:"Nicaragua",brk_a3:"NIC",brk_name:"Nicaragua",brk_group:null,abbrev:"Nic.",postal:"NI",formal_en:"Republic of Nicaragua",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Nicaragua",name_alt:null,mapcolor7:1,mapcolor8:4,mapcolor9:1,mapcolor13:9,pop_est:5891199,gdp_md_est:16790,pop_year:-99,lastcensus:2005,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"NI",iso_a3:"NIC",iso_n3:"558",un_a3:"558",wb_a2:"NI",wb_a3:"NIC",woe_id:-99,adm0_a3_is:"NIC",adm0_a3_us:"NIC",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"North America",region_un:"Americas",subregion:"Central America",region_wb:"Latin America & Caribbean",name_len:9,long_len:9,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"NLD",arcs:[[-227,-63,471]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Netherlands",sov_a3:"NL1",adm0_dif:1,level:2,type:"Country",admin:"Netherlands",adm0_a3:"NLD",geou_dif:0,geounit:"Netherlands",gu_a3:"NLD",su_dif:0,subunit:"Netherlands",su_a3:"NLD",brk_diff:0,name:"Netherlands",name_long:"Netherlands",brk_a3:"NLD",brk_name:"Netherlands",brk_group:null,abbrev:"Neth.",postal:"NL",formal_en:"Kingdom of the Netherlands",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Netherlands",name_alt:null,mapcolor7:4,mapcolor8:2,mapcolor9:2,mapcolor13:9,pop_est:16715999,gdp_md_est:672e3,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"NL",iso_a3:"NLD",iso_n3:"528",un_a3:"528",wb_a2:"NL",wb_a3:"NLD",woe_id:-99,adm0_a3_is:"NLD",adm0_a3_us:"NLD",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Western Europe",region_wb:"Europe & Central Asia",name_len:11,long_len:11,abbrev_len:5,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"NOR",arcs:[[[472,-272,473,474]],[[475]],[[476]],[[477]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Norway",sov_a3:"NOR",adm0_dif:0,level:2,type:"Sovereign country",admin:"Norway",adm0_a3:"NOR",geou_dif:0,geounit:"Norway",gu_a3:"NOR",su_dif:0,subunit:"Norway",su_a3:"NOR",brk_diff:0,name:"Norway",name_long:"Norway",brk_a3:"NOR",brk_name:"Norway",brk_group:null,abbrev:"Nor.",postal:"N",formal_en:"Kingdom of Norway",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Norway",name_alt:null,mapcolor7:5,mapcolor8:3,mapcolor9:8,mapcolor13:12,pop_est:4676305,gdp_md_est:276400,pop_year:-99,lastcensus:2001,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"NO",iso_a3:"NOR",iso_n3:"578",un_a3:"578",wb_a2:"NO",wb_a3:"NOR",woe_id:-99,adm0_a3_is:"NOR",adm0_a3_us:"NOR",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Northern Europe",region_wb:"Europe & Central Asia",name_len:6,long_len:6,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"NPL",arcs:[[-350,-176]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Nepal",sov_a3:"NPL",adm0_dif:0,level:2,type:"Sovereign country",admin:"Nepal",adm0_a3:"NPL",geou_dif:0,geounit:"Nepal",gu_a3:"NPL",su_dif:0,subunit:"Nepal",su_a3:"NPL",brk_diff:0,name:"Nepal",name_long:"Nepal",brk_a3:"NPL",brk_name:"Nepal",brk_group:null,abbrev:"Nepal",postal:"NP",formal_en:"Nepal",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Nepal",name_alt:null,mapcolor7:2,mapcolor8:2,mapcolor9:3,mapcolor13:12,pop_est:28563377,gdp_md_est:31080,pop_year:-99,lastcensus:2001,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"NP",iso_a3:"NPL",iso_n3:"524",un_a3:"524",wb_a2:"NP",wb_a3:"NPL",woe_id:-99,adm0_a3_is:"NPL",adm0_a3_us:"NPL",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Southern Asia",region_wb:"South Asia",name_len:5,long_len:5,abbrev_len:5,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"NZL",arcs:[[[478]],[[479]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"New Zealand",sov_a3:"NZ1",adm0_dif:1,level:2,type:"Country",admin:"New Zealand",adm0_a3:"NZL",geou_dif:0,geounit:"New Zealand",gu_a3:"NZL",su_dif:0,subunit:"New Zealand",su_a3:"NZL",brk_diff:0,name:"New Zealand",name_long:"New Zealand",brk_a3:"NZL",brk_name:"New Zealand",brk_group:null,abbrev:"N.Z.",postal:"NZ",formal_en:"New Zealand",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"New Zealand",name_alt:null,mapcolor7:3,mapcolor8:3,mapcolor9:4,mapcolor13:4,pop_est:4213418,gdp_md_est:116700,pop_year:-99,lastcensus:2006,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"NZ",iso_a3:"NZL",iso_n3:"554",un_a3:"554",wb_a2:"NZ",wb_a3:"NZL",woe_id:-99,adm0_a3_is:"NZL",adm0_a3_us:"NZL",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Oceania",region_un:"Oceania",subregion:"Australia and New Zealand",region_wb:"East Asia & Pacific",name_len:11,long_len:11,abbrev_len:4,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"OMN",arcs:[[[480,481,-22,482]],[[-20,483]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Oman",sov_a3:"OMN",adm0_dif:0,level:2,type:"Sovereign country",admin:"Oman",adm0_a3:"OMN",geou_dif:0,geounit:"Oman",gu_a3:"OMN",su_dif:0,subunit:"Oman",su_a3:"OMN",brk_diff:0,name:"Oman",name_long:"Oman",brk_a3:"OMN",brk_name:"Oman",brk_group:null,abbrev:"Oman",postal:"OM",formal_en:"Sultanate of Oman",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Oman",name_alt:null,mapcolor7:1,mapcolor8:4,mapcolor9:1,mapcolor13:6,pop_est:3418085,gdp_md_est:66980,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"6. Developing region",income_grp:"2. High income: nonOECD",wikipedia:-99,fips_10:null,iso_a2:"OM",iso_a3:"OMN",iso_n3:"512",un_a3:"512",wb_a2:"OM",wb_a3:"OMN",woe_id:-99,adm0_a3_is:"OMN",adm0_a3_us:"OMN",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Western Asia",region_wb:"Middle East & North Africa",name_len:4,long_len:4,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"PAK",arcs:[[-178,-353,484,-356,-5]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Pakistan",sov_a3:"PAK",adm0_dif:0,level:2,type:"Sovereign country",admin:"Pakistan",adm0_a3:"PAK",geou_dif:0,geounit:"Pakistan",gu_a3:"PAK",su_dif:0,subunit:"Pakistan",su_a3:"PAK",brk_diff:0,name:"Pakistan",name_long:"Pakistan",brk_a3:"PAK",brk_name:"Pakistan",brk_group:null,abbrev:"Pak.",postal:"PK",formal_en:"Islamic Republic of Pakistan",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Pakistan",name_alt:null,mapcolor7:2,mapcolor8:2,mapcolor9:3,mapcolor13:11,pop_est:176242949,gdp_md_est:427300,pop_year:-99,lastcensus:1998,gdp_year:-99,economy:"5. Emerging region: G20",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"PK",iso_a3:"PAK",iso_n3:"586",un_a3:"586",wb_a2:"PK",wb_a3:"PAK",woe_id:-99,adm0_a3_is:"PAK",adm0_a3_us:"PAK",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Southern Asia",region_wb:"South Asia",name_len:8,long_len:8,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"PAN",arcs:[[485,-215,486,-208]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Panama",sov_a3:"PAN",adm0_dif:0,level:2,type:"Sovereign country",admin:"Panama",adm0_a3:"PAN",geou_dif:0,geounit:"Panama",gu_a3:"PAN",su_dif:0,subunit:"Panama",su_a3:"PAN",brk_diff:0,name:"Panama",name_long:"Panama",brk_a3:"PAN",brk_name:"Panama",brk_group:null,abbrev:"Pan.",postal:"PA",formal_en:"Republic of Panama",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Panama",name_alt:null,mapcolor7:4,mapcolor8:4,mapcolor9:6,mapcolor13:3,pop_est:3360474,gdp_md_est:38830,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"PA",iso_a3:"PAN",iso_n3:"591",un_a3:"591",wb_a2:"PA",wb_a3:"PAN",woe_id:-99,adm0_a3_is:"PAN",adm0_a3_us:"PAN",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"North America",region_un:"Americas",subregion:"Central America",region_wb:"Latin America & Caribbean",name_len:6,long_len:6,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"PER",arcs:[[-167,487,-247,-211,-106,-102]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Peru",sov_a3:"PER",adm0_dif:0,level:2,type:"Sovereign country",admin:"Peru",adm0_a3:"PER",geou_dif:0,geounit:"Peru",gu_a3:"PER",su_dif:0,subunit:"Peru",su_a3:"PER",brk_diff:0,name:"Peru",name_long:"Peru",brk_a3:"PER",brk_name:"Peru",brk_group:null,abbrev:"Peru",postal:"PE",formal_en:"Republic of Peru",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Peru",name_alt:null,mapcolor7:4,mapcolor8:4,mapcolor9:4,mapcolor13:11,pop_est:29546963,gdp_md_est:247300,pop_year:-99,lastcensus:2007,gdp_year:-99,economy:"5. Emerging region: G20",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"PE",iso_a3:"PER",iso_n3:"604",un_a3:"604",wb_a2:"PE",wb_a3:"PER",woe_id:-99,adm0_a3_is:"PER",adm0_a3_us:"PER",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"South America",region_un:"Americas",subregion:"South America",region_wb:"Latin America & Caribbean",name_len:4,long_len:4,abbrev_len:4,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"PHL",arcs:[[[488]],[[489]],[[490]],[[491]],[[492]],[[493]],[[494]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Philippines",sov_a3:"PHL",adm0_dif:0,level:2,type:"Sovereign country",admin:"Philippines",adm0_a3:"PHL",geou_dif:0,geounit:"Philippines",gu_a3:"PHL",su_dif:0,subunit:"Philippines",su_a3:"PHL",brk_diff:0,name:"Philippines",name_long:"Philippines",brk_a3:"PHL",brk_name:"Philippines",brk_group:null,abbrev:"Phil.",postal:"PH",formal_en:"Republic of the Philippines",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Philippines",name_alt:null,mapcolor7:3,mapcolor8:2,mapcolor9:2,mapcolor13:8,pop_est:97976603,gdp_md_est:317500,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"5. Emerging region: G20",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"PH",iso_a3:"PHL",iso_n3:"608",un_a3:"608",wb_a2:"PH",wb_a3:"PHL",woe_id:-99,adm0_a3_is:"PHL",adm0_a3_us:"PHL",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"South-Eastern Asia",region_wb:"East Asia & Pacific",name_len:11,long_len:11,abbrev_len:5,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"PNG",arcs:[[[495]],[[496]],[[-343,497]],[[498]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Papua New Guinea",sov_a3:"PNG",adm0_dif:0,level:2,type:"Sovereign country",admin:"Papua New Guinea",adm0_a3:"PNG",geou_dif:0,geounit:"Papua New Guinea",gu_a3:"PNG",su_dif:1,subunit:"Papua New Guinea",su_a3:"PN1",brk_diff:0,name:"Papua New Guinea",name_long:"Papua New Guinea",brk_a3:"PN1",brk_name:"Papua New Guinea",brk_group:null,abbrev:"P.N.G.",postal:"PG",formal_en:"Independent State of Papua New Guinea",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Papua New Guinea",name_alt:null,mapcolor7:4,mapcolor8:2,mapcolor9:3,mapcolor13:1,pop_est:6057263,gdp_md_est:13210,pop_year:-99,lastcensus:2e3,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"PG",iso_a3:"PNG",iso_n3:"598",un_a3:"598",wb_a2:"PG",wb_a3:"PNG",woe_id:-99,adm0_a3_is:"PNG",adm0_a3_us:"PNG",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Oceania",region_un:"Oceania",subregion:"Melanesia",region_wb:"East Asia & Pacific",name_len:16,long_len:16,abbrev_len:6,tiny:-99,homepart:1}},{type:"Polygon",id:"POL",arcs:[[-224,499,500,-426,-97,501,502,-221]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Poland",sov_a3:"POL",adm0_dif:0,level:2,type:"Sovereign country",admin:"Poland",adm0_a3:"POL",geou_dif:0,geounit:"Poland",gu_a3:"POL",su_dif:0,subunit:"Poland",su_a3:"POL",brk_diff:0,name:"Poland",name_long:"Poland",brk_a3:"POL",brk_name:"Poland",brk_group:null,abbrev:"Pol.",postal:"PL",formal_en:"Republic of Poland",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Poland",name_alt:null,mapcolor7:3,mapcolor8:7,mapcolor9:1,mapcolor13:2,pop_est:38482919,gdp_md_est:667900,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"PL",iso_a3:"POL",iso_n3:"616",un_a3:"616",wb_a2:"PL",wb_a3:"POL",woe_id:-99,adm0_a3_is:"POL",adm0_a3_us:"POL",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Eastern Europe",region_wb:"Europe & Central Asia",name_len:6,long_len:6,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"PRI",arcs:[[503]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"United States of America",sov_a3:"US1",adm0_dif:1,level:2,type:"Dependency",admin:"Puerto Rico",adm0_a3:"PRI",geou_dif:0,geounit:"Puerto Rico",gu_a3:"PRI",su_dif:0,subunit:"Puerto Rico",su_a3:"PRI",brk_diff:0,name:"Puerto Rico",name_long:"Puerto Rico",brk_a3:"PRI",brk_name:"Puerto Rico",brk_group:null,abbrev:"P.R.",postal:"PR",formal_en:"Commonwealth of Puerto Rico",formal_fr:null,note_adm0:"Commonwealth of U.S.A.",note_brk:null,name_sort:"Puerto Rico",name_alt:null,mapcolor7:4,mapcolor8:5,mapcolor9:1,mapcolor13:1,pop_est:3971020,gdp_md_est:70230,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"6. Developing region",income_grp:"2. High income: nonOECD",wikipedia:-99,fips_10:null,iso_a2:"PR",iso_a3:"PRI",iso_n3:"630",un_a3:"630",wb_a2:"PR",wb_a3:"PRI",woe_id:-99,adm0_a3_is:"PRI",adm0_a3_us:"PRI",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"North America",region_un:"Americas",subregion:"Caribbean",region_wb:"Latin America & Caribbean",name_len:11,long_len:11,abbrev_len:4,tiny:-99,homepart:-99}},{type:"Polygon",id:"PRK",arcs:[[504,505,-403,506,-169]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"North Korea",sov_a3:"PRK",adm0_dif:0,level:2,type:"Sovereign country",admin:"North Korea",adm0_a3:"PRK",geou_dif:0,geounit:"North Korea",gu_a3:"PRK",su_dif:0,subunit:"North Korea",su_a3:"PRK",brk_diff:0,name:"Dem. Rep. Korea",name_long:"Dem. Rep. Korea",brk_a3:"PRK",brk_name:"Dem. Rep. Korea",brk_group:null,abbrev:"N.K.",postal:"KP",formal_en:"Democratic People's Republic of Korea",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Korea, Dem. Rep.",name_alt:null,mapcolor7:3,mapcolor8:5,mapcolor9:3,mapcolor13:9,pop_est:22665345,gdp_md_est:4e4,pop_year:-99,lastcensus:2009,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"KP",iso_a3:"PRK",iso_n3:"408",un_a3:"408",wb_a2:"KP",wb_a3:"PRK",woe_id:-99,adm0_a3_is:"PRK",adm0_a3_us:"PRK",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Eastern Asia",region_wb:"East Asia & Pacific",name_len:15,long_len:15,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"PRT",arcs:[[-259,507]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Portugal",sov_a3:"PRT",adm0_dif:0,level:2,type:"Sovereign country",admin:"Portugal",adm0_a3:"PRT",geou_dif:0,geounit:"Portugal",gu_a3:"PRT",su_dif:1,subunit:"Portugal",su_a3:"PR1",brk_diff:0,name:"Portugal",name_long:"Portugal",brk_a3:"PR1",brk_name:"Portugal",brk_group:null,abbrev:"Port.",postal:"P",formal_en:"Portuguese Republic",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Portugal",name_alt:null,mapcolor7:1,mapcolor8:7,mapcolor9:1,mapcolor13:4,pop_est:10707924,gdp_md_est:208627,pop_year:-99,lastcensus:2011,gdp_year:0,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"PT",iso_a3:"PRT",iso_n3:"620",un_a3:"620",wb_a2:"PT",wb_a3:"PRT",woe_id:-99,adm0_a3_is:"PRT",adm0_a3_us:"PRT",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Southern Europe",region_wb:"Europe & Central Asia",name_len:8,long_len:8,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"PRY",arcs:[[-104,-105,-26]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Paraguay",sov_a3:"PRY",adm0_dif:0,level:2,type:"Sovereign country",admin:"Paraguay",adm0_a3:"PRY",geou_dif:0,geounit:"Paraguay",gu_a3:"PRY",su_dif:0,subunit:"Paraguay",su_a3:"PRY",brk_diff:0,name:"Paraguay",name_long:"Paraguay",brk_a3:"PRY",brk_name:"Paraguay",brk_group:null,abbrev:"Para.",postal:"PY",formal_en:"Republic of Paraguay",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Paraguay",name_alt:null,mapcolor7:6,mapcolor8:3,mapcolor9:6,mapcolor13:2,pop_est:6995655,gdp_md_est:28890,pop_year:-99,lastcensus:2002,gdp_year:-99,economy:"5. Emerging region: G20",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"PY",iso_a3:"PRY",iso_n3:"600",un_a3:"600",wb_a2:"PY",wb_a3:"PRY",woe_id:-99,adm0_a3_is:"PRY",adm0_a3_us:"PRY",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"South America",region_un:"Americas",subregion:"South America",region_wb:"Latin America & Caribbean",name_len:8,long_len:8,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"PSE",arcs:[[-382,-369]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Israel",sov_a3:"ISR",adm0_dif:1,level:2,type:"Disputed",admin:"Palestine",adm0_a3:"PSX",geou_dif:0,geounit:"Palestine",gu_a3:"PSX",su_dif:0,subunit:"Palestine",su_a3:"PSX",brk_diff:0,name:"Palestine",name_long:"Palestine",brk_a3:"PSX",brk_name:"Palestine",brk_group:null,abbrev:"Pal.",postal:"PAL",formal_en:"West Bank and Gaza",formal_fr:null,note_adm0:"Partial self-admin.",note_brk:"Partial self-admin.",name_sort:"Palestine (West Bank and Gaza)",name_alt:null,mapcolor7:3,mapcolor8:2,mapcolor9:5,mapcolor13:8,pop_est:4119083,gdp_md_est:11950.77,pop_year:-99,lastcensus:2007,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"PS",iso_a3:"PSE",iso_n3:"275",un_a3:"275",wb_a2:"GZ",wb_a3:"WBG",woe_id:-99,adm0_a3_is:"PSE",adm0_a3_us:"PSX",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Western Asia",region_wb:"Middle East & North Africa",name_len:9,long_len:9,abbrev_len:4,tiny:-99,homepart:-99}},{type:"Polygon",id:"QAT",arcs:[[508,509]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Qatar",sov_a3:"QAT",adm0_dif:0,level:2,type:"Sovereign country",admin:"Qatar",adm0_a3:"QAT",geou_dif:0,geounit:"Qatar",gu_a3:"QAT",su_dif:0,subunit:"Qatar",su_a3:"QAT",brk_diff:0,name:"Qatar",name_long:"Qatar",brk_a3:"QAT",brk_name:"Qatar",brk_group:null,abbrev:"Qatar",postal:"QA",formal_en:"State of Qatar",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Qatar",name_alt:null,mapcolor7:3,mapcolor8:6,mapcolor9:2,mapcolor13:4,pop_est:833285,gdp_md_est:91330,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"6. Developing region",income_grp:"2. High income: nonOECD",wikipedia:-99,fips_10:null,iso_a2:"QA",iso_a3:"QAT",iso_n3:"634",un_a3:"634",wb_a2:"QA",wb_a3:"QAT",woe_id:-99,adm0_a3_is:"QAT",adm0_a3_us:"QAT",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Western Asia",region_wb:"Middle East & North Africa",name_len:5,long_len:5,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"ROU",arcs:[[510,-432,511,512,-81,513,-331]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Romania",sov_a3:"ROU",adm0_dif:0,level:2,type:"Sovereign country",admin:"Romania",adm0_a3:"ROU",geou_dif:0,geounit:"Romania",gu_a3:"ROU",su_dif:0,subunit:"Romania",su_a3:"ROU",brk_diff:0,name:"Romania",name_long:"Romania",brk_a3:"ROU",brk_name:"Romania",brk_group:null,abbrev:"Rom.",postal:"RO",formal_en:"Romania",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Romania",name_alt:null,mapcolor7:1,mapcolor8:4,mapcolor9:3,mapcolor13:13,pop_est:22215421,gdp_md_est:271400,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"RO",iso_a3:"ROU",iso_n3:"642",un_a3:"642",wb_a2:"RO",wb_a3:"ROM",woe_id:-99,adm0_a3_is:"ROU",adm0_a3_us:"ROU",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Eastern Europe",region_wb:"Europe & Central Asia",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"RUS",arcs:[[[514]],[[-501,515,-423]],[[-517]],[[517]],[[518]],[[519]],[[520]],[[521]],[[-505,-184,-445,-182,-389,522,-59,-291,523,524,-95,-428,-261,525,-269,-473,526]],[[527]],[[528]],[[529]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Russia",sov_a3:"RUS",adm0_dif:0,level:2,type:"Sovereign country",admin:"Russia",adm0_a3:"RUS",geou_dif:0,geounit:"Russia",gu_a3:"RUS",su_dif:0,subunit:"Russia",su_a3:"RUS",brk_diff:0,name:"Russia",name_long:"Russian Federation",brk_a3:"RUS",brk_name:"Russia",brk_group:null,abbrev:"Rus.",postal:"RUS",formal_en:"Russian Federation",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Russian Federation",name_alt:null,mapcolor7:2,mapcolor8:5,mapcolor9:7,mapcolor13:7,pop_est:140041247,gdp_md_est:2266e3,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"3. Emerging region: BRIC",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"RU",iso_a3:"RUS",iso_n3:"643",un_a3:"643",wb_a2:"RU",wb_a3:"RUS",woe_id:-99,adm0_a3_is:"RUS",adm0_a3_us:"RUS",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Eastern Europe",region_wb:"Europe & Central Asia",name_len:6,long_len:18,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"RWA",arcs:[[530,-61,-198,531]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Rwanda",sov_a3:"RWA",adm0_dif:0,level:2,type:"Sovereign country",admin:"Rwanda",adm0_a3:"RWA",geou_dif:0,geounit:"Rwanda",gu_a3:"RWA",su_dif:0,subunit:"Rwanda",su_a3:"RWA",brk_diff:0,name:"Rwanda",name_long:"Rwanda",brk_a3:"RWA",brk_name:"Rwanda",brk_group:null,abbrev:"Rwa.",postal:"RW",formal_en:"Republic of Rwanda",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Rwanda",name_alt:null,mapcolor7:5,mapcolor8:2,mapcolor9:3,mapcolor13:10,pop_est:10473282,gdp_md_est:9706,pop_year:-99,lastcensus:2002,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"RW",iso_a3:"RWA",iso_n3:"646",un_a3:"646",wb_a2:"RW",wb_a3:"RWA",woe_id:-99,adm0_a3_is:"RWA",adm0_a3_us:"RWA",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Eastern Africa",region_wb:"Sub-Saharan Africa",name_len:6,long_len:6,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"ESH",arcs:[[-241,-456,532,-429]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:7,sovereignt:"Western Sahara",sov_a3:"SAH",adm0_dif:0,level:2,type:"Indeterminate",admin:"Western Sahara",adm0_a3:"SAH",geou_dif:0,geounit:"Western Sahara",gu_a3:"SAH",su_dif:0,subunit:"Western Sahara",su_a3:"SAH",brk_diff:1,name:"W. Sahara",name_long:"Western Sahara",brk_a3:"B28",brk_name:"W. Sahara",brk_group:null,abbrev:"W. Sah.",postal:"WS",formal_en:"Sahrawi Arab Democratic Republic",formal_fr:null,note_adm0:"Self admin.",note_brk:"Self admin.; Claimed by Morocco",name_sort:"Western Sahara",name_alt:null,mapcolor7:4,mapcolor8:7,mapcolor9:4,mapcolor13:4,pop_est:-99,gdp_md_est:-99,pop_year:-99,lastcensus:-99,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"EH",iso_a3:"ESH",iso_n3:"732",un_a3:"732",wb_a2:"-99",wb_a3:"-99",woe_id:-99,adm0_a3_is:"MAR",adm0_a3_us:"SAH",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Northern Africa",region_wb:"Middle East & North Africa",name_len:9,long_len:14,abbrev_len:7,tiny:-99,homepart:1}},{type:"Polygon",id:"SAU",arcs:[[533,-380,-363,-408,534,-510,535,-23,-482,536]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Saudi Arabia",sov_a3:"SAU",adm0_dif:0,level:2,type:"Sovereign country",admin:"Saudi Arabia",adm0_a3:"SAU",geou_dif:0,geounit:"Saudi Arabia",gu_a3:"SAU",su_dif:0,subunit:"Saudi Arabia",su_a3:"SAU",brk_diff:0,name:"Saudi Arabia",name_long:"Saudi Arabia",brk_a3:"SAU",brk_name:"Saudi Arabia",brk_group:null,abbrev:"Saud.",postal:"SA",formal_en:"Kingdom of Saudi Arabia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Saudi Arabia",name_alt:null,mapcolor7:6,mapcolor8:1,mapcolor9:6,mapcolor13:7,pop_est:28686633,gdp_md_est:576500,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"2. High income: nonOECD",wikipedia:-99,fips_10:null,iso_a2:"SA",iso_a3:"SAU",iso_n3:"682",un_a3:"682",wb_a2:"SA",wb_a3:"SAU",woe_id:-99,adm0_a3_is:"SAU",adm0_a3_us:"SAU",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Western Asia",region_wb:"Middle East & North Africa",name_len:12,long_len:12,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"SDN",arcs:[[537,538,-123,539,-419,-249,540,-254,-268,541]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Sudan",sov_a3:"SDN",adm0_dif:0,level:2,type:"Sovereign country",admin:"Sudan",adm0_a3:"SDN",geou_dif:0,geounit:"Sudan",gu_a3:"SDN",su_dif:0,subunit:"Sudan",su_a3:"SDN",brk_diff:0,name:"Sudan",name_long:"Sudan",brk_a3:"SDN",brk_name:"Sudan",brk_group:null,abbrev:"Sudan",postal:"SD",formal_en:"Republic of the Sudan",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Sudan",name_alt:null,mapcolor7:2,mapcolor8:6,mapcolor9:4,mapcolor13:1,pop_est:25946220,gdp_md_est:88080,pop_year:-99,lastcensus:2008,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"SD",iso_a3:"SDN",iso_n3:"729",un_a3:"729",wb_a2:"SD",wb_a3:"SDN",woe_id:-99,adm0_a3_is:"SDN",adm0_a3_us:"SDN",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Northern Africa",region_wb:"Sub-Saharan Africa",name_len:5,long_len:5,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"SSD",arcs:[[542,-266,-394,543,-203,-125,544,-538]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"South Sudan",sov_a3:"SDS",adm0_dif:0,level:2,type:"Sovereign country",admin:"South Sudan",adm0_a3:"SDS",geou_dif:0,geounit:"South Sudan",gu_a3:"SDS",su_dif:0,subunit:"South Sudan",su_a3:"SDS",brk_diff:0,name:"S. Sudan",name_long:"South Sudan",brk_a3:"SDS",brk_name:"S. Sudan",brk_group:null,abbrev:"S. Sud.",postal:"SS",formal_en:"Republic of South Sudan",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"South Sudan",name_alt:null,mapcolor7:1,mapcolor8:3,mapcolor9:3,mapcolor13:5,pop_est:10625176,gdp_md_est:13227,pop_year:-99,lastcensus:2008,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"SS",iso_a3:"SSD",iso_n3:"728",un_a3:"728",wb_a2:"SS",wb_a3:"SSD",woe_id:-99,adm0_a3_is:"SSD",adm0_a3_us:"SDS",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Eastern Africa",region_wb:"Sub-Saharan Africa",name_len:8,long_len:11,abbrev_len:7,tiny:-99,homepart:1}},{type:"Polygon",id:"SEN",arcs:[[545,-454,-440,-299,-304,546,-302]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Senegal",sov_a3:"SEN",adm0_dif:0,level:2,type:"Sovereign country",admin:"Senegal",adm0_a3:"SEN",geou_dif:0,geounit:"Senegal",gu_a3:"SEN",su_dif:0,subunit:"Senegal",su_a3:"SEN",brk_diff:0,name:"Senegal",name_long:"Senegal",brk_a3:"SEN",brk_name:"Senegal",brk_group:null,abbrev:"Sen.",postal:"SN",formal_en:"Republic of Senegal",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Senegal",name_alt:null,mapcolor7:2,mapcolor8:6,mapcolor9:5,mapcolor13:5,pop_est:13711597,gdp_md_est:21980,pop_year:-99,lastcensus:2002,gdp_year:-99,economy:"7. Least developed region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"SN",iso_a3:"SEN",iso_n3:"686",un_a3:"686",wb_a2:"SN",wb_a3:"SEN",woe_id:-99,adm0_a3_is:"SEN",adm0_a3_us:"SEN",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Western Africa",region_wb:"Sub-Saharan Africa",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"SLB",arcs:[[[547]],[[548]],[[549]],[[550]],[[551]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Solomon Islands",sov_a3:"SLB",adm0_dif:0,level:2,type:"Sovereign country",admin:"Solomon Islands",adm0_a3:"SLB",geou_dif:0,geounit:"Solomon Islands",gu_a3:"SLB",su_dif:0,subunit:"Solomon Islands",su_a3:"SLB",brk_diff:0,name:"Solomon Is.",name_long:"Solomon Islands",brk_a3:"SLB",brk_name:"Solomon Is.",brk_group:null,abbrev:"S. Is.",postal:"SB",formal_en:null,formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Solomon Islands",name_alt:null,mapcolor7:1,mapcolor8:4,mapcolor9:1,mapcolor13:6,pop_est:595613,gdp_md_est:1078,pop_year:-99,lastcensus:2009,gdp_year:-99,economy:"7. Least developed region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"SB",iso_a3:"SLB",iso_n3:"090",un_a3:"090",wb_a2:"SB",wb_a3:"SLB",woe_id:-99,adm0_a3_is:"SLB",adm0_a3_us:"SLB",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Oceania",region_un:"Oceania",subregion:"Melanesia",region_wb:"East Asia & Pacific",name_len:11,long_len:15,abbrev_len:6,tiny:-99,homepart:1}},{type:"Polygon",id:"SLE",arcs:[[552,-296,-415]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Sierra Leone",sov_a3:"SLE",adm0_dif:0,level:2,type:"Sovereign country",admin:"Sierra Leone",adm0_a3:"SLE",geou_dif:0,geounit:"Sierra Leone",gu_a3:"SLE",su_dif:0,subunit:"Sierra Leone",su_a3:"SLE",brk_diff:0,name:"Sierra Leone",name_long:"Sierra Leone",brk_a3:"SLE",brk_name:"Sierra Leone",brk_group:null,abbrev:"S.L.",postal:"SL",formal_en:"Republic of Sierra Leone",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Sierra Leone",name_alt:null,mapcolor7:1,mapcolor8:4,mapcolor9:1,mapcolor13:7,pop_est:6440053,gdp_md_est:4285,pop_year:-99,lastcensus:2004,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"SL",iso_a3:"SLE",iso_n3:"694",un_a3:"694",wb_a2:"SL",wb_a3:"SLE",woe_id:-99,adm0_a3_is:"SLE",adm0_a3_us:"SLE",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Western Africa",region_wb:"Sub-Saharan Africa",name_len:12,long_len:12,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"SLV",arcs:[[553,-315,-320]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:6,sovereignt:"El Salvador",sov_a3:"SLV",adm0_dif:0,level:2,type:"Sovereign country",admin:"El Salvador",adm0_a3:"SLV",geou_dif:0,geounit:"El Salvador",gu_a3:"SLV",su_dif:0,subunit:"El Salvador",su_a3:"SLV",brk_diff:0,name:"El Salvador",name_long:"El Salvador",brk_a3:"SLV",brk_name:"El Salvador",brk_group:null,abbrev:"El. S.",postal:"SV",formal_en:"Republic of El Salvador",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"El Salvador",name_alt:null,mapcolor7:1,mapcolor8:4,mapcolor9:6,mapcolor13:8,pop_est:7185218,gdp_md_est:43630,pop_year:-99,lastcensus:2007,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"SV",iso_a3:"SLV",iso_n3:"222",un_a3:"222",wb_a2:"SV",wb_a3:"SLV",woe_id:-99,adm0_a3_is:"SLV",adm0_a3_us:"SLV",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"North America",region_un:"Americas",subregion:"Central America",region_wb:"Latin America & Caribbean",name_len:11,long_len:11,abbrev_len:6,tiny:-99,homepart:1}},{type:"Polygon",id:"-99",arcs:[[-263,-231,554,555]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Somaliland",sov_a3:"SOL",adm0_dif:0,level:2,type:"Indeterminate",admin:"Somaliland",adm0_a3:"SOL",geou_dif:0,geounit:"Somaliland",gu_a3:"SOL",su_dif:0,subunit:"Somaliland",su_a3:"SOL",brk_diff:1,name:"Somaliland",name_long:"Somaliland",brk_a3:"B30",brk_name:"Somaliland",brk_group:null,abbrev:"Solnd.",postal:"SL",formal_en:"Republic of Somaliland",formal_fr:null,note_adm0:"Self admin.",note_brk:"Self admin.; Claimed by Somalia",name_sort:"Somaliland",name_alt:null,mapcolor7:3,mapcolor8:6,mapcolor9:5,mapcolor13:2,pop_est:35e5,gdp_md_est:12250,pop_year:-99,lastcensus:-99,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"-99",iso_a3:"-99",iso_n3:"-99",un_a3:"-099",wb_a2:"-99",wb_a3:"-99",woe_id:-99,adm0_a3_is:"SOM",adm0_a3_us:"SOM",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Eastern Africa",region_wb:"Sub-Saharan Africa",name_len:10,long_len:10,abbrev_len:6,tiny:-99,homepart:1}},{type:"Polygon",id:"SOM",arcs:[[-395,-264,-556,556]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:6,sovereignt:"Somalia",sov_a3:"SOM",adm0_dif:0,level:2,type:"Sovereign country",admin:"Somalia",adm0_a3:"SOM",geou_dif:0,geounit:"Somalia",gu_a3:"SOM",su_dif:0,subunit:"Somalia",su_a3:"SOM",brk_diff:0,name:"Somalia",name_long:"Somalia",brk_a3:"SOM",brk_name:"Somalia",brk_group:null,abbrev:"Som.",postal:"SO",formal_en:"Federal Republic of Somalia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Somalia",name_alt:null,mapcolor7:2,mapcolor8:8,mapcolor9:6,mapcolor13:7,pop_est:9832017,gdp_md_est:5524,pop_year:-99,lastcensus:1987,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"SO",iso_a3:"SOM",iso_n3:"706",un_a3:"706",wb_a2:"SO",wb_a3:"SOM",woe_id:-99,adm0_a3_is:"SOM",adm0_a3_us:"SOM",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Eastern Africa",region_wb:"Sub-Saharan Africa",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"SRB",arcs:[[-86,-437,-405,-444,-90,-323,-332,-514]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Republic of Serbia",sov_a3:"SRB",adm0_dif:0,level:2,type:"Sovereign country",admin:"Republic of Serbia",adm0_a3:"SRB",geou_dif:0,geounit:"Republic of Serbia",gu_a3:"SRB",su_dif:0,subunit:"Republic of Serbia",su_a3:"SRB",brk_diff:0,name:"Serbia",name_long:"Serbia",brk_a3:"SRB",brk_name:"Serbia",brk_group:null,abbrev:"Serb.",postal:"RS",formal_en:"Republic of Serbia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Serbia",name_alt:null,mapcolor7:3,mapcolor8:3,mapcolor9:2,mapcolor13:10,pop_est:7379339,gdp_md_est:80340,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"RS",iso_a3:"SRB",iso_n3:"688",un_a3:"688",wb_a2:"YF",wb_a3:"SRB",woe_id:-99,adm0_a3_is:"SRB",adm0_a3_us:"SRB",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Southern Europe",region_wb:"Europe & Central Asia",name_len:6,long_len:6,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"SUR",arcs:[[557,-278,558,-276,-110,-317]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Suriname",sov_a3:"SUR",adm0_dif:0,level:2,type:"Sovereign country",admin:"Suriname",adm0_a3:"SUR",geou_dif:0,geounit:"Suriname",gu_a3:"SUR",su_dif:0,subunit:"Suriname",su_a3:"SUR",brk_diff:0,name:"Suriname",name_long:"Suriname",brk_a3:"SUR",brk_name:"Suriname",brk_group:null,abbrev:"Sur.",postal:"SR",formal_en:"Republic of Suriname",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Suriname",name_alt:null,mapcolor7:1,mapcolor8:4,mapcolor9:7,mapcolor13:6,pop_est:481267,gdp_md_est:4254,pop_year:-99,lastcensus:2004,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"SR",iso_a3:"SUR",iso_n3:"740",un_a3:"740",wb_a2:"SR",wb_a3:"SUR",woe_id:-99,adm0_a3_is:"SUR",adm0_a3_us:"SUR",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"South America",region_un:"Americas",subregion:"South America",region_wb:"Latin America & Caribbean",name_len:8,long_len:8,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"SVK",arcs:[[-503,559,-329,-54,-222]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:6,sovereignt:"Slovakia",sov_a3:"SVK",adm0_dif:0,level:2,type:"Sovereign country",admin:"Slovakia",adm0_a3:"SVK",geou_dif:0,geounit:"Slovakia",gu_a3:"SVK",su_dif:0,subunit:"Slovakia",su_a3:"SVK",brk_diff:0,name:"Slovakia",name_long:"Slovakia",brk_a3:"SVK",brk_name:"Slovakia",brk_group:null,abbrev:"Svk.",postal:"SK",formal_en:"Slovak Republic",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Slovak Republic",name_alt:null,mapcolor7:2,mapcolor8:4,mapcolor9:4,mapcolor13:9,pop_est:5463046,gdp_md_est:119500,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"SK",iso_a3:"SVK",iso_n3:"703",un_a3:"703",wb_a2:"SK",wb_a3:"SVK",woe_id:-99,adm0_a3_is:"SVK",adm0_a3_us:"SVK",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Eastern Europe",region_wb:"Europe & Central Asia",name_len:8,long_len:8,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"SVN",arcs:[[-49,-333,-326,560,-376]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:6,sovereignt:"Slovenia",sov_a3:"SVN",adm0_dif:0,level:2,type:"Sovereign country",admin:"Slovenia",adm0_a3:"SVN",geou_dif:0,geounit:"Slovenia",gu_a3:"SVN",su_dif:0,subunit:"Slovenia",su_a3:"SVN",brk_diff:0,name:"Slovenia",name_long:"Slovenia",brk_a3:"SVN",brk_name:"Slovenia",brk_group:null,abbrev:"Slo.",postal:"SLO",formal_en:"Republic of Slovenia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Slovenia",name_alt:null,mapcolor7:2,mapcolor8:3,mapcolor9:2,mapcolor13:12,pop_est:2005692,gdp_md_est:59340,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"SI",iso_a3:"SVN",iso_n3:"705",un_a3:"705",wb_a2:"SI",wb_a3:"SVN",woe_id:-99,adm0_a3_is:"SVN",adm0_a3_us:"SVN",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Southern Europe",region_wb:"Europe & Central Asia",name_len:8,long_len:8,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"SWE",arcs:[[-474,-271,561]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Sweden",sov_a3:"SWE",adm0_dif:0,level:2,type:"Sovereign country",admin:"Sweden",adm0_a3:"SWE",geou_dif:0,geounit:"Sweden",gu_a3:"SWE",su_dif:0,subunit:"Sweden",su_a3:"SWE",brk_diff:0,name:"Sweden",name_long:"Sweden",brk_a3:"SWE",brk_name:"Sweden",brk_group:null,abbrev:"Swe.",postal:"S",formal_en:"Kingdom of Sweden",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Sweden",name_alt:null,mapcolor7:1,mapcolor8:4,mapcolor9:2,mapcolor13:4,pop_est:9059651,gdp_md_est:344300,pop_year:-99,lastcensus:-99,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"1. High income: OECD",wikipedia:-99,fips_10:null,iso_a2:"SE",iso_a3:"SWE",iso_n3:"752",un_a3:"752",wb_a2:"SE",wb_a3:"SWE",woe_id:-99,adm0_a3_is:"SWE",adm0_a3_us:"SWE",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Northern Europe",region_wb:"Europe & Central Asia",name_len:6,long_len:6,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"SWZ",arcs:[[562,-449]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Swaziland",sov_a3:"SWZ",adm0_dif:0,level:2,type:"Sovereign country",admin:"Swaziland",adm0_a3:"SWZ",geou_dif:0,geounit:"Swaziland",gu_a3:"SWZ",su_dif:0,subunit:"Swaziland",su_a3:"SWZ",brk_diff:0,name:"Swaziland",name_long:"Swaziland",brk_a3:"SWZ",brk_name:"Swaziland",brk_group:null,abbrev:"Swz.",postal:"SW",formal_en:"Kingdom of Swaziland",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Swaziland",name_alt:null,mapcolor7:3,mapcolor8:6,mapcolor9:2,mapcolor13:5,pop_est:1123913,gdp_md_est:5702,pop_year:-99,lastcensus:2007,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"SZ",iso_a3:"SWZ",iso_n3:"748",un_a3:"748",wb_a2:"SZ",wb_a3:"SWZ",woe_id:-99,adm0_a3_is:"SWZ",adm0_a3_us:"SWZ",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Southern Africa",region_wb:"Sub-Saharan Africa",name_len:9,long_len:9,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"SYR",arcs:[[-379,-373,-413,563,564,-365]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Syria",sov_a3:"SYR",adm0_dif:0,level:2,type:"Sovereign country",admin:"Syria",adm0_a3:"SYR",geou_dif:0,geounit:"Syria",gu_a3:"SYR",su_dif:0,subunit:"Syria",su_a3:"SYR",brk_diff:0,name:"Syria",name_long:"Syria",brk_a3:"SYR",brk_name:"Syria",brk_group:null,abbrev:"Syria",postal:"SYR",formal_en:"Syrian Arab Republic",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Syrian Arab Republic",name_alt:null,mapcolor7:2,mapcolor8:6,mapcolor9:2,mapcolor13:6,pop_est:20178485,gdp_md_est:98830,pop_year:-99,lastcensus:2004,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"SY",iso_a3:"SYR",iso_n3:"760",un_a3:"760",wb_a2:"SY",wb_a3:"SYR",woe_id:-99,adm0_a3_is:"SYR",adm0_a3_us:"SYR",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Western Asia",region_wb:"Middle East & North Africa",name_len:5,long_len:5,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"TCD",arcs:[[-467,-420,-540,-122,-195]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Chad",sov_a3:"TCD",adm0_dif:0,level:2,type:"Sovereign country",admin:"Chad",adm0_a3:"TCD",geou_dif:0,geounit:"Chad",gu_a3:"TCD",su_dif:0,subunit:"Chad",su_a3:"TCD",brk_diff:0,name:"Chad",name_long:"Chad",brk_a3:"TCD",brk_name:"Chad",brk_group:null,abbrev:"Chad",postal:"TD",formal_en:"Republic of Chad",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Chad",name_alt:null,mapcolor7:6,mapcolor8:1,mapcolor9:8,mapcolor13:6,pop_est:10329208,gdp_md_est:15860,pop_year:-99,lastcensus:2009,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"TD",iso_a3:"TCD",iso_n3:"148",un_a3:"148",wb_a2:"TD",wb_a3:"TCD",woe_id:-99,adm0_a3_is:"TCD",adm0_a3_us:"TCD",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Middle Africa",region_wb:"Sub-Saharan Africa",name_len:4,long_len:4,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"TGO",arcs:[[565,-294,-76,-69]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:6,sovereignt:"Togo",sov_a3:"TGO",adm0_dif:0,level:2,type:"Sovereign country",admin:"Togo",adm0_a3:"TGO",geou_dif:0,geounit:"Togo",gu_a3:"TGO",su_dif:0,subunit:"Togo",su_a3:"TGO",brk_diff:0,name:"Togo",name_long:"Togo",brk_a3:"TGO",brk_name:"Togo",brk_group:null,abbrev:"Togo",postal:"TG",formal_en:"Togolese Republic",formal_fr:"République Togolaise",note_adm0:null,note_brk:null,name_sort:"Togo",name_alt:null,mapcolor7:3,mapcolor8:1,mapcolor9:3,mapcolor13:5,pop_est:6019877,gdp_md_est:5118,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"TG",iso_a3:"TGO",iso_n3:"768",un_a3:"768",wb_a2:"TG",wb_a3:"TGO",woe_id:-99,adm0_a3_is:"TGO",adm0_a3_us:"TGO",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Western Africa",region_wb:"Sub-Saharan Africa",name_len:4,long_len:4,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"THA",arcs:[[566,-460,567,-442,-409,-398]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Thailand",sov_a3:"THA",adm0_dif:0,level:2,type:"Sovereign country",admin:"Thailand",adm0_a3:"THA",geou_dif:0,geounit:"Thailand",gu_a3:"THA",su_dif:0,subunit:"Thailand",su_a3:"THA",brk_diff:0,name:"Thailand",name_long:"Thailand",brk_a3:"THA",brk_name:"Thailand",brk_group:null,abbrev:"Thai.",postal:"TH",formal_en:"Kingdom of Thailand",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Thailand",name_alt:null,mapcolor7:3,mapcolor8:6,mapcolor9:8,mapcolor13:1,pop_est:65905410,gdp_md_est:547400,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"5. Emerging region: G20",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"TH",iso_a3:"THA",iso_n3:"764",un_a3:"764",wb_a2:"TH",wb_a3:"THA",woe_id:-99,adm0_a3_is:"THA",adm0_a3_us:"THA",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"South-Eastern Asia",region_wb:"East Asia & Pacific",name_len:8,long_len:8,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"TJK",arcs:[[-396,-179,-3,568]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Tajikistan",sov_a3:"TJK",adm0_dif:0,level:2,type:"Sovereign country",admin:"Tajikistan",adm0_a3:"TJK",geou_dif:0,geounit:"Tajikistan",gu_a3:"TJK",su_dif:0,subunit:"Tajikistan",su_a3:"TJK",brk_diff:0,name:"Tajikistan",name_long:"Tajikistan",brk_a3:"TJK",brk_name:"Tajikistan",brk_group:null,abbrev:"Tjk.",postal:"TJ",formal_en:"Republic of Tajikistan",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Tajikistan",name_alt:null,mapcolor7:3,mapcolor8:6,mapcolor9:2,mapcolor13:5,pop_est:7349145,gdp_md_est:13160,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"6. Developing region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"TJ",iso_a3:"TJK",iso_n3:"762",un_a3:"762",wb_a2:"TJ",wb_a3:"TJK",woe_id:-99,adm0_a3_is:"TJK",adm0_a3_us:"TJK",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Central Asia",region_wb:"Europe & Central Asia",name_len:10,long_len:10,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"TKM",arcs:[[-355,569,-387,570,-1]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Turkmenistan",sov_a3:"TKM",adm0_dif:0,level:2,type:"Sovereign country",admin:"Turkmenistan",adm0_a3:"TKM",geou_dif:0,geounit:"Turkmenistan",gu_a3:"TKM",su_dif:0,subunit:"Turkmenistan",su_a3:"TKM",brk_diff:0,name:"Turkmenistan",name_long:"Turkmenistan",brk_a3:"TKM",brk_name:"Turkmenistan",brk_group:null,abbrev:"Turkm.",postal:"TM",formal_en:"Turkmenistan",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Turkmenistan",name_alt:null,mapcolor7:3,mapcolor8:2,mapcolor9:1,mapcolor13:9,pop_est:4884887,gdp_md_est:29780,pop_year:-99,lastcensus:1995,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"TM",iso_a3:"TKM",iso_n3:"795",un_a3:"795",wb_a2:"TM",wb_a3:"TKM",woe_id:-99,adm0_a3_is:"TKM",adm0_a3_us:"TKM",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Central Asia",region_wb:"Europe & Central Asia",name_len:12,long_len:12,abbrev_len:6,tiny:-99,homepart:1}},{type:"Polygon",id:"TLS",arcs:[[571,-335]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"East Timor",sov_a3:"TLS",adm0_dif:0,level:2,type:"Sovereign country",admin:"East Timor",adm0_a3:"TLS",geou_dif:0,geounit:"East Timor",gu_a3:"TLS",su_dif:0,subunit:"East Timor",su_a3:"TLS",brk_diff:0,name:"Timor-Leste",name_long:"Timor-Leste",brk_a3:"TLS",brk_name:"Timor-Leste",brk_group:null,abbrev:"T.L.",postal:"TL",formal_en:"Democratic Republic of Timor-Leste",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Timor-Leste",name_alt:"East Timor",mapcolor7:2,mapcolor8:2,mapcolor9:4,mapcolor13:3,pop_est:1131612,gdp_md_est:2520,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"7. Least developed region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"TL",iso_a3:"TLS",iso_n3:"626",un_a3:"626",wb_a2:"TP",wb_a3:"TMP",woe_id:-99,adm0_a3_is:"TLS",adm0_a3_us:"TLS",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"South-Eastern Asia",region_wb:"East Asia & Pacific",name_len:11,long_len:11,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"TTO",arcs:[[572]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:5,sovereignt:"Trinidad and Tobago",sov_a3:"TTO",adm0_dif:0,level:2,type:"Sovereign country",admin:"Trinidad and Tobago",adm0_a3:"TTO",geou_dif:0,geounit:"Trinidad and Tobago",gu_a3:"TTO",su_dif:0,subunit:"Trinidad and Tobago",su_a3:"TTO",brk_diff:0,name:"Trinidad and Tobago",name_long:"Trinidad and Tobago",brk_a3:"TTO",brk_name:"Trinidad and Tobago",brk_group:null,abbrev:"Tr.T.",postal:"TT",formal_en:"Republic of Trinidad and Tobago",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Trinidad and Tobago",name_alt:null,mapcolor7:5,mapcolor8:6,mapcolor9:2,mapcolor13:5,pop_est:131e4,gdp_md_est:29010,pop_year:-99,lastcensus:2011,gdp_year:-99,economy:"6. Developing region",income_grp:"2. High income: nonOECD",wikipedia:-99,fips_10:null,iso_a2:"TT",iso_a3:"TTO",iso_n3:"780",un_a3:"780",wb_a2:"TT",wb_a3:"TTO",woe_id:-99,adm0_a3_is:"TTO",adm0_a3_us:"TTO",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"North America",region_un:"Americas",subregion:"Caribbean",region_wb:"Latin America & Caribbean",name_len:19,long_len:19,abbrev_len:5,tiny:2,homepart:1}},{type:"Polygon",id:"TUN",arcs:[[-244,573,-417]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Tunisia",sov_a3:"TUN",adm0_dif:0,level:2,type:"Sovereign country",admin:"Tunisia",adm0_a3:"TUN",geou_dif:0,geounit:"Tunisia",gu_a3:"TUN",su_dif:0,subunit:"Tunisia",su_a3:"TUN",brk_diff:0,name:"Tunisia",name_long:"Tunisia",brk_a3:"TUN",brk_name:"Tunisia",brk_group:null,abbrev:"Tun.",postal:"TN",formal_en:"Republic of Tunisia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Tunisia",name_alt:null,mapcolor7:4,mapcolor8:3,mapcolor9:3,mapcolor13:2,pop_est:10486339,gdp_md_est:81710,pop_year:-99,lastcensus:2004,gdp_year:-99,economy:"6. Developing region",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"TN",iso_a3:"TUN",iso_n3:"788",un_a3:"788",wb_a2:"TN",wb_a3:"TUN",woe_id:-99,adm0_a3_is:"TUN",adm0_a3_us:"TUN",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Northern Africa",region_wb:"Middle East & North Africa",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"TUR",arcs:[[[-292,-36,-359,-366,-565,574]],[[-309,-83,575]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Turkey",sov_a3:"TUR",adm0_dif:0,level:2,type:"Sovereign country",admin:"Turkey",adm0_a3:"TUR",geou_dif:0,geounit:"Turkey",gu_a3:"TUR",su_dif:0,subunit:"Turkey",su_a3:"TUR",brk_diff:0,name:"Turkey",name_long:"Turkey",brk_a3:"TUR",brk_name:"Turkey",brk_group:null,abbrev:"Tur.",postal:"TR",formal_en:"Republic of Turkey",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Turkey",name_alt:null,mapcolor7:6,mapcolor8:3,mapcolor9:8,mapcolor13:4,pop_est:76805524,gdp_md_est:902700,pop_year:-99,lastcensus:2e3,gdp_year:-99,economy:"4. Emerging region: MIKT",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"TR",iso_a3:"TUR",iso_n3:"792",un_a3:"792",wb_a2:"TR",wb_a3:"TUR",woe_id:-99,adm0_a3_is:"TUR",adm0_a3_us:"TUR",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Western Asia",region_wb:"Europe & Central Asia",name_len:6,long_len:6,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"TWN",arcs:[[576]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Taiwan",sov_a3:"TWN",adm0_dif:0,level:2,type:"Sovereign country",admin:"Taiwan",adm0_a3:"TWN",geou_dif:0,geounit:"Taiwan",gu_a3:"TWN",su_dif:0,subunit:"Taiwan",su_a3:"TWN",brk_diff:1,name:"Taiwan",name_long:"Taiwan",brk_a3:"B77",brk_name:"Taiwan",brk_group:null,abbrev:"Taiwan",postal:"TW",formal_en:null,formal_fr:null,note_adm0:null,note_brk:"Self admin.; Claimed by China",name_sort:"Taiwan",name_alt:null,mapcolor7:1,mapcolor8:5,mapcolor9:7,mapcolor13:2,pop_est:22974347,gdp_md_est:712e3,pop_year:-99,lastcensus:-99,gdp_year:-99,economy:"2. Developed region: nonG7",income_grp:"2. High income: nonOECD",wikipedia:-99,fips_10:null,iso_a2:"TW",iso_a3:"TWN",iso_n3:"158",un_a3:"-099",wb_a2:"-99",wb_a3:"-99",woe_id:-99,adm0_a3_is:"TWN",adm0_a3_us:"TWN",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Eastern Asia",region_wb:"East Asia & Pacific",name_len:6,long_len:6,abbrev_len:6,tiny:-99,homepart:1}},{type:"Polygon",id:"TZA",arcs:[[-392,577,-446,-458,578,-199,-62,-531,579]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"United Republic of Tanzania",sov_a3:"TZA",adm0_dif:0,level:2,type:"Sovereign country",admin:"United Republic of Tanzania",adm0_a3:"TZA",geou_dif:0,geounit:"Tanzania",gu_a3:"TZA",su_dif:0,subunit:"Tanzania",su_a3:"TZA",brk_diff:0,name:"Tanzania",name_long:"Tanzania",brk_a3:"TZA",brk_name:"Tanzania",brk_group:null,abbrev:"Tanz.",postal:"TZ",formal_en:"United Republic of Tanzania",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Tanzania",name_alt:null,mapcolor7:3,mapcolor8:6,mapcolor9:2,mapcolor13:2,pop_est:41048532,gdp_md_est:54250,pop_year:-99,lastcensus:2002,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"TZ",iso_a3:"TZA",iso_n3:"834",un_a3:"834",wb_a2:"TZ",wb_a3:"TZA",woe_id:-99,adm0_a3_is:"TZA",adm0_a3_us:"TZA",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Eastern Africa",region_wb:"Sub-Saharan Africa",name_len:8,long_len:8,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"UGA",arcs:[[-532,-197,-544,-393,-580]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Uganda",sov_a3:"UGA",adm0_dif:0,level:2,type:"Sovereign country",admin:"Uganda",adm0_a3:"UGA",geou_dif:0,geounit:"Uganda",gu_a3:"UGA",su_dif:0,subunit:"Uganda",su_a3:"UGA",brk_diff:0,name:"Uganda",name_long:"Uganda",brk_a3:"UGA",brk_name:"Uganda",brk_group:null,abbrev:"Uga.",postal:"UG",formal_en:"Republic of Uganda",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Uganda",name_alt:null,mapcolor7:6,mapcolor8:3,mapcolor9:6,mapcolor13:4,pop_est:32369558,gdp_md_est:39380,pop_year:-99,lastcensus:2002,gdp_year:-99,economy:"7. Least developed region",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"UG",iso_a3:"UGA",iso_n3:"800",un_a3:"800",wb_a2:"UG",wb_a3:"UGA",woe_id:-99,adm0_a3_is:"UGA",adm0_a3_us:"UGA",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Eastern Africa",region_wb:"Sub-Saharan Africa",name_len:6,long_len:6,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"UKR",arcs:[[-525,580,-512,-431,-511,-330,-560,-502,-96]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Ukraine",sov_a3:"UKR",adm0_dif:0,level:2,type:"Sovereign country",admin:"Ukraine",adm0_a3:"UKR",geou_dif:0,geounit:"Ukraine",gu_a3:"UKR",su_dif:0,subunit:"Ukraine",su_a3:"UKR",brk_diff:0,name:"Ukraine",name_long:"Ukraine",brk_a3:"UKR",brk_name:"Ukraine",brk_group:null,abbrev:"Ukr.",postal:"UA",formal_en:"Ukraine",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Ukraine",name_alt:null,mapcolor7:5,mapcolor8:1,mapcolor9:6,mapcolor13:3,pop_est:45700395,gdp_md_est:339800,pop_year:-99,lastcensus:2001,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"UA",iso_a3:"UKR",iso_n3:"804",un_a3:"804",wb_a2:"UA",wb_a3:"UKR",woe_id:-99,adm0_a3_is:"UKR",adm0_a3_us:"UKR",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Europe",region_un:"Europe",subregion:"Eastern Europe",region_wb:"Europe & Central Asia",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"URY",arcs:[[-113,581,-28]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Uruguay",sov_a3:"URY",adm0_dif:0,level:2,type:"Sovereign country",admin:"Uruguay",adm0_a3:"URY",geou_dif:0,geounit:"Uruguay",gu_a3:"URY",su_dif:0,subunit:"Uruguay",su_a3:"URY",brk_diff:0,name:"Uruguay",name_long:"Uruguay",brk_a3:"URY",brk_name:"Uruguay",brk_group:null,abbrev:"Ury.",postal:"UY",formal_en:"Oriental Republic of Uruguay",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Uruguay",name_alt:null,mapcolor7:1,mapcolor8:2,mapcolor9:2,mapcolor13:10,pop_est:3494382,gdp_md_est:43160,pop_year:-99,lastcensus:2004,gdp_year:-99,economy:"5. Emerging region: G20",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"UY",iso_a3:"URY",iso_n3:"858",un_a3:"858",wb_a2:"UY",wb_a3:"URY",woe_id:-99,adm0_a3_is:"URY",adm0_a3_us:"URY",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"South America",region_un:"Americas",subregion:"South America",region_wb:"Latin America & Caribbean",name_len:7,long_len:7,abbrev_len:4,tiny:-99,homepart:1}},{type:"MultiPolygon",id:"USA",arcs:[[[582]],[[583]],[[584]],[[585]],[[586]],[[587,-436,588,-139]],[[589]],[[590]],[[591]],[[-141,592]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"United States of America",sov_a3:"US1",adm0_dif:1,level:2,type:"Country",admin:"United States of America",adm0_a3:"USA",geou_dif:0,geounit:"United States of America",gu_a3:"USA",su_dif:0,subunit:"United States of America",su_a3:"USA",brk_diff:0,name:"United States",name_long:"United States",brk_a3:"USA",brk_name:"United States",brk_group:null,abbrev:"U.S.A.",postal:"US",formal_en:"United States of America",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"United States of America",name_alt:null,mapcolor7:4,mapcolor8:5,mapcolor9:1,mapcolor13:1,pop_est:313973e3,gdp_md_est:15094e3,pop_year:0,lastcensus:2010,gdp_year:0,economy:"1. Developed region: G7",income_grp:"1. High income: OECD",wikipedia:0,fips_10:null,iso_a2:"US",iso_a3:"USA",iso_n3:"840",un_a3:"840",wb_a2:"US",wb_a3:"USA",woe_id:-99,adm0_a3_is:"USA",adm0_a3_us:"USA",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"North America",region_un:"Americas",subregion:"Northern America",region_wb:"North America",name_len:13,long_len:13,abbrev_len:6,tiny:-99,homepart:1}},{type:"Polygon",id:"UZB",arcs:[[-571,-386,-397,-569,-2]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Uzbekistan",sov_a3:"UZB",adm0_dif:0,level:2,type:"Sovereign country",admin:"Uzbekistan",adm0_a3:"UZB",geou_dif:0,geounit:"Uzbekistan",gu_a3:"UZB",su_dif:0,subunit:"Uzbekistan",su_a3:"UZB",brk_diff:0,name:"Uzbekistan",name_long:"Uzbekistan",brk_a3:"UZB",brk_name:"Uzbekistan",brk_group:null,abbrev:"Uzb.",postal:"UZ",formal_en:"Republic of Uzbekistan",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Uzbekistan",name_alt:null,mapcolor7:2,mapcolor8:3,mapcolor9:5,mapcolor13:4,pop_est:27606007,gdp_md_est:71670,pop_year:-99,lastcensus:1989,gdp_year:-99,economy:"6. Developing region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"UZ",iso_a3:"UZB",iso_n3:"860",un_a3:"860",wb_a2:"UZ",wb_a3:"UZB",woe_id:-99,adm0_a3_is:"UZB",adm0_a3_us:"UZB",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Central Asia",region_wb:"Europe & Central Asia",name_len:10,long_len:10,abbrev_len:4,tiny:5,homepart:1}},{type:"Polygon",id:"VEN",arcs:[[593,-318,-108,-210]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Venezuela",sov_a3:"VEN",adm0_dif:0,level:2,type:"Sovereign country",admin:"Venezuela",adm0_a3:"VEN",geou_dif:0,geounit:"Venezuela",gu_a3:"VEN",su_dif:0,subunit:"Venezuela",su_a3:"VEN",brk_diff:0,name:"Venezuela",name_long:"Venezuela",brk_a3:"VEN",brk_name:"Venezuela",brk_group:null,abbrev:"Ven.",postal:"VE",formal_en:"Bolivarian Republic of Venezuela",formal_fr:"República Bolivariana de Venezuela",note_adm0:null,note_brk:null,name_sort:"Venezuela, RB",name_alt:null,mapcolor7:1,mapcolor8:3,mapcolor9:1,mapcolor13:4,pop_est:26814843,gdp_md_est:357400,pop_year:-99,lastcensus:2001,gdp_year:-99,economy:"5. Emerging region: G20",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"VE",iso_a3:"VEN",iso_n3:"862",un_a3:"862",wb_a2:"VE",wb_a3:"VEN",woe_id:-99,adm0_a3_is:"VEN",adm0_a3_us:"VEN",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"South America",region_un:"Americas",subregion:"South America",region_wb:"Latin America & Caribbean",name_len:9,long_len:9,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"VNM",arcs:[[594,-400,-411,-171]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"Vietnam",sov_a3:"VNM",adm0_dif:0,level:2,type:"Sovereign country",admin:"Vietnam",adm0_a3:"VNM",geou_dif:0,geounit:"Vietnam",gu_a3:"VNM",su_dif:0,subunit:"Vietnam",su_a3:"VNM",brk_diff:0,name:"Vietnam",name_long:"Vietnam",brk_a3:"VNM",brk_name:"Vietnam",brk_group:null,abbrev:"Viet.",postal:"VN",formal_en:"Socialist Republic of Vietnam",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Vietnam",name_alt:null,mapcolor7:5,mapcolor8:6,mapcolor9:5,mapcolor13:4,pop_est:86967524,gdp_md_est:241700,pop_year:-99,lastcensus:2009,gdp_year:-99,economy:"5. Emerging region: G20",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"VN",iso_a3:"VNM",iso_n3:"704",un_a3:"704",wb_a2:"VN",wb_a3:"VNM",woe_id:-99,adm0_a3_is:"VNM",adm0_a3_us:"VNM",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"South-Eastern Asia",region_wb:"East Asia & Pacific",name_len:7,long_len:7,abbrev_len:5,tiny:2,homepart:1}},{type:"MultiPolygon",id:"VUT",arcs:[[[595]],[[596]]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:4,sovereignt:"Vanuatu",sov_a3:"VUT",adm0_dif:0,level:2,type:"Sovereign country",admin:"Vanuatu",adm0_a3:"VUT",geou_dif:0,geounit:"Vanuatu",gu_a3:"VUT",su_dif:0,subunit:"Vanuatu",su_a3:"VUT",brk_diff:0,name:"Vanuatu",name_long:"Vanuatu",brk_a3:"VUT",brk_name:"Vanuatu",brk_group:null,abbrev:"Van.",postal:"VU",formal_en:"Republic of Vanuatu",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Vanuatu",name_alt:null,mapcolor7:6,mapcolor8:3,mapcolor9:7,mapcolor13:3,pop_est:218519,gdp_md_est:988.5,pop_year:-99,lastcensus:2009,gdp_year:-99,economy:"7. Least developed region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"VU",iso_a3:"VUT",iso_n3:"548",un_a3:"548",wb_a2:"VU",wb_a3:"VUT",woe_id:-99,adm0_a3_is:"VUT",adm0_a3_us:"VUT",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Oceania",region_un:"Oceania",subregion:"Melanesia",region_wb:"East Asia & Pacific",name_len:7,long_len:7,abbrev_len:4,tiny:2,homepart:1}},{type:"Polygon",id:"YEM",arcs:[[597,-537,-481]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Yemen",sov_a3:"YEM",adm0_dif:0,level:2,type:"Sovereign country",admin:"Yemen",adm0_a3:"YEM",geou_dif:0,geounit:"Yemen",gu_a3:"YEM",su_dif:0,subunit:"Yemen",su_a3:"YEM",brk_diff:0,name:"Yemen",name_long:"Yemen",brk_a3:"YEM",brk_name:"Yemen",brk_group:null,abbrev:"Yem.",postal:"YE",formal_en:"Republic of Yemen",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Yemen, Rep.",name_alt:null,mapcolor7:5,mapcolor8:3,mapcolor9:3,mapcolor13:11,pop_est:23822783,gdp_md_est:55280,pop_year:-99,lastcensus:2004,gdp_year:-99,economy:"7. Least developed region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"YE",iso_a3:"YEM",iso_n3:"887",un_a3:"887",wb_a2:"RY",wb_a3:"YEM",woe_id:-99,adm0_a3_is:"YEM",adm0_a3_us:"YEM",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Asia",region_un:"Asia",subregion:"Western Asia",region_wb:"Middle East & North Africa",name_len:5,long_len:5,abbrev_len:4,tiny:-99,homepart:1}},{type:"Polygon",id:"ZAF",arcs:[[-465,-118,598,-450,-563,-448,599],[-422]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:2,sovereignt:"South Africa",sov_a3:"ZAF",adm0_dif:0,level:2,type:"Sovereign country",admin:"South Africa",adm0_a3:"ZAF",geou_dif:0,geounit:"South Africa",gu_a3:"ZAF",su_dif:0,subunit:"South Africa",su_a3:"ZAF",brk_diff:0,name:"South Africa",name_long:"South Africa",brk_a3:"ZAF",brk_name:"South Africa",brk_group:null,abbrev:"S.Af.",postal:"ZA",formal_en:"Republic of South Africa",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"South Africa",name_alt:null,mapcolor7:2,mapcolor8:3,mapcolor9:4,mapcolor13:2,pop_est:49052489,gdp_md_est:491e3,pop_year:-99,lastcensus:2001,gdp_year:-99,economy:"5. Emerging region: G20",income_grp:"3. Upper middle income",wikipedia:-99,fips_10:null,iso_a2:"ZA",iso_a3:"ZAF",iso_n3:"710",un_a3:"710",wb_a2:"ZA",wb_a3:"ZAF",woe_id:-99,adm0_a3_is:"ZAF",adm0_a3_us:"ZAF",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Southern Africa",region_wb:"Sub-Saharan Africa",name_len:12,long_len:12,abbrev_len:5,tiny:-99,homepart:1}},{type:"Polygon",id:"ZMB",arcs:[[-457,-452,600,-120,-464,-7,-200,-579]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Zambia",sov_a3:"ZMB",adm0_dif:0,level:2,type:"Sovereign country",admin:"Zambia",adm0_a3:"ZMB",geou_dif:0,geounit:"Zambia",gu_a3:"ZMB",su_dif:0,subunit:"Zambia",su_a3:"ZMB",brk_diff:0,name:"Zambia",name_long:"Zambia",brk_a3:"ZMB",brk_name:"Zambia",brk_group:null,abbrev:"Zambia",postal:"ZM",formal_en:"Republic of Zambia",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Zambia",name_alt:null,mapcolor7:5,mapcolor8:8,mapcolor9:5,mapcolor13:13,pop_est:11862740,gdp_md_est:17500,pop_year:-99,lastcensus:2010,gdp_year:-99,economy:"7. Least developed region",income_grp:"4. Lower middle income",wikipedia:-99,fips_10:null,iso_a2:"ZM",iso_a3:"ZMB",iso_n3:"894",un_a3:"894",wb_a2:"ZM",wb_a3:"ZMB",woe_id:-99,adm0_a3_is:"ZMB",adm0_a3_us:"ZMB",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Eastern Africa",region_wb:"Sub-Saharan Africa",name_len:6,long_len:6,abbrev_len:6,tiny:-99,homepart:1}},{type:"Polygon",id:"ZWE",arcs:[[-599,-121,-601,-451]],properties:{scalerank:1,featurecla:"Admin-0 country",labelrank:3,sovereignt:"Zimbabwe",sov_a3:"ZWE",adm0_dif:0,level:2,type:"Sovereign country",admin:"Zimbabwe",adm0_a3:"ZWE",geou_dif:0,geounit:"Zimbabwe",gu_a3:"ZWE",su_dif:0,subunit:"Zimbabwe",su_a3:"ZWE",brk_diff:0,name:"Zimbabwe",name_long:"Zimbabwe",brk_a3:"ZWE",brk_name:"Zimbabwe",brk_group:null,abbrev:"Zimb.",postal:"ZW",formal_en:"Republic of Zimbabwe",formal_fr:null,note_adm0:null,note_brk:null,name_sort:"Zimbabwe",name_alt:null,mapcolor7:1,mapcolor8:5,mapcolor9:3,mapcolor13:9,pop_est:12619600,gdp_md_est:9323,pop_year:0,lastcensus:2002,gdp_year:0,economy:"5. Emerging region: G20",income_grp:"5. Low income",wikipedia:-99,fips_10:null,iso_a2:"ZW",iso_a3:"ZWE",iso_n3:"716",un_a3:"716",wb_a2:"ZW",wb_a3:"ZWE",woe_id:-99,adm0_a3_is:"ZWE",adm0_a3_us:"ZWE",adm0_a3_un:-99,adm0_a3_wb:-99,continent:"Africa",region_un:"Africa",subregion:"Eastern Africa",region_wb:"Sub-Saharan Africa",name_len:8,long_len:8,abbrev_len:5,tiny:-99,homepart:1}}]}},arcs:[[[6700,7164],[28,-23],[21,8],[6,27],[22,9],[15,18],[6,47],[23,11],[5,21],[13,-15],[8,-2]],[[6847,7265],[16,-1],[20,-12]],[[6883,7252],[9,-7],[20,19],[9,-12],[9,27],[17,-1],[4,9],[3,24],[12,20],[15,-13],[-3,-18],[9,-3],[-3,-50],[11,-19],[10,12],[12,6],[17,27],[19,-5],[29,0]],[[7082,7268],[5,-17]],[[7087,7251],[-16,-6],[-14,-11],[-32,-7],[-30,-13],[-16,-25],[6,-25],[4,-30],[-14,-25],[1,-22],[-8,-22],[-26,2],[11,-39],[-18,-15],[-12,-35],[2,-36],[-11,-16],[-10,5],[-22,-8],[-3,-16],[-20,0],[-16,-34],[-1,-50],[-36,-24],[-19,5],[-6,-13],[-16,7],[-28,-8],[-47,30]],[[6690,6820],[25,53],[-2,38],[-21,10],[-2,38],[-9,47],[12,32],[-12,9],[7,43],[12,74]],[[5664,4412],[3,-18],[-4,-29],[5,-28],[-4,-22],[3,-20],[-58,1],[-2,-188],[19,-49],[18,-37]],[[5644,4022],[-51,-24],[-67,9],[-19,28],[-113,-3],[-4,-4],[-17,27],[-18,2],[-16,-10],[-14,-12]],[[5325,4035],[-2,38],[4,51],[9,55],[2,25],[9,53],[6,24],[16,39],[9,26],[3,44],[-1,34],[-9,21],[-7,36],[-7,35],[2,12],[8,24],[-8,57],[-6,39],[-14,38],[3,11]],[[5342,4697],[11,8],[8,-1],[10,7],[82,-1],[7,-44],[8,-35],[6,-19],[11,-31],[18,5],[9,8],[16,-8],[4,14],[7,35],[17,2],[2,10],[14,1],[-3,-22],[34,1],[1,-37],[5,-23],[-4,-36],[2,-36],[9,-22],[-1,-70],[7,5],[12,-1],[17,8],[13,-3]],[[5338,4715],[-8,45]],[[5330,4760],[12,25],[8,10],[10,-20]],[[5360,4775],[-10,-12],[-4,-16],[-1,-25],[-7,-7]],[[5571,7530],[-3,-20],[4,-25],[11,-15]],[[5583,7470],[0,-15],[-9,-9],[-2,-19],[-13,-29]],[[5559,7398],[-5,5],[0,13],[-15,19],[-3,29],[2,40],[4,18],[-4,10]],[[5538,7532],[-2,18],[12,29],[1,-11],[8,6]],[[5557,7574],[6,-16],[7,-6],[1,-22]],[[6432,6490],[5,3],[1,-16],[22,9],[23,-2],[17,-1],[19,39],[20,38],[18,37]],[[6557,6597],[5,-20]],[[6562,6577],[4,-47]],[[6566,6530],[-14,0],[-3,-39],[5,-8],[-12,-12],[0,-24],[-8,-24],[-1,-24]],[[6533,6399],[-6,-12],[-83,29],[-11,60],[-1,14]],[[3140,1814],[-17,2],[-30,0],[0,132]],[[3093,1948],[11,-27],[14,-45],[36,-35],[39,-15],[-13,-30],[-26,-2],[-14,20]],[[3258,3743],[51,-96],[23,-9],[34,-44],[29,-23],[4,-26],[-28,-90],[28,-16],[32,-9],[22,10],[25,45],[4,52]],[[3482,3537],[14,11],[14,-34],[-1,-47],[-23,-33],[-19,-24],[-31,-57],[-37,-81]],[[3399,3272],[-7,-47],[-7,-61],[0,-58],[-6,-14],[-2,-38]],[[3377,3054],[-2,-31],[35,-50],[-4,-41],[18,-26],[-2,-29],[-26,-75],[-42,-32],[-55,-12],[-31,6],[6,-36],[-6,-44],[5,-30],[-16,-20],[-29,-8],[-26,21],[-11,-15],[4,-59],[18,-18],[16,19],[8,-31],[-26,-18],[-22,-37],[-4,-59],[-7,-32],[-26,0],[-22,-31],[-8,-44],[28,-43],[26,-12],[-9,-53],[-33,-33],[-18,-70],[-25,-23],[-12,-28],[9,-61],[19,-34],[-12,3]],[[3095,1968],[-26,9],[-67,8],[-11,34],[0,45],[-18,-4],[-10,21],[-3,63],[22,26],[9,37],[-4,30],[15,51],[10,78],[-3,35],[12,11],[-3,22],[-13,12],[10,25],[-13,22],[-6,68],[11,12],[-5,72],[7,61],[7,52],[17,22],[-9,58],[0,54],[21,38],[-1,50],[16,57],[0,55],[-7,11],[-13,102],[17,60],[-2,58],[10,53],[18,56],[20,36],[-9,24],[6,19],[-1,98],[30,29],[10,62],[-3,14]],[[3136,3714],[23,54],[36,-15],[16,-42],[11,47],[32,-2],[4,-13]],[[6210,7485],[39,9]],[[6249,7494],[5,-15],[11,-10],[-6,-15],[15,-21],[-8,-18],[12,-16],[13,-10],[0,-41]],[[6291,7348],[-10,-2]],[[6281,7346],[-11,34],[0,10],[-12,-1],[-9,16],[-5,-1]],[[6244,7404],[-11,17],[-21,15],[3,28],[-5,21]],[[3345,329],[-8,-30],[-8,-27],[-59,8],[-62,-3],[-34,20],[0,2],[-16,17],[63,-2],[60,-6],[20,24],[15,21],[29,-24]],[[577,361],[-53,-8],[-36,21],[-17,21],[-1,3],[-18,16],[17,22],[52,-9],[28,-18],[21,-21],[7,-27]],[[3745,447],[35,-26],[12,-36],[3,-25],[1,-30],[-43,-19],[-45,-15],[-52,-14],[-59,-11],[-65,3],[-37,20],[5,24],[59,16],[24,20],[18,26],[12,22],[17,20],[18,25],[14,0],[41,12],[42,-12]],[[1633,715],[36,-9],[33,10],[-16,-20],[-26,-15],[-39,4],[-27,21],[6,20],[33,-11]],[[1512,716],[43,-23],[-17,3],[-36,5],[-38,17],[20,12],[28,-14]],[[2250,808],[31,-8],[30,7],[17,-34],[-22,5],[-34,-2],[-34,2],[-38,-4],[-28,12],[-15,24],[18,11],[35,-8],[40,-5]],[[3098,866],[4,-27],[-5,-23],[-8,-22],[-33,-8],[-31,-12],[-36,1],[14,24],[-33,-9],[-31,-8],[-21,18],[-2,24],[30,23],[20,7],[32,-2],[8,30],[1,22],[0,47],[16,28],[25,9],[15,-22],[6,-22],[12,-26],[10,-26],[7,-26]],[[0,53],[2,-1],[24,35],[50,-19],[3,2],[30,19],[4,0],[3,-1],[40,-25],[35,25],[7,3],[81,11],[27,-14],[13,-7],[41,-20],[79,-15],[63,-18],[107,-14],[80,16],[118,-11],[67,-19],[73,17],[78,17],[6,27],[-110,3],[-89,14],[-24,23],[-74,12],[5,27],[10,24],[10,22],[-5,25],[-46,16],[-22,21],[-43,18],[68,-3],[64,9],[40,-20],[50,18],[45,22],[23,19],[-10,25],[-36,16],[-41,17],[-57,4],[-50,8],[-54,6],[-18,22],[-36,18],[-21,21],[-9,67],[14,-6],[25,-18],[45,6],[44,8],[23,-26],[44,6],[37,13],[35,16],[32,20],[41,5],[-1,22],[-9,22],[8,21],[36,11],[16,-20],[42,12],[32,15],[40,1],[38,6],[37,13],[30,13],[34,13],[22,-4],[19,-4],[41,8],[37,-10],[38,1],[37,8],[37,-6],[41,-6],[39,3],[40,-2],[42,-1],[38,3],[28,17],[34,9],[35,-13],[33,11],[30,21],[18,-19],[9,-21],[18,-19],[29,17],[33,-22],[38,-7],[32,-16],[39,3],[36,11],[41,-3],[38,-8],[38,-10],[15,25],[-18,20],[-14,21],[-36,5],[-15,22],[-6,22],[-10,43],[21,-8],[36,-3],[36,3],[33,-9],[28,-17],[12,-21],[38,-4],[36,9],[38,11],[34,7],[28,-14],[37,5],[24,45],[23,-27],[32,-10],[34,6],[23,-23],[37,-3],[33,-7],[34,-12],[21,22],[11,20],[28,-23],[38,6],[28,-13],[19,-19],[37,5],[29,13],[29,15],[33,8],[39,7],[36,8],[27,13],[16,19],[7,25],[-3,24],[-9,24],[-10,23],[-9,23],[-7,21],[-1,23],[2,23],[13,22],[11,24],[5,23],[-6,26],[-3,23],[14,27],[15,17],[18,22],[19,19],[22,17],[11,25],[15,17],[18,15],[26,3],[18,19],[19,11],[23,7],[20,15],[16,19],[22,7],[16,-15],[-10,-20],[-29,-17],[-11,-13],[-21,9],[-23,-6],[-19,-14],[-20,-15],[-14,-17],[-4,-23],[2,-22],[13,-20],[-19,-14],[-26,-4],[-15,-20],[-17,-19],[-17,-25],[-4,-22],[9,-24],[15,-19],[23,-14],[21,-18],[12,-23],[6,-22],[8,-24],[13,-19],[8,-22],[4,-55],[8,-22],[2,-23],[9,-23],[-4,-31],[-15,-24],[-17,-20],[-37,-8],[-12,-21],[-17,-20],[-42,-22],[-37,-9],[-35,-13],[-37,-13],[-22,-24],[-45,-2],[-49,2],[-44,-4],[-47,0],[9,-24],[42,-10],[31,-16],[18,-21],[-31,-19],[-48,6],[-40,-15],[-2,-24],[-1,-23],[33,-20],[6,-22],[35,-22],[59,-9],[50,-16],[40,-19],[50,-18],[70,-10],[68,-16],[47,-17],[52,-20],[27,-28],[13,-22],[34,21],[46,17],[48,19],[58,15],[49,16],[69,1],[68,-8],[56,-14],[18,26],[39,17],[70,1],[55,13],[52,13],[58,8],[62,10],[43,15],[-20,21],[-12,21],[0,22],[-54,-2],[-57,-10],[-54,0],[-8,22],[4,44],[12,13],[40,14],[47,14],[34,17],[33,18],[25,23],[38,10],[38,8],[19,5],[43,2],[41,8],[34,12],[34,14],[30,14],[39,18],[24,20],[26,17],[9,24],[-30,13],[10,25],[18,18],[29,12],[31,14],[28,18],[22,23],[13,28],[21,16],[33,-3],[13,-20],[34,-2],[1,22],[14,23],[30,-6],[7,-22],[33,-3],[36,10],[35,7],[31,-3],[12,-25],[31,20],[28,10],[31,9],[31,8],[29,14],[31,9],[24,13],[17,20],[20,-15],[29,8],[20,-27],[16,-21],[32,11],[12,24],[28,16],[37,-4],[11,-22],[22,22],[30,7],[33,3],[29,-2],[31,-7],[30,-3],[13,-20],[18,-17],[31,10],[32,3],[32,0],[31,1],[28,8],[29,7],[25,16],[26,11],[28,5],[21,17],[15,32],[16,20],[29,-10],[11,-21],[24,-13],[29,4],[19,-21],[21,-15],[28,14],[10,26],[25,10],[29,20],[27,8],[33,11],[22,13],[22,14],[22,13],[26,-7],[25,21],[18,16],[26,-1],[23,14],[6,21],[23,16],[23,11],[28,10],[25,4],[25,-3],[26,-6],[22,-16],[3,-26],[24,-19],[17,-17],[33,-7],[19,-16],[23,-16],[26,-3],[23,11],[24,24],[26,-12],[27,-7],[26,-7],[27,-5],[28,0],[23,-61],[-1,-15],[-4,-27],[-26,-15],[-22,-22],[4,-23],[31,1],[-4,-23],[-14,-22],[-13,-24],[21,-19],[32,-6],[32,11],[15,23],[10,22],[15,18],[17,18],[7,21],[15,29],[18,5],[31,3],[28,7],[28,9],[14,23],[8,22],[19,22],[27,15],[23,12],[16,19],[15,11],[21,9],[27,-6],[25,6],[28,7],[30,-4],[20,17],[14,39],[11,-16],[13,-28],[23,-12],[27,-4],[26,7],[29,-5],[26,-1],[17,6],[24,-4],[21,-12],[25,8],[30,0],[25,8],[29,-8],[19,19],[14,20],[19,16],[35,44],[18,-8],[21,-16],[18,-21],[36,-36],[27,-1],[25,0],[30,7],[30,8],[23,16],[19,18],[31,2],[21,13],[22,-12],[14,-18],[19,-19],[31,2],[19,-15],[33,-15],[35,-5],[29,4],[21,19],[19,18],[25,5],[25,-8],[29,-6],[26,9],[25,0],[24,-6],[26,-5],[25,10],[30,9],[28,3],[32,0],[25,5],[25,5],[8,29],[1,24],[17,-16],[5,-27],[10,-24],[11,-20],[23,-10],[32,4],[36,1],[25,3],[37,0],[26,1],[36,-2],[31,-5],[20,-18],[-5,-22],[18,-18],[30,-13],[31,-15],[35,-11],[38,-9],[28,-9],[32,-2],[18,20],[24,-16],[21,-19],[25,-13],[34,-6],[32,-7],[13,-23],[32,-14],[21,-21],[31,-9],[32,1],[30,-4],[33,1],[34,-4],[31,-8],[28,-14],[29,-12],[20,-17],[-3,-23],[-15,-21],[-13,-27],[-9,-21],[-14,-24],[-36,-9],[-16,-21],[-36,-13],[-13,-23],[-19,-22],[-20,-18],[-11,-25],[-7,-22],[-3,-26],[0,-22],[16,-23],[6,-22],[13,-21],[52,-8],[11,-26],[-50,-9],[-43,-13],[-52,-2],[-24,-34],[-5,-27],[-12,-22],[-14,-22],[37,-20],[14,-24],[24,-22],[33,-20],[39,-19],[42,-18],[64,-19],[14,-29],[80,-12],[5,-5],[21,-17],[77,15],[63,-19],[-9951,-14]],[[6914,2185],[18,-19],[26,-7],[1,-11],[-7,-27],[-43,-4],[-1,31],[4,25],[2,12]],[[9038,2648],[27,-21],[15,8],[22,12],[16,-4],[2,-70],[-9,-21],[-3,-47],[-10,16],[-19,-41],[-6,3],[-17,2],[-17,50],[-4,39],[-16,52],[1,27],[18,-5]],[[8987,4244],[10,-46],[18,22],[9,-25],[13,-23],[-3,-26],[6,-51],[5,-29],[7,-7],[7,-51],[-3,-30],[9,-40],[31,-31],[19,-28],[19,-26],[-4,-14],[16,-37],[11,-64],[11,13],[11,-26],[7,9],[5,-63],[19,-36],[13,-22],[22,-48],[8,-48],[1,-33],[-2,-37],[13,-50],[-2,-52],[-5,-28],[-7,-52],[1,-34],[-6,-43],[-12,-53],[-21,-29],[-10,-46],[-9,-29],[-8,-51],[-11,-30],[-7,-44],[-4,-41],[2,-18],[-16,-21],[-31,-2],[-26,-24],[-13,-23],[-17,-26],[-23,27],[-17,10],[5,31],[-15,-11],[-25,-43],[-24,16],[-15,9],[-16,4],[-27,17],[-18,37],[-5,45],[-7,30],[-13,24],[-27,7],[9,28],[-7,44],[-13,-41],[-25,-11],[14,33],[5,34],[10,29],[-2,44],[-22,-50],[-18,-21],[-10,-47],[-22,25],[1,31],[-18,43],[-14,22],[5,14],[-36,35],[-19,2],[-27,29],[-50,-6],[-36,-21],[-31,-20],[-27,4],[-29,-30],[-24,-14],[-6,-31],[-10,-24],[-23,-1],[-18,-5],[-24,10],[-20,-6],[-19,-3],[-17,-31],[-8,2],[-14,-16],[-13,-19],[-21,2],[-18,0],[-30,38],[-15,11],[1,34],[14,8],[4,14],[-1,21],[4,41],[-3,35],[-15,60],[-4,33],[1,34],[-11,38],[-1,18],[-12,23],[-4,47],[-16,46],[-4,26],[13,-26],[-10,55],[14,-17],[8,-23],[0,30],[-14,47],[-3,18],[-6,18],[3,34],[6,15],[4,29],[-3,35],[11,42],[2,-45],[12,41],[22,20],[14,25],[21,22],[13,4],[7,-7],[22,22],[17,6],[4,13],[8,6],[15,-2],[29,18],[15,26],[7,31],[17,30],[1,24],[1,32],[19,50],[12,-51],[12,12],[-10,28],[9,29],[12,-13],[3,45],[15,29],[7,23],[14,10],[0,17],[13,-7],[0,15],[12,8],[14,8],[20,-27],[16,-35],[17,0],[18,-6],[-6,33],[13,47],[13,15],[-5,15],[12,34],[17,21],[14,-7],[24,11],[-1,30],[-20,19],[15,9],[18,-15],[15,-24],[23,-15],[8,6],[17,-18],[17,17],[10,-5],[7,11],[12,-29],[-7,-32],[-11,-24],[-9,-2],[3,-23],[-8,-30],[-10,-29],[2,-17],[22,-32],[21,-19],[15,-20],[20,-35],[8,0],[14,-15],[4,-19],[27,-20],[18,20],[6,32],[5,26],[4,33],[8,47],[-4,28],[2,17],[-3,34],[4,45],[5,12],[-4,20],[7,31],[5,32],[1,17],[10,22],[8,-29],[2,-37],[7,-7],[1,-25],[10,-30],[2,-33],[-1,-22]],[[5471,7900],[-2,-24],[-16,0],[6,-13],[-9,-38]],[[5450,7825],[-6,-10],[-24,-1],[-14,-13],[-23,4]],[[5383,7805],[-40,15],[-6,21],[-27,-10],[-4,-12],[-16,9]],[[5290,7828],[-15,1],[-12,11],[4,15],[-1,10]],[[5266,7865],[8,3],[14,-16],[4,16],[25,-3],[20,11],[13,-2],[9,-12],[2,10],[-4,38],[10,8],[10,27]],[[5377,7945],[21,-19],[15,24],[10,5],[22,-18],[13,3],[13,-12]],[[5471,7928],[-3,-7],[3,-21]],[[6281,7346],[-19,8],[-14,27],[-4,23]],[[6349,7527],[15,-31],[14,-42],[13,-2],[8,-16],[-23,-5],[-5,-46],[-4,-21],[-11,-13],[1,-30]],[[6357,7321],[-7,-3],[-17,31],[10,30],[-9,17],[-10,-4],[-33,-44]],[[6249,7494],[6,10],[21,-17],[15,-4],[4,7],[-14,32],[7,9]],[[6288,7531],[8,-2],[19,-36],[13,-4],[4,15],[17,23]],[[5814,4792],[-1,71],[-7,27]],[[5806,4890],[17,-5],[8,34],[15,-4]],[[5846,4915],[1,-23],[6,-14],[1,-19],[-7,-12],[-11,-31],[-10,-22],[-12,-2]],[[5092,8091],[20,-5],[26,12],[17,-25],[16,-14]],[[5171,8059],[-4,-40]],[[5167,8019],[-7,-2],[-3,-33]],[[5157,7984],[-24,26],[-14,-4],[-20,28],[-13,23],[-13,1],[-4,21]],[[5069,8079],[23,12]],[[5074,5427],[-23,-7]],[[5051,5420],[-7,41],[2,136],[-6,12],[-1,29],[-10,21],[-8,17],[3,31]],[[5024,5707],[10,7],[6,26],[13,5],[6,18]],[[5059,5763],[10,17],[10,0],[21,-34]],[[5100,5746],[-1,-19],[6,-35],[-6,-24],[3,-16],[-13,-37],[-9,-18],[-5,-37],[1,-38],[-2,-95]],[[4921,5627],[-19,15],[-13,-2],[-10,-15],[-12,13],[-5,19],[-13,13]],[[4849,5670],[-1,34],[7,26],[-1,20],[23,48],[4,41],[7,14],[14,-8],[11,12],[4,16],[22,26],[5,19],[26,24],[15,9],[7,-12],[18,0]],[[5010,5939],[-2,-28],[3,-27],[16,-39],[1,-28],[32,-14],[-1,-40]],[[5024,5707],[-24,1]],[[5e3,5708],[-13,5],[-9,-9],[-12,4],[-48,-3],[-1,-33],[4,-45]],[[7573,6360],[0,-43],[-10,9],[2,-47]],[[7565,6279],[-8,30],[-1,31],[-6,28],[-11,34],[-26,3],[3,-25],[-9,-32],[-12,12],[-4,-11],[-8,6],[-11,5]],[[7472,6360],[-4,49],[-10,45],[5,35],[-17,16],[6,22],[18,22],[-20,31],[9,40],[22,-26],[14,-3],[2,-41],[26,-8],[26,1],[16,-10],[-13,-50],[-12,-3],[-9,-34],[16,-31],[4,38],[8,0],[14,-93]],[[5629,7671],[8,-25],[11,5],[21,-9],[41,-4],[13,16],[33,13],[20,-21],[17,-6]],[[5793,7640],[-15,-25],[-10,-42],[9,-34]],[[5777,7539],[-24,8],[-28,-18]],[[5725,7529],[0,-30],[-26,-5],[-19,20],[-22,-16],[-21,2]],[[5637,7500],[-2,39],[-14,19]],[[5621,7558],[5,8],[-3,7],[4,19],[11,18],[-14,26],[-2,21],[7,14]],[[2846,6461],[-7,-3],[-7,34],[-10,17],[6,38],[8,-3],[10,-49],[0,-34]],[[2838,6628],[-30,-10],[-2,22],[13,5],[18,-2],[1,-15]],[[2861,6628],[-5,-42],[-5,8],[0,31],[-12,23],[0,7],[22,-27]],[[5527,7708],[10,0],[-7,-26],[14,-23],[-4,-28],[-7,-2]],[[5533,7629],[-5,-6],[-9,-13],[-4,-33]],[[5515,7577],[-25,23],[-10,24],[-11,13],[-12,22],[-6,19],[-14,27],[6,25],[10,-14],[6,12],[13,2],[24,-10],[19,1],[12,-13]],[[5652,8242],[27,0],[30,22],[6,34],[23,19],[-3,26]],[[5735,8343],[17,10],[30,23]],[[5782,8376],[29,-15],[4,-15],[15,7],[27,-14],[3,-27],[-6,-16],[17,-39],[12,-11],[-2,-11],[19,-10],[8,-16],[-11,-13],[-23,2],[-5,-5],[7,-20],[6,-37]],[[5882,8136],[-23,-4],[-9,-13],[-2,-30],[-11,6],[-25,-3],[-7,14],[-11,-10],[-10,8],[-22,1],[-31,15],[-28,4],[-22,-1],[-15,-16],[-13,-2]],[[5653,8105],[-1,26],[-8,27],[17,12],[0,24],[-8,22],[-1,26]],[[2524,6110],[-1,8],[4,3],[5,-7],[10,36],[5,0]],[[2547,6150],[0,-8],[5,-1],[0,-16],[-5,-25],[3,-9],[-3,-21],[2,-6],[-4,-30],[-5,-16],[-5,-1],[-6,-21]],[[2529,5996],[-8,0],[2,67],[1,47]],[[3136,3714],[-20,-8],[-11,82],[-15,66],[9,57],[-15,25],[-4,43],[-13,40]],[[3067,4019],[17,64],[-12,49],[7,20],[-5,22],[10,30],[1,50],[1,41],[6,20],[-24,96]],[[3068,4411],[21,-5],[14,1],[6,18],[25,24],[14,22],[37,10],[-3,-44],[3,-23],[-2,-40],[30,-53],[31,-9],[11,-23],[19,-11],[11,-17],[18,0],[16,-17],[1,-34],[6,-18],[0,-25],[-8,-1],[11,-69],[53,-2],[-4,-35],[3,-23],[15,-16],[6,-37],[-4,-47],[-8,-26],[3,-33],[-9,-12]],[[3384,3866],[-1,18],[-25,30],[-26,1],[-49,-17],[-13,-52],[-1,-32],[-11,-71]],[[3482,3537],[6,34],[3,35],[1,32],[-10,11],[-11,-9],[-10,2],[-4,23],[-2,54],[-5,18],[-19,16],[-11,-12],[-30,11],[2,81],[-8,33]],[[3068,4411],[-15,-11],[-13,7],[2,90],[-23,-35],[-24,2],[-11,31],[-18,4],[5,25],[-15,36],[-11,53],[7,11],[0,25],[17,17],[-3,32],[7,20],[2,28],[32,40],[22,11],[4,9],[25,-2]],[[3058,4804],[13,162],[0,25],[-4,34],[-12,22],[0,42],[15,10],[6,-6],[1,23],[-16,6],[-1,37],[54,-2],[10,21],[7,-19],[6,-35],[5,8]],[[3142,5132],[15,-32],[22,4],[5,18],[21,14],[11,10],[4,25],[19,17],[-1,12],[-24,5],[-3,37],[1,40],[-13,15],[5,6],[21,-8],[22,-15],[8,14],[20,9],[31,23],[10,22],[-3,17]],[[3313,5365],[14,2],[7,-13],[-4,-26],[9,-9],[7,-28],[-8,-20],[-4,-51],[7,-30],[2,-27],[17,-28],[14,-3],[3,12],[8,3],[13,10],[9,16],[15,-5],[7,2]],[[3429,5170],[15,-5],[3,12],[-5,12],[3,17],[11,-5],[13,6],[16,-13]],[[3485,5194],[12,-12],[9,16],[6,-3],[4,-16],[13,4],[11,22],[8,44],[17,54]],[[3565,5303],[9,3],[7,-33],[16,-103],[14,-10],[1,-41],[-21,-48],[9,-18],[49,-9],[1,-60],[21,39],[35,-21],[46,-36],[14,-35],[-5,-32],[33,18],[54,-32],[41,3],[41,-49],[36,-66],[21,-17],[24,-3],[10,-18],[9,-76],[5,-35],[-11,-98],[-14,-39],[-39,-82],[-18,-67],[-21,-51],[-7,-1],[-7,-43],[2,-111],[-8,-91],[-3,-39],[-9,-23],[-5,-79],[-28,-77],[-5,-61],[-22,-26],[-7,-35],[-30,0],[-44,-23],[-19,-26],[-31,-18],[-33,-47],[-23,-58],[-5,-44],[5,-33],[-5,-60],[-6,-28],[-20,-33],[-31,-104],[-24,-47],[-19,-27],[-13,-57],[-18,-33]],[[3517,3063],[-8,33],[13,28],[-16,40],[-22,33],[-29,38],[-10,-2],[-28,46],[-18,-7]],[[8172,5325],[11,22],[23,32]],[[8206,5379],[-1,-29],[-2,-37],[-13,1],[-6,-20],[-12,31]],[[7546,6698],[12,-19],[-2,-36],[-23,-2],[-23,4],[-18,-9],[-25,22],[-1,12]],[[7466,6670],[19,44],[15,15],[20,-14],[14,-1],[12,-16]],[[5817,3752],[-39,-43],[-25,-44],[-10,-40],[-8,-22],[-15,-4],[-5,-29],[-3,-18],[-17,-14],[-23,3],[-13,17],[-12,7],[-14,-14],[-6,-28],[-14,-18],[-13,-26],[-20,-6],[-6,20],[2,36],[-16,56],[-8,9]],[[5552,3594],[0,173],[27,2],[1,210],[21,2],[43,21],[10,-24],[18,23],[9,0],[15,13]],[[5696,4014],[5,-4]],[[5701,4010],[11,-48],[5,-10],[9,-34],[32,-65],[12,-7],[0,-20],[8,-38],[21,-9],[18,-27]],[[5424,5496],[23,4],[5,16],[5,-2],[7,-13],[34,23],[12,23],[15,20],[-3,21],[8,6],[27,-4],[26,27],[20,65],[14,24],[18,10]],[[5635,5716],[3,-26],[16,-36],[0,-25],[-5,-24],[2,-18],[10,-18]],[[5661,5569],[21,-25]],[[5682,5544],[15,-24],[0,-19],[19,-31],[12,-26],[7,-35],[20,-24],[5,-18]],[[5760,5367],[-9,-7],[-18,2],[-21,6],[-10,-5],[-5,-14],[-9,-2],[-10,12],[-31,-29],[-13,6],[-4,-5],[-8,-35],[-21,11],[-20,6],[-18,22],[-23,20],[-15,-19],[-10,-30],[-3,-41]],[[5512,5265],[-18,3],[-19,10],[-16,-32],[-15,-55]],[[5444,5191],[-3,18],[-1,27],[-13,19],[-10,30],[-2,21],[-13,31],[2,18],[-3,25],[2,45],[7,11],[14,60]],[[3231,7808],[20,-8],[26,1],[-14,-24],[-10,-4],[-35,25],[-7,20],[10,18],[10,-28]],[[3283,7958],[-14,-1],[-36,19],[-26,28],[10,5],[37,-15],[28,-25],[1,-11]],[[1569,7923],[-14,-8],[-46,27],[-8,21],[-25,21],[-5,16],[-28,11],[-11,32],[2,14],[30,-13],[17,-9],[26,-6],[9,-21],[14,-28],[28,-24],[11,-33]],[[3440,8052],[-18,-52],[18,20],[19,-12],[-10,-21],[25,-16],[12,14],[28,-18],[-8,-43],[19,10],[4,-32],[8,-36],[-11,-52],[-13,-2],[-18,11],[6,48],[-8,8],[-32,-52],[-17,2],[20,28],[-27,14],[-30,-3],[-54,2],[-4,17],[17,21],[-12,16],[24,36],[28,94],[18,33],[24,21],[13,-3],[-6,-16],[-15,-37]],[[1300,8258],[13,-8],[27,5],[-8,-67],[24,-48],[-11,0],[-17,27],[-10,27],[-14,19],[-5,26],[1,19]],[[2798,8730],[-11,-31],[-12,5],[-8,17],[2,4],[10,18],[12,-1],[7,-12]],[[2725,8762],[-33,-32],[-19,1],[-6,16],[20,27],[38,0],[0,-12]],[[2634,8936],[5,-26],[15,9],[16,-15],[30,-20],[32,-19],[2,-28],[21,5],[20,-20],[-25,-18],[-43,14],[-16,26],[-27,-31],[-40,-31],[-9,35],[-38,-6],[24,30],[4,46],[9,54],[20,-5]],[[2892,9024],[-31,-3],[-7,29],[12,34],[26,8],[21,-17],[1,-25],[-4,-8],[-18,-18]],[[2343,9140],[-17,-21],[-38,18],[-22,-6],[-38,26],[24,19],[19,25],[30,-16],[17,-11],[8,-11],[17,-23]],[[3135,7724],[-18,33],[0,81],[-13,17],[-18,-10],[-10,16],[-21,-45],[-8,-46],[-10,-27],[-12,-9],[-9,-3],[-3,-15],[-51,0],[-42,0],[-12,-11],[-30,-42],[-3,-5],[-9,-23],[-26,0],[-27,0],[-12,-10],[4,-11],[2,-18],[0,-6],[-36,-30],[-29,-9],[-32,-31],[-7,0],[-10,9],[-3,8],[1,6],[6,21],[13,33],[8,35],[-5,51],[-6,53],[-29,28],[3,11],[-4,7],[-8,0],[-5,9],[-2,14],[-5,-6],[-7,2],[1,6],[-6,6],[-3,15],[-21,19],[-23,20],[-27,23],[-26,21],[-25,-17],[-9,0],[-34,15],[-23,-8],[-27,19],[-28,9],[-19,4],[-9,10],[-5,32],[-9,0],[-1,-23],[-57,0],[-95,0],[-94,0],[-84,0],[-83,0],[-82,0],[-85,0],[-27,0],[-83,0],[-78,0]],[[1588,7952],[-4,0],[-54,58],[-20,26],[-50,24],[-15,53],[3,36],[-35,25],[-5,48],[-34,43],[0,30]],[[1374,8295],[15,29],[0,37],[-48,37],[-28,68],[-17,42],[-26,27],[-19,24],[-14,31],[-28,-20],[-27,-33],[-25,39],[-19,26],[-27,16],[-28,2],[0,337],[1,219]],[[1084,9176],[51,-14],[44,-29],[29,-5],[24,24],[34,19],[41,-7],[42,26],[45,14],[20,-24],[20,14],[6,27],[20,-6],[47,-53],[37,40],[3,-45],[34,10],[11,17],[34,-3],[42,-25],[65,-22],[38,-10],[28,4],[37,-30],[-39,-29],[50,-13],[75,7],[24,11],[29,-36],[31,30],[-29,25],[18,20],[34,3],[22,6],[23,-14],[28,-32],[31,5],[49,-27],[43,9],[40,-1],[-3,37],[25,10],[43,-20],[0,-56],[17,47],[23,-1],[12,59],[-30,36],[-32,24],[2,65],[33,43],[37,-9],[28,-26],[38,-67],[-25,-29],[52,-12],[-1,-60],[38,46],[33,-38],[-9,-44],[27,-40],[29,43],[21,51],[1,65],[40,-5],[41,-8],[37,-30],[2,-29],[-21,-31],[20,-32],[-4,-29],[-54,-41],[-39,-9],[-29,18],[-8,-30],[-27,-50],[-8,-26],[-32,-40],[-40,-4],[-22,-25],[-2,-38],[-32,-7],[-34,-48],[-30,-67],[-11,-46],[-1,-69],[40,-10],[13,-55],[13,-45],[39,12],[51,-26],[28,-22],[20,-28],[35,-17],[29,-24],[46,-4],[30,-6],[-4,-51],[8,-59],[21,-66],[41,-56],[21,19],[15,61],[-14,93],[-20,31],[45,28],[31,41],[16,41],[-3,40],[-19,50],[-33,44],[32,62],[-12,54],[-9,92],[19,14],[48,-16],[29,-6],[23,15],[25,-20],[35,-34],[8,-23],[50,-4],[-1,-50],[9,-74],[25,-10],[21,-35],[40,33],[26,65],[19,28],[21,-53],[36,-75],[31,-71],[-11,-37],[37,-33],[25,-34],[44,-15],[18,-19],[11,-50],[22,-8],[11,-22],[2,-67],[-20,-22],[-20,-21],[-46,-21],[-35,-48],[-47,-10],[-59,13],[-42,0],[-29,-4],[-23,-43],[-35,-26],[-40,-78],[-32,-54],[23,9],[45,78],[58,49],[42,6],[24,-29],[-26,-40],[9,-63],[9,-45],[36,-29],[46,8],[28,67],[2,-43],[17,-22],[-34,-38],[-61,-36],[-28,-23],[-31,-43],[-21,4],[-1,50],[48,49],[-44,-2],[-31,-7]],[[1829,9377],[-14,-27],[61,17],[39,-29],[31,30],[26,-20],[23,-58],[14,25],[-20,60],[24,9],[28,-9],[31,-24],[17,-58],[9,-41],[47,-30],[50,-28],[-3,-26],[-46,-4],[18,-23],[-9,-22],[-51,9],[-48,16],[-32,-3],[-52,-20],[-70,-9],[-50,-6],[-15,28],[-38,16],[-24,-6],[-35,47],[19,6],[43,10],[39,-3],[36,11],[-54,13],[-59,-4],[-39,1],[-15,22],[64,23],[-42,-1],[-49,16],[23,44],[20,24],[74,36],[29,-12]],[[2097,9395],[-24,-39],[-44,41],[10,9],[37,2],[21,-13]],[[2879,9376],[3,-16],[-30,2],[-30,1],[-30,-8],[-8,3],[-31,32],[1,21],[14,4],[63,-6],[48,-33]],[[2595,9379],[22,-36],[26,47],[70,24],[48,-61],[-4,-38],[55,17],[26,23],[62,-30],[38,-28],[3,-25],[52,13],[29,-38],[67,-23],[24,-24],[26,-55],[-51,-28],[66,-38],[44,-13],[40,-55],[44,-3],[-9,-42],[-49,-69],[-34,26],[-44,57],[-36,-8],[-3,-34],[29,-34],[38,-27],[11,-16],[18,-58],[-9,-43],[-35,16],[-70,47],[39,-51],[29,-35],[5,-21],[-76,24],[-59,34],[-34,29],[10,17],[-42,30],[-40,29],[0,-18],[-80,-9],[-23,20],[18,44],[52,1],[57,7],[-9,21],[10,30],[36,57],[-8,27],[-11,20],[-42,29],[-57,20],[18,15],[-29,36],[-25,4],[-22,20],[-14,-18],[-51,-7],[-101,13],[-59,17],[-45,9],[-23,21],[29,27],[-39,0],[-9,60],[21,53],[29,24],[72,16],[-21,-39]],[[2212,9420],[33,-12],[50,7],[7,-17],[-26,-28],[42,-26],[-5,-53],[-45,-23],[-27,5],[-19,23],[-69,45],[0,19],[57,-7],[-31,38],[33,29]],[[2411,9357],[-30,-45],[-32,3],[-17,52],[1,29],[14,25],[28,16],[58,-2],[53,-14],[-42,-53],[-33,-11]],[[1654,9275],[-73,-29],[-15,26],[-64,31],[12,25],[19,43],[24,39],[-27,36],[94,10],[39,-13],[71,-3],[27,-17],[30,-25],[-35,-15],[-68,-41],[-34,-42],[0,-25]],[[2399,9487],[-15,-23],[-40,5],[-34,15],[15,27],[40,16],[24,-21],[10,-19]],[[2264,9590],[21,-27],[1,-31],[-13,-44],[-46,-6],[-30,10],[1,34],[-45,-4],[-2,45],[30,-2],[41,21],[40,-4],[2,8]],[[1994,9559],[11,-21],[25,10],[29,-2],[5,-29],[-17,-28],[-94,-10],[-70,-25],[-43,-2],[-3,20],[57,26],[-125,-7],[-39,10],[38,58],[26,17],[78,-20],[50,-35],[48,-5],[-40,57],[26,21],[29,-7],[9,-28]],[[2370,9612],[30,-19],[55,0],[24,-19],[-6,-22],[32,-14],[17,-14],[38,-2],[40,-5],[44,13],[57,5],[45,-5],[30,-22],[6,-24],[-17,-16],[-42,-13],[-35,8],[-80,-10],[-57,-1],[-45,8],[-74,19],[-9,32],[-4,29],[-27,26],[-58,7],[-32,19],[10,24],[58,-4]],[[1772,9645],[-4,-46],[-21,-20],[-26,-3],[-52,-26],[-44,-9],[-38,13],[47,44],[57,39],[43,-1],[38,9]],[[2393,9637],[-13,-2],[-52,4],[-7,17],[56,-1],[19,-11],[-3,-7]],[[1939,9648],[-52,-17],[-41,19],[23,19],[40,6],[39,-10],[-9,-17]],[[1954,9701],[-34,-11],[-46,0],[0,8],[29,18],[14,-3],[37,-12]],[[2338,9669],[-41,-12],[-23,13],[-12,23],[-2,24],[36,-2],[16,-4],[33,-21],[-7,-21]],[[2220,9685],[11,-25],[-45,7],[-46,19],[-62,2],[27,18],[-34,14],[-2,22],[55,-8],[75,-21],[21,-28]],[[2583,9764],[33,-20],[-38,-17],[-51,-45],[-50,-4],[-57,8],[-30,24],[0,21],[22,16],[-50,0],[-31,19],[-18,27],[20,26],[19,18],[28,4],[-12,14],[65,3],[35,-32],[47,-12],[46,-11],[22,-39]],[[3097,9967],[74,-4],[60,-8],[51,-16],[-2,-16],[-67,-25],[-68,-12],[-25,-14],[61,1],[-66,-36],[-45,-17],[-48,-48],[-57,-10],[-18,-12],[-84,-6],[39,-8],[-20,-10],[23,-29],[-26,-21],[-43,-16],[-13,-24],[-39,-17],[4,-14],[48,3],[0,-15],[-74,-35],[-73,16],[-81,-9],[-42,7],[-52,3],[-4,29],[52,13],[-14,43],[17,4],[74,-26],[-38,38],[-45,11],[23,23],[49,14],[8,21],[-39,23],[-12,31],[76,-3],[22,-6],[43,21],[-62,7],[-98,-4],[-49,20],[-23,24],[-32,17],[-6,21],[41,11],[32,2],[55,9],[41,22],[34,-3],[30,-16],[21,32],[37,9],[50,7],[85,2],[14,-6],[81,10],[60,-4],[60,-4]],[[5290,7828],[-3,-24],[-12,-10],[-20,7],[-6,-24],[-14,-2],[-5,10],[-15,-20],[-13,-3],[-12,13]],[[5190,7775],[-10,25],[-13,-9],[0,27],[21,33],[-1,15],[12,-5],[8,10]],[[5207,7871],[24,-1],[5,13],[30,-18]],[[3140,1814],[-10,-24],[-23,-18],[-14,2],[-16,5],[-21,18],[-29,8],[-35,33],[-28,32],[-38,66],[23,-12],[39,-40],[36,-21],[15,27],[9,41],[25,24],[20,-7]],[[3095,1968],[-25,0],[-13,-14],[-25,-22],[-5,-55],[-11,-1],[-32,19],[-32,41],[-34,34],[-9,37],[8,35],[-14,39],[-4,101],[12,57],[30,45],[-43,18],[27,52],[9,98],[31,-21],[15,123],[-19,15],[-9,-73],[-17,8],[9,84],[9,110],[13,40],[-8,58],[-2,66],[11,2],[17,96],[20,94],[11,88],[-6,89],[8,49],[-3,72],[16,73],[5,114],[9,123],[9,132],[-2,96],[-6,84]],[[3045,3974],[14,15],[8,30]],[[8064,6161],[-24,-28],[-23,18],[0,51],[13,26],[31,17],[16,-1],[6,-23],[-12,-26],[-7,-34]],[[8628,7562],[-18,35],[-11,-33],[-43,-26],[4,-31],[-24,2],[-13,19],[-19,-42],[-30,-32],[-23,-38]],[[8451,7416],[-39,-17],[-20,-27],[-30,-17],[15,28],[-6,23],[22,40],[-15,30],[-24,-20],[-32,-41],[-17,-39],[-27,-2],[-14,-28],[15,-40],[22,-10],[1,-26],[22,-17],[31,42],[25,-23],[18,-2],[4,-31],[-39,-16],[-13,-32],[-27,-30],[-14,-41],[30,-33],[11,-58],[17,-54],[18,-45],[0,-44],[-17,-16],[6,-32],[17,-18],[-5,-48],[-7,-47],[-15,-5],[-21,-64],[-22,-78],[-26,-70],[-38,-55],[-39,-50],[-31,-6],[-17,-27],[-10,20],[-15,-30],[-39,-29],[-29,-9],[-10,-63],[-15,-3],[-8,43],[7,22],[-37,19],[-13,-9]],[[8001,6331],[-28,15],[-14,24],[5,34],[-26,11],[-13,22],[-24,-31],[-27,-7],[-22,0],[-15,-14]],[[7837,6385],[-14,-9],[4,-68],[-15,2],[-2,14]],[[7810,6324],[-1,24],[-20,-17],[-12,11],[-21,22],[8,49],[-18,12],[-6,54],[-30,-10],[4,70],[26,50],[1,48],[-1,46],[-12,14],[-9,35],[-16,-5]],[[7703,6727],[-30,9],[9,25],[-13,36],[-20,-24],[-23,14],[-32,-37],[-25,-44],[-23,-8]],[[7466,6670],[-2,47],[-17,-13]],[[7447,6704],[-32,6],[-32,14],[-22,26],[-22,11],[-9,29],[-16,8],[-28,39],[-22,18],[-12,-14]],[[7252,6841],[-38,41],[-28,37],[-7,65],[20,-7],[1,30],[-12,30],[3,48],[-30,69]],[[7161,7154],[-45,24],[-8,46],[-21,27]],[[7082,7268],[-4,34],[1,23],[-17,13],[-9,-6],[-7,55]],[[7046,7387],[8,13],[-4,14],[26,28],[20,12],[29,-8],[11,38],[35,7],[10,23],[44,32],[4,13]],[[7229,7559],[-2,34],[19,15],[-25,103],[55,24],[14,13],[20,106],[55,-20],[15,27],[2,59],[23,6],[21,39]],[[7426,7965],[11,5]],[[7437,7970],[7,-41],[23,-32],[40,-22],[19,-47],[-10,-70],[10,-25],[33,-10],[37,-8],[33,-37],[18,-7],[12,-54],[17,-35],[30,1],[58,-13],[36,8],[28,-9],[41,-36],[34,0],[12,-18],[32,32],[45,20],[42,2],[32,21],[20,32],[20,20],[-5,19],[-9,23],[15,38],[15,-5],[29,-12],[28,31],[42,23],[20,39],[20,17],[40,8],[22,-7],[3,21],[-25,41],[-22,19],[-22,-22],[-27,10],[-16,-8],[-7,24],[20,59],[13,45]],[[8240,8005],[34,-23],[39,38],[-1,26],[26,62],[15,19],[0,33],[-16,14],[23,29],[35,11],[37,2],[41,-18],[25,-22],[17,-59],[10,-26],[10,-36],[10,-58],[49,-19],[32,-42],[12,-55],[42,0],[24,23],[46,17],[-15,-53],[-11,-21],[-9,-65],[-19,-58],[-33,11],[-24,-21],[7,-51],[-4,-69],[-14,-2],[0,-30]],[[4920,5353],[-12,-1],[-20,12],[-18,-1],[-33,-10],[-19,-18],[-27,-21],[-6,1]],[[4785,5315],[2,49],[3,7],[-1,24],[-12,24],[-8,4],[-8,17],[6,26],[-3,28],[1,18]],[[4765,5512],[5,0],[1,25],[-2,12],[3,8],[10,7],[-7,47],[-6,25],[2,20],[5,4]],[[4776,5660],[4,6],[8,-9],[21,-1],[5,18],[5,-1],[8,6],[4,-25],[7,7],[11,9]],[[4921,5627],[7,-84],[-11,-50],[-8,-66],[12,-51],[-1,-23]],[[5363,5191],[-4,4],[-16,-8],[-17,8],[-13,-4]],[[5313,5191],[-45,1]],[[5268,5192],[4,47],[-11,39],[-13,10],[-6,27],[-7,8],[1,16]],[[5236,5339],[7,42],[13,57],[8,1],[17,34],[10,1],[16,-24],[19,20],[2,25],[7,23],[4,30],[15,25],[5,41],[6,13],[4,31],[7,37],[24,46],[1,20],[3,10],[-11,24]],[[5393,5795],[1,19],[8,3]],[[5402,5817],[11,-38],[2,-39],[-1,-39],[15,-54],[-15,1],[-8,-4],[-13,6],[-6,-28],[16,-35],[13,-10],[3,-24],[9,-41],[-4,-16]],[[5444,5191],[-2,-31],[-22,14],[-22,15],[-35,2]],[[5856,5265],[-2,-69],[11,-8],[-9,-21],[-10,-16],[-11,-31],[-6,-27],[-1,-48],[-7,-22],[0,-45]],[[5821,4978],[-8,-16],[-1,-35],[-4,-5],[-2,-32]],[[5814,4792],[5,-55],[-2,-30],[5,-35],[16,-33],[15,-74]],[[5853,4565],[-11,6],[-37,-10],[-7,-7],[-8,-38],[6,-26],[-5,-70],[-3,-59],[7,-11],[19,-23],[8,11],[2,-64],[-21,1],[-11,32],[-10,25],[-22,9],[-6,31],[-17,-19],[-22,8],[-10,27],[-17,6],[-13,-2],[-2,19],[-9,1]],[[5342,4697],[-4,18]],[[5360,4775],[8,-6],[9,23],[15,-1],[2,-17],[11,-10],[16,37],[16,29],[7,19],[-1,48],[12,58],[13,30],[18,29],[3,18],[1,22],[5,21],[-2,33],[4,52],[5,37],[8,32],[2,36]],[[5760,5367],[17,-49],[12,-7],[8,10],[12,-4],[16,12],[6,-25],[25,-39]],[[5330,4760],[-22,62]],[[5308,4822],[21,33],[-11,39],[10,15],[19,7],[2,26],[15,-28],[24,-2],[9,27],[3,40],[-3,46],[-13,35],[12,68],[-7,12],[-21,-5],[-7,31],[2,25]],[[2906,5049],[-12,14],[-14,19],[-7,-9],[-24,8],[-7,25],[-5,-1],[-28,34]],[[2809,5139],[-3,18],[10,5],[-1,29],[6,22],[14,4],[12,37],[10,31],[-10,14],[5,34],[-6,54],[6,16],[-4,50],[-12,31]],[[2836,5484],[4,29],[9,-4],[5,17],[-6,35],[3,9]],[[2851,5570],[14,-2],[21,41],[12,6],[0,20],[5,50],[16,27],[17,1],[3,13],[21,-5],[22,30],[11,13],[14,28],[9,-3],[8,-16],[-6,-20]],[[3018,5753],[-18,-10],[-7,-29],[-10,-17],[-8,-22],[-4,-42],[-8,-35],[15,-4],[3,-27],[6,-13],[3,-24],[-4,-22],[1,-12],[7,-5],[7,-20],[36,5],[16,-7],[19,-51],[11,6],[20,-3],[16,7],[10,-10],[-5,-32],[-6,-20],[-2,-42],[5,-40],[8,-17],[1,-13],[-14,-30],[10,-13],[8,-21],[8,-58]],[[3058,4804],[-14,31],[-8,1],[18,61],[-21,27],[-17,-5],[-10,10],[-15,-15],[-21,7],[-16,62],[-13,15],[-9,28],[-19,28],[-7,-5]],[[2695,5543],[-15,14],[-6,12],[4,10],[-1,13],[-8,14],[-11,12],[-10,8],[-1,17],[-8,10],[2,-17],[-5,-14],[-7,17],[-9,5],[-4,12],[1,18],[3,19],[-8,8],[7,12]],[[2619,5713],[4,7],[18,-15],[7,7],[9,-5],[4,-12],[8,-4],[7,13]],[[2676,5704],[7,-32],[11,-24],[13,-25]],[[2707,5623],[-11,-6],[0,-23],[6,-9],[-4,-7],[1,-11],[-2,-12],[-2,-12]],[[2715,6427],[23,-4],[22,0],[26,-21],[11,-21],[26,6],[10,-13],[24,-37],[17,-27],[9,1],[17,-12],[-2,-17],[20,-2],[21,-24],[-3,-14],[-19,-7],[-18,-3],[-19,4],[-40,-5],[18,32],[-11,16],[-18,4],[-9,17],[-7,33],[-16,-2],[-26,16],[-8,12],[-36,10],[-10,11],[11,15],[-28,3],[-20,-31],[-11,-1],[-4,-14],[-14,-7],[-12,6],[15,18],[6,22],[13,13],[14,11],[21,6],[7,6]],[[5909,7133],[2,1],[4,14],[20,-1],[25,18],[-19,-25],[2,-11]],[[5943,7129],[-3,2],[-5,-5],[-4,1],[-2,-2],[0,6],[-2,4],[-6,0],[-7,-5],[-5,3]],[[5943,7129],[1,-5],[-28,-24],[-14,8],[-7,23],[14,2]],[[5377,7945],[-16,25],[-14,15],[-3,25],[-5,17],[21,13],[10,15],[20,11],[7,11],[7,-6],[13,6]],[[5417,8077],[13,-19],[21,-5],[-2,-17],[15,-12],[4,15],[19,-6],[3,-19],[20,-3],[13,-29]],[[5523,7982],[-8,0],[-4,-11],[-7,-3],[-2,-13],[-5,-3],[-1,-5],[-9,-7],[-12,1],[-4,-13]],[[5275,8306],[1,-23],[28,-14],[-1,-21],[29,11],[15,16],[32,-23],[13,-19]],[[5392,8233],[6,-30],[-8,-16],[11,-21],[6,-31],[-2,-21],[12,-37]],[[5207,7871],[3,42],[14,40],[-40,11],[-13,16]],[[5171,7980],[2,26],[-6,13]],[[5171,8059],[-5,62],[17,0],[7,22],[6,54],[-5,20]],[[5191,8217],[6,13],[23,3],[5,-13],[19,29],[-6,22],[-2,34]],[[5236,8305],[21,-8],[18,9]],[[6196,5808],[7,-19],[-1,-24],[-16,-14],[12,-16]],[[6198,5735],[-10,-32]],[[6188,5703],[-7,11],[-6,-5],[-16,1],[0,18],[-2,17],[9,27],[10,26]],[[6176,5798],[12,-5],[8,15]],[[5352,8343],[-17,-48],[-29,33],[-4,25],[41,19],[9,-29]],[[5236,8305],[-11,32],[-1,61],[5,16],[8,17],[24,4],[10,16],[22,17],[-1,-30],[-8,-20],[4,-16],[15,-9],[-7,-22],[-8,6],[-20,-42],[7,-29]],[[3008,6222],[3,10],[22,0],[16,-15],[8,1],[5,-21],[15,1],[-1,-17],[12,-2],[14,-22],[-10,-24],[-14,13],[-12,-3],[-9,3],[-5,-11],[-11,-3],[-4,14],[-10,-8],[-11,-41],[-7,10],[-1,17]],[[3008,6124],[0,16],[-7,17],[7,10],[2,23],[-2,32]],[[5333,6444],[-95,-112],[-81,-117],[-39,-26]],[[5118,6189],[-31,-6],[0,38],[-13,10],[-17,16],[-7,28],[-94,129],[-93,129]],[[4863,6533],[-105,143]],[[4758,6676],[1,11],[0,4]],[[4759,6691],[0,70],[44,44],[28,9],[23,16],[11,29],[32,24],[1,44],[16,5],[13,22],[36,9],[5,23],[-7,13],[-10,62],[-1,36],[-11,38]],[[4939,7135],[27,32],[30,11],[17,24],[27,18],[47,11],[46,4],[14,-8],[26,23],[30,0],[11,-13],[19,3]],[[5233,7240],[-5,-30],[4,-56],[-6,-49],[-18,-33],[3,-45],[23,-35],[0,-14],[17,-24],[12,-106]],[[5263,6848],[9,-52],[1,-28],[-5,-48],[2,-27],[-3,-32],[2,-37],[-11,-25],[17,-43],[1,-25],[10,-33],[13,11],[22,-28],[12,-37]],[[2769,4856],[15,45],[-6,25],[-11,-27],[-16,26],[5,16],[-4,54],[9,9],[5,37],[11,38],[-2,24],[15,13],[19,23]],[[2906,5049],[4,-45],[-9,-39],[-30,-62],[-33,-23],[-17,-51],[-6,-40],[-15,-24],[-12,29],[-11,7],[-12,-5],[-1,22],[8,14],[-3,24]],[[5969,6800],[-7,-23],[-6,-45],[-8,-31],[-6,-10],[-10,19],[-12,26],[-20,85],[-3,-5],[12,-63],[17,-59],[21,-92],[10,-32],[9,-34],[25,-65],[-6,-10],[1,-39],[33,-53],[4,-12]],[[6023,6357],[-110,0],[-107,0],[-112,0]],[[5694,6357],[0,218],[0,210],[-8,47],[7,37],[-5,25],[10,29]],[[5698,6923],[37,0],[27,-15],[28,-18],[13,-9],[21,19],[11,17],[25,5],[20,-8],[7,-29],[7,19],[22,-14],[22,-3],[13,15]],[[5951,6902],[18,-102]],[[6176,5798],[-10,20],[-11,34],[-12,19],[-8,21],[-24,23],[-19,1],[-7,12],[-16,-14],[-17,27],[-8,-44],[-33,13]],[[6011,5910],[-3,23],[12,87],[3,39],[9,18],[20,10],[14,34]],[[6066,6121],[16,-69],[8,-54],[15,-29],[38,-55],[16,-34],[15,-34],[8,-20],[14,-18]],[[4749,7532],[1,42],[-11,25],[39,43],[34,-11],[37,1],[30,-10],[23,3],[45,-2]],[[4947,7623],[11,-23],[51,-27],[10,13],[31,-27],[32,8]],[[5082,7567],[2,-35],[-26,-39],[-36,-12],[-2,-20],[-18,-33],[-10,-48],[11,-34],[-16,-26],[-6,-39],[-21,-11],[-20,-46],[-35,-1],[-27,1],[-17,-21],[-11,-22],[-13,5],[-11,20],[-8,34],[-26,9]],[[4792,7249],[-2,20],[10,22],[4,16],[-9,17],[7,39],[-11,36],[12,5],[1,27],[5,9],[0,46],[13,16],[-8,30],[-16,2],[-5,-8],[-16,0],[-7,29],[-11,-8],[-10,-15]],[[5675,8472],[3,35],[-10,-8],[-18,21],[-2,34],[35,17],[35,8],[30,-10],[29,2]],[[5777,8571],[4,-10],[-20,-34],[8,-55],[-12,-19]],[[5757,8453],[-22,0],[-24,22],[-13,7],[-23,-10]],[[6188,5703],[-6,-21],[10,-32],[10,-29],[11,-21],[90,-70],[24,0]],[[6327,5530],[-79,-177],[-36,-3],[-25,-41],[-17,-1],[-8,-19]],[[6162,5289],[-19,0],[-11,20],[-26,-25],[-8,-24],[-18,4],[-6,7],[-7,-1],[-9,0],[-35,50],[-19,0],[-10,20],[0,33],[-14,10]],[[5980,5383],[-17,64],[-12,14],[-5,23],[-14,29],[-17,4],[9,34],[15,2],[4,18]],[[5943,5571],[0,53]],[[5943,5624],[8,62],[13,16],[3,24],[12,45],[17,30],[11,58],[4,51]],[[5794,9138],[-4,-42],[42,-39],[-26,-45],[33,-67],[-19,-51],[25,-43],[-11,-39],[41,-40],[-11,-31],[-25,-34],[-60,-75]],[[5779,8632],[-50,-5],[-49,-21],[-45,-13],[-16,32],[-27,20],[6,58],[-14,53],[14,35],[25,37],[63,64],[19,12],[-3,25],[-39,28]],[[5663,8957],[-9,23],[-1,91],[-43,40],[-37,29]],[[5573,9140],[17,16],[30,-32],[37,3],[30,-14],[26,26],[14,44],[43,20],[35,-24],[-11,-41]],[[9954,4033],[9,-17],[-4,-31],[-17,-8],[-16,7],[-2,26],[10,21],[13,-8],[7,10]],[[0,4108],[6,3],[-4,-28],[-2,-4],[9981,-14],[-17,-13],[-4,23],[14,12],[9,3],[-9983,18]],[[3300,1994],[33,36],[24,-15],[16,24],[22,-27],[-8,-21],[-37,-17],[-13,20],[-23,-26],[-14,26]],[[3485,5194],[7,25],[3,27]],[[3495,5246],[4,26],[-10,34]],[[3489,5306],[-3,41],[15,51]],[[3501,5398],[9,-7],[21,-14],[29,-50],[5,-24]],[[5265,7548],[-9,-46],[-13,12],[-6,40],[5,22],[18,22],[5,-50]],[[5157,7984],[6,-6],[8,2]],[[5190,7775],[-2,-17],[9,-22],[-10,-18],[7,-46],[15,-8],[-3,-25]],[[5206,7639],[-25,-34],[-55,16],[-40,-19],[-4,-35]],[[4947,7623],[14,35],[5,118],[-28,62],[-21,30],[-42,23],[-3,43],[36,12],[47,-15],[-9,67],[26,-25],[65,46],[8,48],[24,12]],[[5308,4822],[-29,60],[-18,49],[-17,61],[1,19],[6,19],[7,43],[5,44]],[[5263,5117],[10,4],[40,-1],[0,71]],[[4827,8240],[-21,12],[-17,-1],[6,32],[-6,32]],[[4789,8315],[23,2],[30,-37],[-15,-40]],[[4916,8521],[-30,-63],[29,8],[30,-1],[-7,-48],[-25,-53],[29,-4],[2,-6],[25,-69],[19,-10],[17,-67],[8,-24],[33,-11],[-3,-38],[-14,-17],[11,-30],[-25,-31],[-37,0],[-48,-16],[-13,12],[-18,-28],[-26,7],[-19,-23],[-15,12],[41,62],[25,13],[-1,0],[-43,9],[-8,24],[29,18],[-15,32],[5,39],[42,-6],[4,35],[-19,36],[0,1],[-34,10],[-7,16],[10,27],[-9,16],[-15,-28],[-1,57],[-14,30],[10,61],[21,48],[23,-4],[33,4]],[[6154,7511],[4,26],[-7,40],[-16,22],[-16,6],[-10,19]],[[6109,7624],[4,6],[23,-10],[41,-9],[38,-28],[5,-11],[17,9],[25,-13],[9,-24],[17,-13]],[[6210,7485],[-27,29],[-29,-3]],[[5029,5408],[-44,-35],[-15,-20],[-25,-17],[-25,17]],[[5e3,5708],[-2,-18],[12,-30],[0,-43],[2,-47],[7,-21],[-6,-54],[2,-29],[8,-37],[6,-21]],[[4765,5512],[-8,1],[-5,-24],[-8,1],[-6,12],[2,24],[-11,36],[-8,-7],[-6,-1]],[[4715,5554],[-7,-3],[0,21],[-4,16],[0,17],[-6,25],[-7,21],[-23,0],[-6,-11],[-8,-1],[-4,-13],[-4,-17],[-14,-26]],[[4632,5583],[-13,35],[-10,24],[-8,7],[-6,12],[-4,26],[-4,13],[-8,10]],[[4579,5710],[13,29],[8,-2],[7,10],[6,0],[5,8],[-3,20],[3,6],[1,20]],[[4619,5801],[13,-1],[20,-14],[6,1],[3,7],[15,-5],[4,4]],[[4680,5793],[1,-22],[5,0],[7,8],[5,-2],[7,-15],[12,-5],[8,13],[9,8],[6,8],[6,-1],[6,-13],[3,-17],[12,-24],[-6,-16],[-1,-19],[6,6],[3,-7],[-1,-17],[8,-18]],[[4532,5834],[3,27]],[[4535,5861],[31,1],[6,14],[9,1],[11,-14],[8,-1],[9,10],[6,-17],[-12,-13],[-12,1],[-12,13],[-10,-14],[-5,-1],[-7,-8],[-25,1]],[[4579,5710],[-15,24],[-11,4],[-7,17],[1,9],[-9,13],[-2,12]],[[4536,5789],[15,10],[9,-2],[8,7],[51,-3]],[[5263,5117],[-5,9],[10,66]],[[5658,7167],[15,-20],[22,3],[20,-4],[0,-10],[15,7],[-4,-18],[-40,-5],[1,10],[-34,12],[5,25]],[[5723,7469],[-17,2],[-14,6],[-34,-16],[19,-33],[-14,-10],[-15,0],[-15,31],[-5,-13],[6,-36],[14,-27],[-10,-13],[15,-27],[14,-18],[0,-33],[-25,16],[8,-30],[-18,-7],[11,-52],[-19,-1],[-23,26],[-10,47],[-5,40],[-11,27],[-14,34],[-2,16]],[[5583,7470],[18,6],[11,13],[15,-2],[5,11],[5,2]],[[5725,7529],[13,-16],[-8,-37],[-7,-7]],[[3701,9939],[93,35],[97,-2],[36,21],[98,6],[222,-7],[174,-47],[-52,-23],[-106,-3],[-150,-5],[14,-11],[99,7],[83,-21],[54,18],[23,-21],[-30,-34],[71,22],[135,23],[83,-12],[15,-25],[-113,-42],[-16,-14],[-88,-10],[64,-3],[-32,-43],[-23,-38],[1,-66],[33,-38],[-43,-3],[-46,-19],[52,-31],[6,-50],[-30,-6],[36,-50],[-61,-5],[32,-24],[-9,-20],[-39,-10],[-39,0],[35,-40],[0,-26],[-55,24],[-14,-15],[37,-15],[37,-36],[10,-48],[-49,-11],[-22,22],[-34,34],[10,-40],[-33,-31],[73,-2],[39,-3],[-75,-52],[-75,-46],[-81,-21],[-31,0],[-29,-23],[-38,-62],[-60,-42],[-19,-2],[-37,-15],[-40,-13],[-24,-37],[0,-41],[-15,-39],[-45,-47],[11,-47],[-12,-48],[-14,-58],[-39,-4],[-41,49],[-56,0],[-27,32],[-18,58],[-49,73],[-14,39],[-3,53],[-39,54],[10,44],[-18,21],[27,69],[42,22],[11,25],[6,46],[-32,-21],[-15,-9],[-25,-8],[-34,19],[-2,40],[11,31],[25,1],[57,-15],[-48,37],[-24,20],[-28,-8],[-23,15],[31,55],[-17,22],[-22,41],[-34,62],[-35,23],[0,25],[-74,34],[-59,5],[-74,-3],[-68,-4],[-32,19],[-49,37],[73,19],[56,3],[-119,15],[-62,24],[3,23],[106,28],[101,29],[11,21],[-75,22],[24,23],[97,41],[40,7],[-12,26],[66,16],[86,9],[85,1],[30,-19],[74,33],[66,-22],[39,-5],[58,-19],[-66,32],[4,25]],[[2497,5869],[-14,10],[-17,1],[-13,12],[-15,24]],[[2438,5916],[1,18],[3,13],[-4,12],[13,48],[36,0],[1,20],[-5,4],[-3,12],[-10,14],[-11,20],[13,0],[0,33],[26,0],[26,0]],[[2529,5996],[10,-11],[2,9],[8,-7]],[[2549,5987],[-13,-23],[-13,-16],[-2,-12],[2,-11],[-5,-15]],[[2518,5910],[-7,-4],[2,-7],[-6,-6],[-9,-15],[-1,-9]],[[3340,5552],[18,-22],[17,-38],[1,-31],[10,-1],[15,-29],[11,-21]],[[3412,5410],[-4,-53],[-17,-15],[1,-14],[-5,-31],[13,-42],[9,-1],[3,-33],[17,-51]],[[3313,5365],[-19,45],[7,16],[0,27],[17,10],[7,11],[-10,22],[3,21],[22,35]],[[2574,5825],[-5,18],[-8,5]],[[2561,5848],[2,24],[-4,6],[-6,4],[-12,-7],[-1,8],[-8,10],[-6,12],[-8,5]],[[2549,5987],[3,-3],[6,11],[8,1],[3,-5],[4,3],[13,-6],[13,2],[9,6],[3,7],[9,-3],[6,-4],[8,1],[5,5],[13,-8],[4,-1],[9,-11],[8,-13],[10,-9],[7,-17]],[[2690,5943],[-9,2],[-4,-8],[-10,-8],[-7,0],[-6,-8],[-6,3],[-4,9],[-3,-2],[-4,-14],[-3,1],[0,-12],[-10,-17],[-5,-7],[-3,-7],[-8,12],[-6,-16],[-6,1],[-6,-2],[0,-29],[-4,0],[-3,-14],[-9,-2]],[[5522,7770],[7,-23],[9,-17],[-11,-22]],[[5515,7577],[-3,-10]],[[5512,7567],[-26,22],[-16,21],[-26,18],[-23,43],[6,5],[-13,25],[-1,19],[-17,10],[-9,-26],[-8,20],[0,21],[1,1]],[[5380,7746],[20,-2],[5,9],[9,-9],[11,-1],[0,16],[10,6],[2,24],[23,16]],[[5460,7805],[8,-7],[21,-26],[23,-11],[10,9]],[[3008,6124],[-19,10],[-13,-5],[-17,5],[-13,-11],[-15,18],[3,19],[25,-8],[21,-5],[10,13],[-12,26],[0,23],[-18,9],[7,16],[17,-3],[24,-9]],[[5471,7900],[14,-15],[10,-6],[24,7],[2,12],[11,2],[14,9],[3,-4],[13,8],[6,13],[9,4],[30,-18],[6,6]],[[5613,7918],[15,-16],[2,-16]],[[5630,7886],[-17,-12],[-13,-40],[-17,-40],[-22,-11]],[[5561,7783],[-17,2],[-22,-15]],[[5460,7805],[-6,20],[-4,0]],[[8352,4453],[-11,-2],[-37,42],[26,11],[14,-18],[10,-17],[-2,-16]],[[8471,4532],[2,-11],[1,-18]],[[8474,4503],[-18,-45],[-24,-13],[-3,8],[2,20],[12,36],[28,23]],[[8274,4579],[10,-16],[17,5],[7,-25],[-32,-12],[-19,-8],[-15,1],[10,34],[15,0],[7,21]],[[8413,4579],[-4,-32],[-42,-17],[-37,7],[0,22],[22,12],[18,-18],[18,5],[25,21]],[[8017,4657],[53,-6],[6,25],[51,-29],[10,-38],[42,-11],[34,-35],[-31,-23],[-31,24],[-25,-1],[-29,4],[-26,11],[-32,22],[-21,6],[-11,-7],[-51,24],[-5,25],[-25,5],[19,56],[34,-3],[22,-23],[12,-5],[4,-21]],[[8741,4690],[-14,-40],[-3,45],[5,21],[6,20],[7,-17],[-1,-29]],[[8534,4853],[-11,-19],[-19,10],[-5,26],[28,3],[7,-20]],[[8623,4875],[10,-45],[-23,24],[-23,5],[-16,-4],[-19,2],[6,33],[35,2],[30,-17]],[[8916,4904],[0,-193],[1,-192]],[[8917,4519],[-25,48],[-28,12],[-7,-17],[-35,-1],[12,48],[17,16],[-7,64],[-14,50],[-53,50],[-23,5],[-42,54],[-8,-28],[-11,-5],[-6,21],[0,26],[-21,29],[29,21],[20,-1],[-2,16],[-41,0],[-11,35],[-25,11],[-11,29],[37,14],[14,20],[45,-25],[4,-22],[8,-95],[29,-35],[23,62],[32,36],[25,0],[23,-21],[21,-21],[30,-11]],[[8478,5141],[-22,-58],[-21,-12],[-27,12],[-46,-3],[-24,-8],[-4,-45],[24,-53],[15,27],[52,20],[-2,-27],[-12,9],[-12,-35],[-25,-23],[27,-76],[-5,-20],[25,-68],[-1,-39],[-14,-17],[-11,20],[13,49],[-27,-23],[-7,16],[3,23],[-20,35],[3,57],[-19,-18],[2,-69],[1,-84],[-17,-9],[-12,18],[8,54],[-4,57],[-12,1],[-9,40],[12,39],[4,47],[14,89],[5,24],[24,44],[22,-18],[35,-8],[32,3],[27,43],[5,-14]],[[8574,5124],[-2,-51],[-14,6],[-4,-36],[11,-32],[-8,-7],[-11,38],[-8,75],[6,47],[9,22],[2,-32],[16,-5],[3,-25]],[[8045,5176],[5,-39],[19,-34],[18,12],[18,-4],[16,30],[13,5],[26,-17],[23,13],[14,82],[11,21],[10,67],[32,0],[24,-10]],[[8274,5302],[-16,-53],[20,-56],[-5,-28],[32,-54],[-33,-7],[-10,-40],[2,-54],[-27,-40],[-1,-59],[-10,-91],[-5,21],[-31,-26],[-11,36],[-20,3],[-14,19],[-33,-21],[-10,29],[-18,-4],[-23,7],[-4,79],[-14,17],[-13,50],[-4,52],[3,55],[16,39]],[[7939,4712],[-31,-1],[-24,49],[-35,48],[-12,36],[-21,48],[-14,44],[-21,83],[-24,49],[-9,51],[-10,46],[-25,37],[-14,51],[-21,33],[-29,65],[-3,30],[18,-2],[43,-12],[25,-57],[21,-40],[16,-25],[26,-63],[28,-1],[23,-41],[16,-49],[22,-27],[-12,-49],[16,-20],[10,-2],[5,-41],[10,-33],[20,-5],[14,-37],[-7,-74],[-1,-91]],[[7252,6841],[-17,-27],[-11,-55],[27,-23],[26,-29],[36,-33],[38,-8],[16,-30],[22,-5],[33,-14],[23,1],[4,23],[-4,38],[2,25]],[[7703,6727],[2,-22],[-10,-11],[2,-36],[-19,10],[-36,-41],[0,-33],[-15,-50],[-1,-29],[-13,-48],[-21,13],[-1,-61],[-7,-20],[3,-25],[-14,-14]],[[7472,6360],[-4,-21],[-19,1],[-34,-13],[2,-44],[-15,-35],[-40,-40],[-31,-69],[-21,-38],[-28,-38],[0,-27],[-13,-15],[-26,-21],[-12,-3],[-9,-45],[6,-77],[1,-49],[-11,-56],[0,-101],[-15,-2],[-12,-46],[8,-19],[-25,-17],[-10,-40],[-11,-17],[-26,55],[-13,83],[-11,60],[-9,28],[-15,56],[-7,74],[-5,37],[-25,81],[-12,115],[-8,75],[0,72],[-5,55],[-41,-35],[-19,7],[-36,71],[13,22],[-8,23],[-33,50]],[[6893,6457],[19,40],[61,-1],[-6,51],[-15,30],[-4,46],[-18,26],[31,62],[32,-4],[29,61],[18,60],[27,60],[-1,42],[24,34],[-23,29],[-9,40],[-10,52],[14,25],[42,-14],[31,9],[26,49]],[[4827,8240],[5,-42],[-21,-53],[-49,-35],[-40,9],[23,62],[-15,60],[38,46],[21,28]],[[6497,7255],[25,12],[19,33],[19,-1],[12,11],[20,-6],[31,-30],[22,-6],[31,-53],[21,-2],[3,-49]],[[6690,6820],[14,-31],[11,-36],[27,-26],[1,-52],[13,-10],[2,-27],[-40,-30],[-10,-69]],[[6708,6539],[-53,18],[-30,13],[-31,8],[-12,73],[-13,10],[-22,-11],[-28,-28],[-34,20],[-28,45],[-27,17],[-18,56],[-21,79],[-15,-10],[-17,20],[-11,-24]],[[6348,6825],[-15,32],[0,31],[-9,0],[5,43],[-15,45],[-34,32],[-19,56],[6,46],[14,21],[-2,34],[-18,18],[-18,70]],[[6243,7253],[-15,48],[5,18],[-8,68],[19,17]],[[6357,7321],[9,-43],[26,-13],[20,-29],[39,-10],[44,15],[2,14]],[[6348,6825],[-16,3]],[[6332,6828],[-19,5],[-20,-56]],[[6293,6777],[-52,4],[-78,119],[-41,41],[-34,16]],[[6088,6957],[-11,72]],[[6077,7029],[61,62],[11,71],[-3,43],[16,15],[14,37]],[[6176,7257],[12,9],[32,-8],[10,-15],[13,10]],[[4597,8984],[-7,-39],[31,-40],[-36,-45],[-80,-41],[-24,-10],[-36,8],[-78,19],[28,26],[-61,29],[49,12],[-1,17],[-58,14],[19,38],[42,9],[43,-40],[42,32],[35,-17],[45,32],[47,-4]],[[5992,6990],[-5,-19]],[[5987,6971],[-10,8],[-6,-39],[7,-7],[-7,-8],[-1,-15],[13,8]],[[5983,6918],[0,-23],[-14,-95]],[[5951,6902],[8,19],[-2,4],[8,27],[5,45],[4,15],[1,0]],[[5975,7012],[9,0],[3,11],[7,0]],[[5994,7023],[1,-24],[-4,-9],[1,0]],[[5431,7316],[-10,-46],[4,-19],[-6,-30],[-21,22],[-14,7],[-39,30],[4,30],[32,-6],[28,7],[22,5]],[[5255,7492],[17,-42],[-4,-78],[-13,4],[-11,-20],[-10,16],[-2,71],[-6,34],[15,-3],[14,18]],[[5383,7805],[-3,-29],[7,-25]],[[5387,7751],[-22,8],[-23,-20],[1,-30],[-3,-17],[9,-30],[26,-29],[14,-49],[31,-48],[22,0],[7,-13],[-8,-11],[25,-22],[20,-18],[24,-30],[3,-11],[-5,-22],[-16,28],[-24,10],[-12,-39],[20,-21],[-3,-31],[-11,-4],[-15,-50],[-12,-5],[0,18],[6,32],[6,12],[-11,35],[-8,29],[-12,8],[-8,25],[-18,11],[-12,24],[-21,4],[-21,26],[-26,39],[-19,34],[-8,58],[-14,7],[-23,20],[-12,-8],[-16,-28],[-12,-4]],[[2845,6150],[19,-5],[14,-15],[5,-16],[-19,-1],[-9,-10],[-15,10],[-16,21],[3,14],[12,4],[6,-2]],[[5992,6990],[31,-24],[54,63]],[[6088,6957],[-5,-8],[-56,-30],[28,-59],[-9,-10],[-5,-20],[-21,-8],[-7,-21],[-12,-19],[-31,10]],[[5970,6792],[-1,8]],[[5983,6918],[4,17],[0,36]],[[8739,7075],[4,-20],[-16,-36],[-11,19],[-15,-14],[-7,-34],[-18,16],[0,28],[15,36],[16,-7],[12,25],[20,-13]],[[8915,7252],[-10,-47],[4,-30],[-14,-42],[-35,-27],[-49,-4],[-40,-67],[-19,22],[-1,44],[-48,-13],[-33,-27],[-32,-2],[28,-43],[-19,-101],[-18,-24],[-13,23],[7,53],[-18,17],[-11,41],[26,18],[15,37],[28,30],[20,41],[55,17],[30,-12],[29,105],[19,-28],[40,59],[16,23],[18,72],[-5,67],[11,37],[30,11],[15,-82],[-1,-48],[-25,-59],[0,-61]],[[8997,7667],[19,-12],[20,25],[6,-67],[-41,-16],[-25,-59],[-43,41],[-15,-65],[-31,-1],[-4,59],[14,46],[29,3],[8,82],[9,46],[32,-62],[22,-20]],[[6970,7554],[-15,-10],[-37,-42],[-12,-42],[-11,0],[-7,28],[-36,2],[-5,48],[-14,0],[2,60],[-33,43],[-48,-5],[-32,-8],[-27,53],[-22,22],[-43,43],[-6,5],[-71,-35],[1,-218]],[[6554,7498],[-14,-3],[-20,46],[-18,17],[-32,-12],[-12,-20]],[[6458,7526],[-2,14],[7,25],[-5,21],[-32,20],[-13,53],[-15,15],[-1,19],[27,-6],[1,44],[23,9],[25,-9],[5,58],[-5,36],[-28,-2],[-24,14],[-32,-26],[-26,-12]],[[6363,7799],[-14,9],[3,31],[-18,39],[-20,-2],[-24,40],[16,45],[-8,12],[22,65],[29,-34],[3,43],[58,64],[43,2],[61,-41],[33,-24],[30,25],[44,1],[35,-30],[8,17],[39,-2],[7,28],[-45,40],[27,29],[-5,16],[26,15],[-20,41],[13,20],[104,21],[13,14],[70,22],[25,24],[50,-12],[9,-61],[29,14],[35,-20],[-2,-32],[27,3],[69,56],[-10,-19],[35,-46],[62,-150],[15,31],[39,-34],[39,16],[16,-11],[13,-34],[20,-12],[11,-25],[36,8],[15,-36]],[[7229,7559],[-17,9],[-14,21],[-42,6],[-46,2],[-10,-6],[-39,24],[-16,-12],[-4,-35],[-46,21],[-18,-9],[-7,-26]],[[6155,4958],[-20,-24],[-7,-24],[-10,-4],[-4,-42],[-9,-24],[-5,-39],[-12,-20]],[[6088,4781],[-40,59],[-1,35],[-101,120],[-5,6]],[[5941,5001],[0,63],[8,24],[14,39],[10,43],[-13,68],[-3,30],[-13,41]],[[5944,5309],[17,35],[19,39]],[[6162,5289],[-24,-67],[0,-215],[17,-49]],[[7046,7387],[-53,-9],[-34,19],[-30,-4],[3,34],[30,-10],[10,18]],[[6972,7435],[21,-6],[36,43],[-33,31],[-20,-15],[-21,22],[24,39],[-9,5]],[[7849,5777],[-7,72],[18,49],[36,11],[26,-8]],[[7922,5901],[23,-23],[12,40],[25,-21]],[[7982,5897],[6,-40],[-3,-71],[-47,-45],[13,-36],[-30,-4],[-24,-24]],[[7897,5677],[-23,9],[-11,30],[-14,61]],[[8564,7339],[24,-70],[7,-38],[0,-68],[-10,-33],[-25,-11],[-22,-25],[-25,-5],[-3,32],[5,45],[-13,61],[21,10],[-19,51]],[[8504,7288],[2,5],[12,-2],[11,27],[20,2],[11,4],[4,15]],[[5557,7574],[5,13]],[[5562,7587],[7,4],[4,20],[5,3],[4,-8],[5,-4],[3,-10],[5,-2],[5,-11],[4,0],[-3,-14],[-3,-7],[1,-5]],[[5599,7553],[-6,-2],[-17,-9],[-1,-12],[-4,0]],[[6332,6828],[6,-26],[-3,-13],[9,-45]],[[6344,6744],[-19,-1],[-7,28],[-25,6]],[[7922,5901],[9,26],[1,50],[-22,52],[-2,58],[-21,48],[-21,4],[-6,-20],[-16,-2],[-8,10],[-30,-35],[0,53],[7,62],[-19,3],[-2,36],[-12,18]],[[7780,6264],[6,21],[24,39]],[[7837,6385],[17,-47],[12,-54],[34,0],[11,-52],[-18,-15],[-8,-21],[34,-36],[23,-70],[17,-52],[21,-41],[7,-41],[-5,-59]],[[5975,7012],[10,49],[14,41],[0,2]],[[5999,7104],[13,-3],[4,-23],[-15,-22],[-7,-33]],[[4785,5315],[-7,0],[-29,28],[-25,45],[-24,32],[-18,38]],[[4682,5458],[6,19],[2,17],[12,33],[13,27]],[[5412,6408],[-20,-22],[-15,33],[-44,25]],[[5263,6848],[13,14],[3,25],[-3,24],[19,23],[8,19],[14,17],[2,45]],[[5319,7015],[32,-20],[12,5],[23,-10],[37,-26],[13,-53],[25,-11],[39,-25],[30,-29],[13,15],[13,27],[-6,45],[9,29],[20,28],[19,8],[37,-12],[10,-27],[10,0],[9,-10],[28,-7],[6,-19]],[[5694,6357],[0,-118],[-32,0],[0,-25]],[[5662,6214],[-111,113],[-111,113],[-28,-32]],[[7271,5502],[-4,-62],[-12,-16],[-24,-14],[-13,47],[-5,85],[13,96],[19,-33],[13,-42],[13,-61]],[[5804,3347],[10,-18],[-9,-29],[-4,-19],[-16,-9],[-5,-19],[-10,-6],[-21,46],[15,37],[15,23],[13,12],[12,-18]],[[5631,8267],[-2,15],[3,16],[-13,10],[-29,10]],[[5590,8318],[-6,50]],[[5584,8368],[32,18],[47,-4],[27,6],[4,-12],[15,-4],[26,-29]],[[5652,8242],[-7,19],[-14,6]],[[5584,8368],[1,44],[14,37],[26,20],[22,-44],[22,1],[6,46]],[[5757,8453],[14,-14],[2,-28],[9,-35]],[[4759,6691],[-4,0],[0,-31],[-17,-2],[-9,-14],[-13,0],[-10,8],[-23,-6],[-9,-46],[-9,-5],[-13,-74],[-38,-64],[-9,-81],[-12,-27],[-3,-21],[-63,-5]],[[4527,6323],[1,27],[11,17],[9,30],[-2,20],[10,42],[15,38],[9,9],[8,35],[0,31],[10,37],[19,21],[18,60],[0,1],[14,23],[26,6],[22,41],[14,16],[23,49],[-7,73],[10,51],[4,31],[18,40],[28,27],[21,25],[18,61],[9,36],[20,0],[17,-25],[26,4],[29,-13],[12,-1]],[[5739,7906],[6,9],[19,6],[20,-19],[12,-2],[12,-16],[-2,-20],[11,-9],[4,-25],[9,-15],[-2,-9],[5,-6],[-7,-4],[-16,1],[-3,9],[-6,-5],[2,-11],[-7,-19],[-5,-20],[-7,-6]],[[5784,7745],[-5,27],[3,25],[-1,26],[-16,35],[-9,25],[-9,17],[-8,6]],[[6376,4321],[7,-25],[7,-39],[4,-71],[7,-28],[-2,-28],[-5,-18],[-10,35],[-5,-18],[5,-43],[-2,-25],[-8,-14],[-1,-50],[-11,-69],[-14,-81],[-17,-112],[-11,-82],[-12,-69],[-23,-14],[-24,-25],[-16,15],[-22,21],[-8,31],[-2,53],[-10,47],[-2,42],[5,43],[13,10],[0,20],[13,45],[2,37],[-6,28],[-5,38],[-2,54],[9,33],[4,38],[14,2],[15,12],[11,10],[12,1],[16,34],[23,36],[8,30],[-4,25],[12,-7],[15,41],[1,36],[9,26],[10,-25]],[[2301,6586],[-10,-52],[-5,-43],[-2,-79],[-3,-29],[5,-32],[9,-29],[5,-45],[19,-44],[6,-34],[11,-29],[29,-16],[12,-25],[24,17],[21,6],[21,11],[18,10],[17,24],[7,34],[2,50],[5,17],[19,16],[29,13],[25,-2],[17,5],[6,-12],[-1,-29],[-15,-35],[-6,-36],[5,-10],[-4,-26],[-7,-46],[-7,15],[-6,-1]],[[2438,5916],[-32,64],[-14,19],[-23,16],[-15,-5],[-22,-22],[-14,-6],[-20,16],[-21,11],[-26,27],[-21,8],[-31,28],[-23,28],[-7,16],[-16,3],[-28,19],[-12,27],[-30,34],[-14,37],[-6,29],[9,5],[-3,17],[7,16],[0,20],[-10,27],[-2,23],[-9,30],[-25,59],[-28,46],[-13,37],[-24,24],[-5,14],[4,37],[-14,13],[-17,29],[-7,41],[-14,5],[-17,31],[-13,29],[-1,19],[-15,44],[-10,45],[1,23],[-20,23],[-10,-2],[-15,16],[-5,-24],[5,-28],[2,-45],[10,-24],[21,-41],[4,-14],[4,-4],[4,-20],[5,1],[6,-38],[8,-15],[6,-21],[17,-30],[10,-55],[8,-26],[8,-28],[1,-31],[13,-2],[12,-27],[10,-26],[-1,-11],[-12,-21],[-5,0],[-7,36],[-18,33],[-20,29],[-14,15],[1,43],[-5,32],[-13,19],[-19,26],[-4,-8],[-7,16],[-17,14],[-16,34],[2,5],[11,-4],[11,22],[1,27],[-22,42],[-16,17],[-10,36],[-11,39],[-12,47],[-12,54]],[[1746,6980],[32,4],[35,7],[-2,-12],[41,-29],[64,-41],[55,0],[22,0],[0,24],[48,0],[10,-20],[15,-19],[16,-26],[9,-31],[7,-32],[15,-18],[23,-18],[17,47],[23,1],[19,-24],[14,-40],[10,-35],[16,-34],[6,-41],[8,-28],[22,-18],[20,-13],[10,2]],[[5599,7553],[9,4],[13,1]],[[4661,5921],[10,11],[4,35],[9,1],[20,-16],[15,11],[11,-4],[4,13],[112,1],[6,42],[-5,7],[-13,255],[-14,255],[43,1]],[[5118,6189],[0,-136],[-15,-39],[-2,-37],[-25,-9],[-38,-5],[-10,-21],[-18,-3]],[[4680,5793],[1,18],[-2,23],[-11,16],[-5,34],[-2,37]],[[7737,5644],[-3,44],[9,45],[-10,35],[3,65],[-12,30],[-9,71],[-5,75],[-12,49],[-18,-30],[-32,-42],[-15,5],[-17,14],[9,73],[-6,56],[-21,68],[3,21],[-16,7],[-20,49]],[[7780,6264],[-16,-14],[-16,-26],[-20,-2],[-12,-64],[-12,-11],[14,-52],[17,-43],[12,-39],[-11,-51],[-9,-11],[6,-30],[19,-47],[3,-33],[0,-27],[11,-54],[-16,-55],[-13,-61]],[[5538,7532],[-6,4],[-8,19],[-12,12]],[[5533,7629],[8,-10],[4,-9],[9,-6],[10,-12],[-2,-5]],[[7437,7970],[29,10],[53,51],[42,28],[24,-18],[29,-1],[19,-28],[28,-2],[40,-15],[27,41],[-11,35],[28,61],[31,-24],[26,-7],[32,-15],[6,-44],[39,-25],[26,11],[36,7],[27,-7],[28,-29],[16,-30],[26,1],[35,-10],[26,15],[36,9],[41,42],[17,-6],[14,-20],[33,5]],[[5959,4377],[21,5],[34,-17],[7,8],[19,1],[10,18],[17,-1],[30,23],[22,34]],[[6119,4448],[5,-26],[-1,-59],[3,-52],[1,-92],[5,-29],[-8,-43],[-11,-41],[-18,-36],[-25,-23],[-31,-28],[-32,-64],[-10,-11],[-20,-42],[-11,-13],[-3,-42],[14,-45],[5,-35],[0,-17],[5,3],[-1,-58],[-4,-28],[6,-10],[-4,-25],[-11,-21],[-23,-20],[-34,-32],[-12,-21],[3,-25],[7,-4],[-3,-31]],[[5911,3478],[-21,0]],[[5890,3478],[-2,26],[-4,27]],[[5884,3531],[-3,21],[5,66],[-7,42],[-13,83]],[[5866,3743],[29,67],[7,43],[5,5],[3,35],[-5,17],[1,44],[6,41],[0,75],[-15,19],[-13,4],[-6,15],[-13,12],[-23,-1],[-2,22]],[[5840,4141],[-2,42],[84,49]],[[5922,4232],[16,-28],[8,5],[11,-15],[1,-23],[-6,-28],[2,-42],[19,-36],[8,41],[12,12],[-2,76],[-12,43],[-10,19],[-10,-1],[-7,77],[7,45]],[[4661,5921],[-18,41],[-17,43],[-18,16],[-13,17],[-16,-1],[-13,-12],[-14,5],[-10,-19]],[[4542,6011],[-2,32],[8,29],[3,55],[-3,59],[-3,29],[2,30],[-7,28],[-14,25]],[[4526,6298],[6,20],[108,-1],[-5,86],[7,30],[26,5],[-1,152],[91,-4],[0,90]],[[5922,4232],[-15,15],[9,55],[9,21],[-6,49],[6,48],[5,16],[-7,50],[-14,26]],[[5909,4512],[28,-11],[5,-16],[10,-28],[7,-80]],[[7836,5425],[7,-5],[16,-36],[12,-40],[2,-39],[-3,-27],[2,-21],[2,-35],[10,-16],[11,-52],[-1,-20],[-19,-4],[-27,44],[-32,47],[-4,30],[-16,39],[-4,49],[-10,32],[4,43],[-7,25]],[[7779,5439],[5,11],[23,-26],[2,-30],[18,7],[9,24]],[[8045,5176],[21,-20],[21,11],[6,50],[12,11],[33,13],[20,47],[14,37]],[[8206,5379],[22,41],[14,47],[11,0],[14,-30],[1,-26],[19,-16],[23,-18],[-2,-23],[-19,-3],[5,-29],[-20,-20]],[[5453,3369],[-20,45],[-11,43],[-6,58],[-7,42],[-9,91],[-1,71],[-3,32],[-11,25],[-15,48],[-14,71],[-6,37],[-23,58],[-2,45]],[[5644,4022],[23,14],[18,-4],[11,-13],[0,-5]],[[5552,3594],[0,-218],[-25,-30],[-15,-4],[-17,11],[-13,4],[-4,25],[-11,17],[-14,-30]],[[9604,3812],[23,-36],[14,-28],[-10,-14],[-16,16],[-19,27],[-18,31],[-19,42],[-4,20],[12,-1],[16,-20],[12,-20],[9,-17]],[[5412,6408],[7,-92],[10,-15],[1,-19],[11,-20],[-6,-25],[-11,-120],[-1,-77],[-35,-56],[-12,-78],[11,-22],[0,-38],[18,-1],[-3,-28]],[[5393,5795],[-5,-1],[-19,64],[-6,3],[-22,-33],[-21,17],[-15,3],[-8,-8],[-17,2],[-16,-25],[-14,-2],[-34,31],[-13,-15],[-14,1],[-10,23],[-28,22],[-30,-7],[-7,-13],[-4,-34],[-8,-24],[-2,-53]],[[5236,5339],[-29,-21],[-11,3],[-10,-13],[-23,1],[-15,37],[-9,43],[-19,39],[-21,-1],[-25,0]],[[2619,5713],[-10,18],[-13,24],[-6,20],[-12,19],[-13,26],[3,9],[4,-9],[2,5]],[[2690,5943],[-2,-5],[-2,-13],[3,-22],[-6,-20],[-3,-24],[-1,-26],[1,-15],[1,-27],[-4,-6],[-3,-25],[2,-15],[-6,-16],[2,-16],[4,-9]],[[5092,8091],[14,16],[24,87],[38,25],[23,-2]],[[5863,9167],[-47,-24],[-22,-5]],[[5573,9140],[-17,-2],[-4,-39],[-53,9],[-7,-33],[-27,1],[-18,-42],[-28,-66],[-43,-83],[10,-20],[-10,-24],[-27,1],[-18,-55],[2,-79],[17,-29],[-9,-70],[-23,-40],[-12,-34]],[[5306,8535],[-19,36],[-55,-69],[-37,-13],[-38,30],[-10,63],[-9,137],[26,38],[73,49],[55,61],[51,82],[66,115],[47,44],[76,74],[61,26],[46,-3],[42,49],[51,-3],[50,12],[87,-43],[-36,-16],[30,-37]],[[5686,9657],[-62,-24],[-49,13],[19,16],[-16,19],[57,11],[11,-22],[40,-13]],[[5506,9766],[92,-44],[-70,-23],[-15,-44],[-25,-11],[-13,-49],[-34,-2],[-59,36],[25,21],[-42,17],[-54,50],[-21,46],[75,21],[16,-20],[39,0],[11,21],[40,2],[35,-21]],[[5706,9808],[55,-21],[-41,-32],[-81,-7],[-82,10],[-5,16],[-40,1],[-30,27],[86,17],[40,-14],[28,17],[70,-14]],[[9805,2640],[6,-24],[20,24],[8,-25],[0,-25],[-10,-27],[-18,-44],[-14,-24],[10,-28],[-22,-1],[-23,-22],[-8,-39],[-16,-60],[-21,-26],[-14,-17],[-26,1],[-18,20],[-30,4],[-5,22],[15,43],[35,59],[18,11],[20,22],[24,31],[16,31],[13,44],[10,15],[5,33],[19,27],[6,-25]],[[9849,2922],[20,-63],[1,41],[13,-16],[4,-45],[22,-19],[19,-5],[16,22],[14,-6],[-7,-53],[-8,-34],[-22,1],[-7,-18],[3,-25],[-4,-11],[-11,-32],[-14,-41],[-21,-23],[-5,15],[-12,9],[16,48],[-9,33],[-30,23],[1,22],[20,20],[5,46],[-1,38],[-12,40],[1,10],[-13,25],[-22,52],[-12,42],[11,4],[15,-33],[21,-15],[8,-52]],[[6475,6041],[-9,41],[-22,98]],[[6444,6180],[83,59],[19,118],[-13,42]],[[6566,6530],[12,-40],[16,-22],[20,-8],[17,-10],[12,-34],[8,-20],[10,-7],[0,-13],[-10,-36],[-5,-16],[-12,-19],[-10,-41],[-13,3],[-5,-14],[-5,-30],[4,-39],[-3,-7],[-13,0],[-17,-22],[-3,-29],[-6,-12],[-18,0],[-10,-15],[0,-24],[-14,-16],[-15,5],[-19,-19],[-12,-4]],[[6557,6597],[8,20],[3,-5],[-2,-25],[-4,-10]],[[6893,6457],[-20,15],[-9,43],[-21,45],[-51,-12],[-45,-1],[-39,-8]],[[2836,5484],[-9,17],[-6,32],[7,16],[-7,4],[-5,20],[-14,16],[-12,-4],[-6,-20],[-11,-15],[-6,-2],[-3,-13],[13,-32],[-7,-7],[-4,-9],[-13,-3],[-5,35],[-4,-10],[-9,4],[-5,24],[-12,3],[-7,7],[-12,0],[-1,-13],[-3,9]],[[2707,5623],[10,-22],[-1,-12],[11,-3],[3,5],[8,-14],[13,4],[12,15],[17,12],[9,17],[16,-3],[-1,-6],[15,-2],[12,-10],[10,-18],[10,-16]],[[3045,3974],[-28,33],[-2,25],[-55,59],[-50,65],[-22,36],[-11,49],[4,17],[-23,77],[-28,109],[-26,118],[-11,27],[-9,43],[-21,39],[-20,24],[9,26],[-14,57],[9,41],[22,37]],[[8510,5555],[2,-40],[2,-33],[-9,-54],[-11,60],[-13,-30],[9,-43],[-8,-28],[-32,35],[-8,42],[8,28],[-17,28],[-9,-24],[-13,2],[-21,-33],[-4,17],[11,50],[17,17],[15,22],[10,-27],[21,17],[5,26],[19,1],[-1,46],[22,-28],[3,-30],[2,-21]],[[8443,5665],[-10,-20],[-9,-37],[-8,-17],[-17,40],[5,16],[7,17],[3,36],[16,4],[-5,-40],[21,57],[-3,-56]],[[8291,5608],[-37,-56],[14,41],[20,37],[16,41],[15,58],[5,-48],[-18,-33],[-15,-40]],[[8385,5760],[16,-18],[18,0],[0,-25],[-13,-25],[-18,-18],[-1,28],[2,30],[-4,28]],[[8485,5776],[8,-66],[-21,16],[0,-20],[7,-37],[-13,-13],[-1,42],[-9,3],[-4,36],[16,-5],[0,22],[-17,45],[27,-1],[7,-22]],[[8375,5830],[-7,-51],[-12,29],[-15,45],[24,-2],[10,-21]],[[8369,6151],[17,-17],[9,15],[2,-15],[-4,-24],[9,-43],[-7,-49],[-16,-19],[-5,-48],[7,-47],[14,-7],[13,7],[34,-32],[-2,-32],[9,-15],[-3,-27],[-22,29],[-10,31],[-7,-22],[-18,36],[-25,-9],[-14,13],[1,25],[9,15],[-8,13],[-4,-21],[-14,34],[-4,26],[-1,56],[11,-19],[3,92],[9,54],[17,0]],[[9329,4655],[-8,-6],[-12,22],[-12,38],[-6,45],[4,6],[3,-18],[8,-13],[14,-38],[13,-20],[-4,-16]],[[9221,4734],[-15,-5],[-4,-17],[-15,-14],[-15,-14],[-14,0],[-23,18],[-16,16],[2,18],[25,-8],[15,4],[5,29],[4,1],[2,-31],[16,4],[8,20],[16,21],[-4,35],[17,1],[6,-9],[-1,-33],[-9,-36]],[[8916,4904],[48,-41],[51,-34],[19,-30],[16,-30],[4,-34],[46,-37],[7,-31],[-25,-7],[6,-39],[25,-39],[18,-62],[15,2],[-1,-27],[22,-10],[-9,-11],[30,-25],[-3,-17],[-18,-4],[-7,16],[-24,6],[-28,9],[-22,38],[-16,32],[-14,52],[-36,26],[-24,-17],[-17,-20],[4,-43],[-22,-20],[-16,9],[-28,3]],[[9253,4792],[-9,-16],[-5,35],[-6,23],[-13,19],[-16,25],[-20,18],[8,14],[15,-17],[9,-13],[12,-14],[11,-25],[11,-19],[3,-30]],[[5392,8233],[19,18],[43,27],[35,20],[28,-10],[2,-14],[27,-1]],[[5546,8273],[34,-7],[51,1]],[[5653,8105],[14,-52],[-3,-17],[-14,-6],[-25,-50],[7,-26],[-6,3]],[[5626,7957],[-26,23],[-20,-8],[-13,6],[-17,-13],[-14,21],[-11,-8],[-2,4]],[[3159,6151],[14,-5],[5,-12],[-7,-15],[-21,1],[-17,-2],[-1,25],[4,9],[23,-1]],[[8628,7562],[4,-10]],[[8632,7552],[-11,3],[-12,-20],[-8,-20],[1,-42],[-14,-13],[-5,-11],[-11,-17],[-18,-10],[-12,-16],[-1,-25],[-3,-7],[11,-9],[15,-26]],[[8504,7288],[-13,11],[-4,-11],[-8,-5],[-1,11],[-7,5],[-8,10],[8,26],[7,7],[-3,11],[7,31],[-2,10],[-16,7],[-13,15]],[[4792,7249],[-11,-15],[-14,8],[-15,-6],[5,46],[-3,36],[-12,6],[-7,22],[2,39],[11,21],[2,24],[6,36],[-1,25],[-5,21],[-1,20]],[[6411,6520],[-2,43],[7,31],[8,6],[8,-18],[1,-35],[-6,-35]],[[6427,6512],[-8,-4],[-8,12]],[[5630,7886],[12,13],[17,-7],[18,0],[13,-14],[10,9],[20,5],[7,14],[12,0]],[[5784,7745],[12,-11],[13,9],[13,-10]],[[5822,7733],[0,-15],[-13,-13],[-9,6],[-7,-71]],[[5629,7671],[-5,10],[6,10],[-7,7],[-8,-13],[-17,17],[-2,25],[-17,14],[-3,18],[-15,24]],[[8989,8056],[28,-105],[-41,19],[-17,-85],[27,-61],[-1,-41],[-21,36],[-18,-46],[-5,50],[3,57],[-3,64],[6,45],[2,79],[-17,58],[3,80],[25,28],[-11,27],[13,8],[7,-39],[10,-57],[-1,-58],[11,-59]],[[5546,8273],[6,26],[38,19]],[[5e3,544547],[-4932,-535460],[73,-59],[-3,-37],[19,-15],[-6,43],[75,-8],[55,-56],[-28,-26],[-46,-6],[0,-57],[-11,-13],[-26,2],[-22,21],[-36,17],[-7,26],[-28,9],[-31,-7],[-16,20],[6,22],[-33,-14],[13,-28],[-16,-25],[5e3,535651]],[[282722,551046],[-272753,-541807],[-5,19],[-9964,24],[4,3],[23,0],[40,-17],[-2,-8],[-29,-14],[-36,-4],[282722,541804]],[[8988,9383],[-42,-1],[-57,7],[-5,3],[27,23],[34,6],[40,-23],[3,-15]],[[9186,9493],[-32,-23],[-44,5],[-52,23],[7,20],[51,-9],[70,-16]],[[9029,9522],[-22,-44],[-102,1],[-46,-14],[-55,39],[15,40],[37,11],[73,-2],[100,-31]],[[6598,9235],[-17,-5],[-91,8],[-7,26],[-50,16],[-4,32],[28,13],[-1,32],[55,50],[-25,7],[66,52],[-7,27],[62,31],[91,38],[93,11],[48,22],[54,8],[19,-23],[-19,-19],[-98,-29],[-85,-28],[-86,-57],[-42,-57],[-43,-57],[5,-49],[54,-49]],[[6363,7799],[-12,-35],[-27,-10],[-28,-61],[25,-56],[-2,-40],[30,-70]],[[6109,7624],[-35,49],[-32,23],[-24,34],[20,10],[23,49],[-15,24],[41,24],[-1,13],[-25,-10]],[[6061,7840],[1,26],[14,17],[27,4],[5,20],[-7,33],[12,30],[-1,18],[-41,19],[-16,-1],[-17,28],[-21,-9],[-35,20],[0,12],[-10,26],[-22,3],[-2,18],[7,12],[-18,33],[-29,-5],[-8,3],[-7,-14],[-11,3]],[[5777,8571],[31,33],[-29,28]],[[5863,9167],[29,20],[46,-35],[76,-14],[105,-67],[21,-28],[2,-40],[-31,-31],[-45,-15],[-124,44],[-21,-7],[45,-43],[2,-28],[2,-60],[36,-18],[22,-15],[3,28],[-17,26],[18,22],[67,-37],[24,15],[-19,43],[65,58],[25,-4],[26,-20],[16,40],[-23,35],[14,36],[-21,36],[78,-18],[16,-34],[-35,-7],[0,-33],[22,-20],[43,13],[7,38],[58,28],[97,50],[20,-3],[-27,-35],[35,-7],[19,21],[52,1],[42,25],[31,-36],[32,39],[-29,35],[14,19],[82,-18],[39,-18],[100,-68],[19,31],[-28,31],[-1,13],[-34,6],[10,28],[-15,46],[-1,19],[51,53],[18,54],[21,11],[74,-15],[5,-33],[-26,-48],[17,-19],[9,-41],[-6,-81],[31,-36],[-12,-40],[-55,-84],[32,-8],[11,21],[31,15],[7,29],[24,29],[-16,33],[13,39],[-31,5],[-6,33],[22,59],[-36,48],[50,40],[-7,42],[14,2],[15,-33],[-11,-57],[29,-11],[-12,43],[46,23],[58,3],[51,-34],[-25,49],[-2,63],[48,12],[67,-2],[60,7],[-23,31],[33,39],[31,2],[54,29],[74,8],[9,16],[73,6],[23,-14],[62,32],[51,-1],[8,25],[26,25],[66,25],[48,-19],[-38,-15],[63,-9],[7,-29],[25,14],[82,-1],[62,-29],[23,-22],[-7,-30],[-31,-18],[-73,-33],[-21,-17],[35,-8],[41,-15],[25,11],[14,-38],[12,15],[44,10],[90,-10],[6,-28],[116,-9],[2,46],[59,-11],[44,1],[45,-32],[13,-37],[-17,-25],[35,-47],[44,-24],[27,62],[44,-26],[48,16],[53,-18],[21,16],[45,-8],[-20,55],[37,25],[251,-38],[24,-35],[72,-45],[112,11],[56,-10],[23,-24],[-4,-44],[35,-16],[37,12],[49,1],[52,-11],[53,6],[49,-52],[34,19],[-23,37],[13,27],[88,-17],[58,4],[80,-29],[-9960,-25],[5e3,521473],[4963,-521735],[-36,4],[25,-31],[17,-49],[13,-16],[3,-24],[-7,-16],[-52,13],[-78,-44],[-25,-7],[-42,-42],[-40,-36],[-11,-27],[-39,41],[-73,-46],[-12,22],[-27,-26],[-37,8],[-9,-38],[-33,-58],[1,-24],[31,-13],[-4,-86],[-25,-2],[-12,-49],[11,-26],[-48,-30],[-10,-67],[-41,-15],[-9,-60],[-40,-55],[-10,41],[-12,86],[-15,131],[13,82],[23,35],[2,28],[43,13],[50,75],[47,60],[50,48],[23,83],[-34,-5],[-17,-49],[-70,-65],[-23,73],[-72,-20],[-69,-99],[23,-36],[-62,-16],[-43,-6],[2,43],[-43,9],[-35,-29],[-85,10],[-91,-18],[-90,-115],[-106,-139],[43,-8],[14,-37],[27,-13],[18,30],[30,-4],[40,-65],[1,-50],[-21,-59],[-3,-71],[-12,-94],[-42,-86],[-9,-41],[-38,-69],[-38,-68],[-18,-35],[-37,-34],[-17,-1],[-17,29],[-38,-44],[-4,-19]],[[7918,9684],[-157,-23],[51,77],[23,7],[21,-4],[70,-33],[-8,-24]],[[6420,9816],[-37,-8],[-25,-4],[-4,-10],[-33,-10],[-30,14],[16,19],[-62,2],[54,10],[43,1],[5,-16],[16,14],[26,10],[42,-13],[-11,-9]],[[7775,9718],[-60,-8],[-78,17],[-46,23],[-21,42],[-38,12],[72,40],[60,14],[54,-30],[64,-57],[-7,-53]],[[5844,4990],[11,-33],[-1,-35],[-8,-7]],[[5821,4978],[7,-6],[16,18]],[[4526,6298],[1,25]],[[6188,6023],[-4,26],[-8,17],[-2,24],[-15,21],[-15,50],[-7,48],[-20,40],[-12,10],[-18,56],[-4,41],[2,35],[-16,66],[-13,23],[-15,12],[-10,34],[2,13],[-8,31],[-8,13],[-11,44],[-17,48],[-14,40],[-14,0],[5,33],[1,20],[3,24]],[[6344,6744],[11,-51],[14,-13],[5,-21],[18,-25],[2,-24],[-3,-20],[4,-20],[8,-16],[4,-20],[4,-14]],[[6427,6512],[5,-22]],[[6444,6180],[-80,-23],[-26,-26],[-20,-62],[-13,-10],[-7,20],[-11,-3],[-27,6],[-5,5],[-32,-1],[-7,-5],[-12,15],[-7,-29],[3,-25],[-12,-19]],[[5943,5617],[-4,1],[0,29],[-3,20],[-14,24],[-4,42],[4,44],[-13,4],[-2,-13],[-17,-3],[7,-17],[2,-36],[-15,-32],[-14,-43],[-14,-6],[-23,34],[-11,-12],[-3,-17],[-14,-11],[-1,-12],[-28,0],[-3,12],[-20,2],[-10,-10],[-8,5],[-14,34],[-5,17],[-20,-9],[-8,-27],[-7,-53],[-10,-11],[-8,-6]],[[5663,5567],[-2,2]],[[5635,5716],[0,14],[-10,17],[-1,35],[-5,23],[-10,-4],[3,22],[7,25],[-3,24],[9,18],[-6,14],[7,36],[13,44],[24,-4],[-1,234]],[[6023,6357],[9,-58],[-6,-10],[4,-61],[11,-71],[10,-14],[15,-22]],[[5943,5624],[0,-7]],[[5943,5617],[0,-46]],[[5944,5309],[-17,-28],[-20,1],[-22,-14],[-18,13],[-11,-16]],[[5682,5544],[-19,23]],[[4535,5861],[-11,46],[-14,21],[12,11],[14,41],[6,31]],[[4536,5789],[-4,45]],[[9502,4438],[8,-20],[-19,0],[-11,37],[17,-15],[5,-2]],[[9467,4474],[-11,-1],[-17,6],[-5,9],[1,23],[19,-9],[9,-12],[4,-16]],[[9490,4490],[-4,-11],[-21,52],[-5,35],[9,0],[10,-47],[11,-29]],[[9440,4565],[1,-12],[-22,25],[-15,21],[-10,20],[4,6],[13,-14],[23,-27],[6,-19]],[[9375,4623],[-5,-3],[-13,14],[-11,24],[1,10],[17,-25],[11,-20]],[[4682,5458],[-8,5],[-20,24],[-14,31],[-5,22],[-3,43]],[[2561,5848],[-3,-14],[-16,1],[-10,6],[-12,12],[-15,3],[-8,13]],[[6198,5735],[9,-11],[5,-25],[13,-24],[14,-1],[26,16],[30,7],[25,18],[13,4],[10,11],[16,2]],[[6359,5732],[0,-1],[0,-25],[0,-59],[0,-31],[-13,-36],[-19,-50]],[[6359,5732],[9,1],[13,9],[14,6],[14,20],[10,0],[1,-16],[-3,-35],[0,-31],[-6,-21],[-7,-64],[-14,-66],[-17,-75],[-24,-87],[-23,-66],[-33,-81],[-28,-48],[-42,-58],[-25,-45],[-31,-72],[-6,-31],[-6,-14]],[[3412,5410],[34,-11],[2,10],[23,4],[30,-15]],[[3489,5306],[10,-35],[-4,-25]],[[5626,7957],[-8,-15],[-5,-24]],[[5380,7746],[7,5]],[[5663,8957],[-47,-17],[-27,-41],[4,-36],[-44,-48],[-54,-50],[-20,-84],[20,-41],[26,-33],[-25,-67],[-29,-14],[-11,-99],[-15,-55],[-34,6],[-16,-47],[-32,-3],[-9,56],[-23,67],[-21,84]],[[5890,3478],[-5,-26],[-17,-6],[-16,32],[0,20],[7,22],[3,17],[8,5],[14,-11]],[[5999,7104],[-2,45],[7,25]],[[6004,7174],[7,13],[7,13],[2,33],[9,-12],[31,17],[14,-12],[23,1],[32,22],[15,-1],[32,9]],[[5051,5420],[-22,-12]],[[7849,5777],[-25,28],[-24,-2],[4,47],[-24,0],[-2,-65],[-15,-87],[-10,-52],[2,-43],[18,-2],[12,-53],[5,-52],[15,-33],[17,-7],[14,-31]],[[7779,5439],[-11,23],[-4,29],[-15,34],[-14,28],[-4,-35],[-5,33],[3,37],[8,56]],[[6883,7252],[16,60],[-6,44],[-20,14],[7,26],[23,-3],[13,33],[9,38],[37,13],[-6,-27],[4,-17],[12,2]],[[6497,7255],[-5,42],[4,62],[-22,20],[8,40],[-19,4],[6,49],[26,-14],[25,19],[-20,35],[-8,34],[-23,-15],[-3,-43],[-8,38]],[[6554,7498],[31,1],[-4,29],[24,21],[23,34],[37,-31],[3,-47],[11,-12],[30,2],[9,-10],[14,-61],[32,-41],[18,-28],[29,-29],[37,-25],[-1,-36]],[[8471,4532],[3,14],[24,13],[19,2],[9,8],[10,-8],[-10,-16],[-29,-25],[-23,-17]],[[3286,5693],[16,8],[6,-2],[-1,-44],[-23,-7],[-5,6],[8,16],[-1,23]],[[5233,7240],[31,24],[19,-7],[-1,-30],[24,22],[2,-12],[-14,-29],[0,-27],[9,-15],[-3,-51],[-19,-29],[6,-33],[14,-1],[7,-28],[11,-9]],[[6004,7174],[-11,27],[11,22],[-17,-5],[-23,13],[-19,-34],[-43,-6],[-22,31],[-30,2],[-6,-24],[-20,-7],[-26,31],[-31,-1],[-16,59],[-21,33],[14,46],[-18,28],[31,56],[43,3],[12,45],[53,-8],[33,38],[32,17],[46,1],[49,-42],[40,-22],[32,9],[24,-6],[33,31]],[[5777,7539],[3,-23],[25,-19],[-5,-14],[-33,-3],[-12,-19],[-23,-31],[-9,27],[0,12]],[[8382,6499],[-17,-95],[-12,-49],[-14,50],[-4,44],[17,58],[22,45],[13,-18],[-5,-35]],[[6088,4781],[-12,-73],[1,-33],[18,-22],[1,-15],[-8,-36],[2,-18],[-2,-28],[10,-37],[11,-58],[10,-13]],[[5909,4512],[-15,18],[-18,10],[-11,10],[-12,15]],[[5844,4990],[10,8],[31,-1],[56,4]],[[6061,7840],[-22,-5],[-18,-19],[-26,-3],[-24,-22],[1,-37],[14,-14],[28,4],[-5,-21],[-31,-11],[-37,-34],[-16,12],[6,28],[-30,17],[5,12],[26,19],[-8,14],[-43,15],[-2,22],[-25,-8],[-11,-32],[-21,-44]],[[3517,3063],[-12,-38],[-31,-32],[-21,11],[-15,-6],[-26,25],[-18,-1],[-17,32]],[[679,6185],[-4,-10],[-7,8],[1,17],[-4,21],[1,7],[5,10],[-2,11],[1,6],[3,-1],[10,-10],[5,-5],[5,-8],[7,-21],[-1,-3],[-11,-13],[-9,-9]],[[664,6277],[-9,-4],[-5,12],[-3,5],[0,4],[3,5],[9,-6],[8,-9],[-3,-7]],[[646,6309],[-1,-7],[-15,2],[2,7],[14,-2]],[[621,6317],[-2,-3],[-2,1],[-9,2],[-4,13],[-1,2],[7,8],[3,-3],[8,-20]],[[574,6356],[-4,-6],[-9,11],[1,4],[5,6],[6,-1],[1,-14]],[[3135,7724],[5,-19],[-30,-29],[-29,-20],[-29,-18],[-15,-35],[-4,-13],[-1,-31],[10,-32],[11,-1],[-3,21],[8,-13],[-2,-17],[-19,-9],[-13,1],[-20,-10],[-12,-3],[-17,-3],[-23,-17],[41,11],[8,-11],[-39,-18],[-17,0],[0,7],[-8,-16],[8,-3],[-6,-43],[-20,-45],[-2,15],[-6,3],[-9,15],[5,-32],[7,-10],[1,-23],[-9,-23],[-16,-47],[-2,3],[8,40],[-14,22],[-3,49],[-5,-25],[5,-38],[-18,10],[19,-19],[1,-57],[8,-4],[3,-20],[4,-59],[-17,-44],[-29,-18],[-18,-34],[-14,-4],[-14,-22],[-4,-20],[-31,-38],[-16,-28],[-13,-35],[-4,-42],[5,-41],[9,-51],[13,-41],[0,-26],[13,-69],[-1,-39],[-1,-23],[-7,-36],[-8,-8],[-14,7],[-4,26],[-11,14],[-15,51],[-13,45],[-4,23],[6,39],[-8,33],[-22,49],[-10,9],[-28,-27],[-5,3],[-14,28],[-17,14],[-32,-7],[-24,7],[-21,-5],[-12,-9],[5,-15],[0,-24],[5,-12],[-5,-8],[-10,9],[-11,-11],[-20,2],[-20,31],[-25,-8],[-20,14],[-17,-4],[-24,-14],[-25,-44],[-27,-25],[-16,-28],[-6,-27],[0,-41],[1,-28],[5,-20]],[[1746,6980],[-4,30],[-18,34],[-13,7],[-3,17],[-16,3],[-10,16],[-26,6],[-7,9],[-3,32],[-27,60],[-23,82],[1,14],[-13,19],[-21,50],[-4,48],[-15,32],[6,49],[-1,51],[-8,45],[10,56],[4,53],[3,54],[-5,79],[-9,51],[-8,27],[4,12],[40,-20],[15,-56],[7,15],[-5,49],[-9,48]],[[750,8432],[-28,-23],[-14,15],[-4,28],[25,21],[15,9],[18,-4],[12,-18],[-24,-28]],[[401,8597],[-18,-9],[-18,11],[-17,16],[28,10],[22,-6],[3,-22]],[[230,8826],[17,-12],[17,6],[23,-15],[27,-8],[-2,-7],[-21,-12],[-21,13],[-11,11],[-24,-4],[-7,5],[2,23]],[[1374,8295],[-15,22],[-25,19],[-8,52],[-36,47],[-15,56],[-26,4],[-44,2],[-33,17],[-57,61],[-27,11],[-49,21],[-38,-5],[-55,27],[-33,25],[-30,-12],[5,-41],[-15,-4],[-32,-12],[-25,-20],[-30,-13],[-4,35],[12,58],[30,18],[-8,15],[-35,-33],[-19,-39],[-40,-42],[20,-29],[-26,-42],[-30,-25],[-28,-18],[-7,-26],[-43,-31],[-9,-28],[-32,-25],[-20,5],[-25,-17],[-29,-20],[-23,-20],[-47,-16],[-5,9],[31,28],[27,18],[29,33],[35,6],[14,25],[38,35],[6,12],[21,21],[5,44],[14,35],[-32,-18],[-9,11],[-15,-22],[-18,30],[-8,-21],[-10,29],[-28,-23],[-17,0],[-3,35],[5,21],[-17,22],[-37,-12],[-23,28],[-19,14],[0,34],[-22,25],[11,34],[23,33],[10,30],[22,4],[19,-9],[23,28],[20,-5],[21,19],[-5,27],[-16,10],[21,23],[-17,-1],[-30,-13],[-8,-13],[-22,13],[-39,-6],[-41,14],[-12,24],[-35,34],[39,25],[62,29],[23,0],[-4,-30],[59,2],[-23,37],[-34,23],[-20,29],[-26,25],[-38,19],[15,31],[49,2],[35,27],[7,29],[28,28],[28,6],[52,27],[26,-4],[42,31],[42,-12],[21,-27],[12,11],[47,-3],[-2,-14],[43,-10],[28,6],[59,-18],[53,-6],[21,-8],[37,10],[42,-18],[31,-8]],[[3018,5753],[-1,-14],[-16,-7],[9,-26],[0,-31],[-12,-35],[10,-47],[12,4],[6,43],[-8,21],[-2,45],[35,24],[-4,27],[10,19],[10,-41],[19,-1],[18,-33],[1,-20],[25,0],[30,6],[16,-27],[21,-7],[16,18],[0,15],[34,4],[34,1],[-24,-18],[10,-28],[22,-4],[21,-29],[4,-48],[15,2],[11,-14]],[[8001,6331],[-37,-51],[-24,-56],[-6,-41],[22,-62],[25,-77],[26,-37],[17,-47],[12,-109],[-3,-104],[-24,-39],[-31,-38],[-23,-49],[-35,-55],[-10,37],[8,40],[-21,34]],[[9661,4085],[-9,-8],[-9,26],[1,16],[17,-34]],[[9641,4175],[4,-47],[-7,7],[-6,-3],[-4,16],[0,45],[13,-18]],[[6475,6041],[-21,-16],[-5,-26],[-1,-20],[-27,-25],[-45,-28],[-24,-41],[-13,-3],[-8,3],[-16,-25],[-18,-11],[-23,-3],[-7,-3],[-6,-16],[-8,-4],[-4,-15],[-14,1],[-9,-8],[-19,3],[-7,35],[1,32],[-5,17],[-5,44],[-8,24],[5,3],[-2,27],[3,12],[-1,25]],[[5817,3752],[11,0],[14,-10],[9,7],[15,-6]],[[5911,3478],[-7,-43],[-3,-49],[-7,-27],[-19,-30],[-5,-8],[-12,-30],[-8,-31],[-16,-42],[-31,-61],[-20,-36],[-21,-26],[-29,-23],[-14,-3],[-3,-17],[-17,9],[-14,-11],[-30,11],[-17,-7],[-12,3],[-28,-23],[-24,-10],[-17,-22],[-13,-1],[-11,21],[-10,1],[-12,26],[-1,-8],[-4,16],[0,34],[-9,40],[9,11],[0,45],[-19,55],[-14,50],[0,1],[-20,76]],[[5840,4141],[-21,-8],[-15,-23],[-4,-21],[-10,-4],[-24,-49],[-15,-38],[-10,-2],[-9,7],[-31,7]]],transform:{scale:[.036003600360036005,.016927109488408608],translate:[-180,-85.60903777459767]},bbox:[-180,-85.60903777459767,180,83.64513000000001]},Up=[{Country:"Afghanistan","Alpha-2 code":"AF","Alpha-3 code":"AFG","Numeric code":4,Latitude:33,Longitude:65},{Country:"Albania","Alpha-2 code":"AL","Alpha-3 code":"ALB","Numeric code":8,Latitude:41,Longitude:20},{Country:"Algeria","Alpha-2 code":"DZ","Alpha-3 code":"DZA","Numeric code":12,Latitude:28,Longitude:3},{Country:"American Samoa","Alpha-2 code":"AS","Alpha-3 code":"ASM","Numeric code":16,Latitude:-14.3333,Longitude:-170},{Country:"Andorra","Alpha-2 code":"AD","Alpha-3 code":"AND","Numeric code":20,Latitude:42.5,Longitude:1.6},{Country:"Angola","Alpha-2 code":"AO","Alpha-3 code":"AGO","Numeric code":24,Latitude:-12.5,Longitude:18.5},{Country:"Anguilla","Alpha-2 code":"AI","Alpha-3 code":"AIA","Numeric code":660,Latitude:18.25,Longitude:-63.1667},{Country:"Antarctica","Alpha-2 code":"AQ","Alpha-3 code":"ATA","Numeric code":10,Latitude:-90,Longitude:0},{Country:"Antigua and Barbuda","Alpha-2 code":"AG","Alpha-3 code":"ATG","Numeric code":28,Latitude:17.05,Longitude:-61.8},{Country:"Argentina","Alpha-2 code":"AR","Alpha-3 code":"ARG","Numeric code":32,Latitude:-34,Longitude:-64},{Country:"Armenia","Alpha-2 code":"AM","Alpha-3 code":"ARM","Numeric code":51,Latitude:40,Longitude:45},{Country:"Aruba","Alpha-2 code":"AW","Alpha-3 code":"ABW","Numeric code":533,Latitude:12.5,Longitude:-69.9667},{Country:"Australia","Alpha-2 code":"AU","Alpha-3 code":"AUS","Numeric code":36,Latitude:-27,Longitude:133},{Country:"Austria","Alpha-2 code":"AT","Alpha-3 code":"AUT","Numeric code":40,Latitude:47.3333,Longitude:13.3333},{Country:"Azerbaijan","Alpha-2 code":"AZ","Alpha-3 code":"AZE","Numeric code":31,Latitude:40.5,Longitude:47.5},{Country:"Bahamas","Alpha-2 code":"BS","Alpha-3 code":"BHS","Numeric code":44,Latitude:24.25,Longitude:-76},{Country:"Bahrain","Alpha-2 code":"BH","Alpha-3 code":"BHR","Numeric code":48,Latitude:26,Longitude:50.55},{Country:"Bangladesh","Alpha-2 code":"BD","Alpha-3 code":"BGD","Numeric code":50,Latitude:24,Longitude:90},{Country:"Barbados","Alpha-2 code":"BB","Alpha-3 code":"BRB","Numeric code":52,Latitude:13.1667,Longitude:-59.5333},{Country:"Belarus","Alpha-2 code":"BY","Alpha-3 code":"BLR","Numeric code":112,Latitude:53,Longitude:28},{Country:"Belgium","Alpha-2 code":"BE","Alpha-3 code":"BEL","Numeric code":56,Latitude:50.8333,Longitude:4},{Country:"Belize","Alpha-2 code":"BZ","Alpha-3 code":"BLZ","Numeric code":84,Latitude:17.25,Longitude:-88.75},{Country:"Benin","Alpha-2 code":"BJ","Alpha-3 code":"BEN","Numeric code":204,Latitude:9.5,Longitude:2.25},{Country:"Bermuda","Alpha-2 code":"BM","Alpha-3 code":"BMU","Numeric code":60,Latitude:32.3333,Longitude:-64.75},{Country:"Bhutan","Alpha-2 code":"BT","Alpha-3 code":"BTN","Numeric code":64,Latitude:27.5,Longitude:90.5},{Country:"Bolivia","Alpha-2 code":"BO","Alpha-3 code":"BOL","Numeric code":68,Latitude:-17,Longitude:-65},{Country:"Bosnia and Herzegovina","Alpha-2 code":"BA","Alpha-3 code":"BIH","Numeric code":70,Latitude:44,Longitude:18},{Country:"Botswana","Alpha-2 code":"BW","Alpha-3 code":"BWA","Numeric code":72,Latitude:-22,Longitude:24},{Country:"Bouvet Island","Alpha-2 code":"BV","Alpha-3 code":"BVT","Numeric code":74,Latitude:-54.4333,Longitude:3.4},{Country:"Brazil","Alpha-2 code":"BR","Alpha-3 code":"BRA","Numeric code":76,Latitude:-10,Longitude:-55},{Country:"British Indian Ocean Territory","Alpha-2 code":"IO","Alpha-3 code":"IOT","Numeric code":86,Latitude:-6,Longitude:71.5},{Country:"Brunei","Alpha-2 code":"BN","Alpha-3 code":"BRN","Numeric code":96,Latitude:4.5,Longitude:114.6667},{Country:"Bulgaria","Alpha-2 code":"BG","Alpha-3 code":"BGR","Numeric code":100,Latitude:43,Longitude:25},{Country:"Burkina Faso","Alpha-2 code":"BF","Alpha-3 code":"BFA","Numeric code":854,Latitude:13,Longitude:-2},{Country:"Burundi","Alpha-2 code":"BI","Alpha-3 code":"BDI","Numeric code":108,Latitude:-3.5,Longitude:30},{Country:"Cambodia","Alpha-2 code":"KH","Alpha-3 code":"KHM","Numeric code":116,Latitude:13,Longitude:105},{Country:"Cameroon","Alpha-2 code":"CM","Alpha-3 code":"CMR","Numeric code":120,Latitude:6,Longitude:12},{Country:"Canada","Alpha-2 code":"CA","Alpha-3 code":"CAN","Numeric code":124,Latitude:60,Longitude:-95},{Country:"Cape Verde","Alpha-2 code":"CV","Alpha-3 code":"CPV","Numeric code":132,Latitude:16,Longitude:-24},{Country:"Cayman Islands","Alpha-2 code":"KY","Alpha-3 code":"CYM","Numeric code":136,Latitude:19.5,Longitude:-80.5},{Country:"Central African Republic","Alpha-2 code":"CF","Alpha-3 code":"CAF","Numeric code":140,Latitude:7,Longitude:21},{Country:"Chad","Alpha-2 code":"TD","Alpha-3 code":"TCD","Numeric code":148,Latitude:15,Longitude:19},{Country:"Chile","Alpha-2 code":"CL","Alpha-3 code":"CHL","Numeric code":152,Latitude:-30,Longitude:-71},{Country:"China","Alpha-2 code":"CN","Alpha-3 code":"CHN","Numeric code":156,Latitude:35,Longitude:105},{Country:"Christmas Island","Alpha-2 code":"CX","Alpha-3 code":"CXR","Numeric code":162,Latitude:-10.5,Longitude:105.6667},{Country:"Cocos (Keeling) Islands","Alpha-2 code":"CC","Alpha-3 code":"CCK","Numeric code":166,Latitude:-12.5,Longitude:96.8333},{Country:"Colombia","Alpha-2 code":"CO","Alpha-3 code":"COL","Numeric code":170,Latitude:4,Longitude:-72},{Country:"Comoros","Alpha-2 code":"KM","Alpha-3 code":"COM","Numeric code":174,Latitude:-12.1667,Longitude:44.25},{Country:"Congo","Alpha-2 code":"CG","Alpha-3 code":"COG","Numeric code":178,Latitude:-1,Longitude:15},{Country:"Congo","Alpha-2 code":"CD","Alpha-3 code":"COD","Numeric code":180,Latitude:0,Longitude:25},{Country:"Cook Islands","Alpha-2 code":"CK","Alpha-3 code":"COK","Numeric code":184,Latitude:-21.2333,Longitude:-159.7667},{Country:"Costa Rica","Alpha-2 code":"CR","Alpha-3 code":"CRI","Numeric code":188,Latitude:10,Longitude:-84},{Country:"Ivory Coast","Alpha-2 code":"CI","Alpha-3 code":"CIV","Numeric code":384,Latitude:8,Longitude:-5},{Country:"Croatia","Alpha-2 code":"HR","Alpha-3 code":"HRV","Numeric code":191,Latitude:45.1667,Longitude:15.5},{Country:"Cuba","Alpha-2 code":"CU","Alpha-3 code":"CUB","Numeric code":192,Latitude:21.5,Longitude:-80},{Country:"Cyprus","Alpha-2 code":"CY","Alpha-3 code":"CYP","Numeric code":196,Latitude:35,Longitude:33},{Country:"Czech Republic","Alpha-2 code":"CZ","Alpha-3 code":"CZE","Numeric code":203,Latitude:49.75,Longitude:15.5},{Country:"Denmark","Alpha-2 code":"DK","Alpha-3 code":"DNK","Numeric code":208,Latitude:56,Longitude:10},{Country:"Djibouti","Alpha-2 code":"DJ","Alpha-3 code":"DJI","Numeric code":262,Latitude:11.5,Longitude:43},{Country:"Dominica","Alpha-2 code":"DM","Alpha-3 code":"DMA","Numeric code":212,Latitude:15.4167,Longitude:-61.3333},{Country:"Dominican Republic","Alpha-2 code":"DO","Alpha-3 code":"DOM","Numeric code":214,Latitude:19,Longitude:-70.6667},{Country:"Ecuador","Alpha-2 code":"EC","Alpha-3 code":"ECU","Numeric code":218,Latitude:-2,Longitude:-77.5},{Country:"Egypt","Alpha-2 code":"EG","Alpha-3 code":"EGY","Numeric code":818,Latitude:27,Longitude:30},{Country:"El Salvador","Alpha-2 code":"SV","Alpha-3 code":"SLV","Numeric code":222,Latitude:13.8333,Longitude:-88.9167},{Country:"Equatorial Guinea","Alpha-2 code":"GQ","Alpha-3 code":"GNQ","Numeric code":226,Latitude:2,Longitude:10},{Country:"Eritrea","Alpha-2 code":"ER","Alpha-3 code":"ERI","Numeric code":232,Latitude:15,Longitude:39},{Country:"Estonia","Alpha-2 code":"EE","Alpha-3 code":"EST","Numeric code":233,Latitude:59,Longitude:26},{Country:"Ethiopia","Alpha-2 code":"ET","Alpha-3 code":"ETH","Numeric code":231,Latitude:8,Longitude:38},{Country:"Falkland Islands (Malvinas)","Alpha-2 code":"FK","Alpha-3 code":"FLK","Numeric code":238,Latitude:-51.75,Longitude:-59},{Country:"Faroe Islands","Alpha-2 code":"FO","Alpha-3 code":"FRO","Numeric code":234,Latitude:62,Longitude:-7},{Country:"Fiji","Alpha-2 code":"FJ","Alpha-3 code":"FJI","Numeric code":242,Latitude:-18,Longitude:175},{Country:"Finland","Alpha-2 code":"FI","Alpha-3 code":"FIN","Numeric code":246,Latitude:64,Longitude:26},{Country:"France","Alpha-2 code":"FR","Alpha-3 code":"FRA","Numeric code":250,Latitude:46,Longitude:2},{Country:"French Guiana","Alpha-2 code":"GF","Alpha-3 code":"GUF","Numeric code":254,Latitude:4,Longitude:-53},{Country:"French Polynesia","Alpha-2 code":"PF","Alpha-3 code":"PYF","Numeric code":258,Latitude:-15,Longitude:-140},{Country:"French Southern Territories","Alpha-2 code":"TF","Alpha-3 code":"ATF","Numeric code":260,Latitude:-43,Longitude:67},{Country:"Gabon","Alpha-2 code":"GA","Alpha-3 code":"GAB","Numeric code":266,Latitude:-1,Longitude:11.75},{Country:"Gambia","Alpha-2 code":"GM","Alpha-3 code":"GMB","Numeric code":270,Latitude:13.4667,Longitude:-16.5667},{Country:"Georgia","Alpha-2 code":"GE","Alpha-3 code":"GEO","Numeric code":268,Latitude:42,Longitude:43.5},{Country:"Germany","Alpha-2 code":"DE","Alpha-3 code":"DEU","Numeric code":276,Latitude:51,Longitude:9},{Country:"Ghana","Alpha-2 code":"GH","Alpha-3 code":"GHA","Numeric code":288,Latitude:8,Longitude:-2},{Country:"Gibraltar","Alpha-2 code":"GI","Alpha-3 code":"GIB","Numeric code":292,Latitude:36.1833,Longitude:-5.3667},{Country:"Greece","Alpha-2 code":"GR","Alpha-3 code":"GRC","Numeric code":300,Latitude:39,Longitude:22},{Country:"Greenland","Alpha-2 code":"GL","Alpha-3 code":"GRL","Numeric code":304,Latitude:72,Longitude:-40},{Country:"Grenada","Alpha-2 code":"GD","Alpha-3 code":"GRD","Numeric code":308,Latitude:12.1167,Longitude:-61.6667},{Country:"Guadeloupe","Alpha-2 code":"GP","Alpha-3 code":"GLP","Numeric code":312,Latitude:16.25,Longitude:-61.5833},{Country:"Guam","Alpha-2 code":"GU","Alpha-3 code":"GUM","Numeric code":316,Latitude:13.4667,Longitude:144.7833},{Country:"Guatemala","Alpha-2 code":"GT","Alpha-3 code":"GTM","Numeric code":320,Latitude:15.5,Longitude:-90.25},{Country:"Guinea","Alpha-2 code":"GN","Alpha-3 code":"GIN","Numeric code":324,Latitude:11,Longitude:-10},{Country:"Guinea-Bissau","Alpha-2 code":"GW","Alpha-3 code":"GNB","Numeric code":624,Latitude:12,Longitude:-15},{Country:"Guyana","Alpha-2 code":"GY","Alpha-3 code":"GUY","Numeric code":328,Latitude:5,Longitude:-59},{Country:"Haiti","Alpha-2 code":"HT","Alpha-3 code":"HTI","Numeric code":332,Latitude:19,Longitude:-72.4167},{Country:"Heard Island and McDonald Islands","Alpha-2 code":"HM","Alpha-3 code":"HMD","Numeric code":334,Latitude:-53.1,Longitude:72.5167},{Country:"Holy See (Vatican City State)","Alpha-2 code":"VA","Alpha-3 code":"VAT","Numeric code":336,Latitude:41.9,Longitude:12.45},{Country:"Honduras","Alpha-2 code":"HN","Alpha-3 code":"HND","Numeric code":340,Latitude:15,Longitude:-86.5},{Country:"Hong Kong","Alpha-2 code":"HK","Alpha-3 code":"HKG","Numeric code":344,Latitude:22.25,Longitude:114.1667},{Country:"Hungary","Alpha-2 code":"HU","Alpha-3 code":"HUN","Numeric code":348,Latitude:47,Longitude:20},{Country:"Iceland","Alpha-2 code":"IS","Alpha-3 code":"ISL","Numeric code":352,Latitude:65,Longitude:-18},{Country:"India","Alpha-2 code":"IN","Alpha-3 code":"IND","Numeric code":356,Latitude:20,Longitude:77},{Country:"Indonesia","Alpha-2 code":"ID","Alpha-3 code":"IDN","Numeric code":360,Latitude:-5,Longitude:120},{Country:"Iran","Alpha-2 code":"IR","Alpha-3 code":"IRN","Numeric code":364,Latitude:32,Longitude:53},{Country:"Iraq","Alpha-2 code":"IQ","Alpha-3 code":"IRQ","Numeric code":368,Latitude:33,Longitude:44},{Country:"Ireland","Alpha-2 code":"IE","Alpha-3 code":"IRL","Numeric code":372,Latitude:53,Longitude:-8},{Country:"Isle of Man","Alpha-2 code":"IM","Alpha-3 code":"IMN","Numeric code":833,Latitude:54.23,Longitude:-4.55},{Country:"Israel","Alpha-2 code":"IL","Alpha-3 code":"ISR","Numeric code":376,Latitude:31.5,Longitude:34.75},{Country:"Italy","Alpha-2 code":"IT","Alpha-3 code":"ITA","Numeric code":380,Latitude:42.8333,Longitude:12.8333},{Country:"Jamaica","Alpha-2 code":"JM","Alpha-3 code":"JAM","Numeric code":388,Latitude:18.25,Longitude:-77.5},{Country:"Japan","Alpha-2 code":"JP","Alpha-3 code":"JPN","Numeric code":392,Latitude:36,Longitude:138},{Country:"Jersey","Alpha-2 code":"JE","Alpha-3 code":"JEY","Numeric code":832,Latitude:49.21,Longitude:-2.13},{Country:"Jordan","Alpha-2 code":"JO","Alpha-3 code":"JOR","Numeric code":400,Latitude:31,Longitude:36},{Country:"Kazakhstan","Alpha-2 code":"KZ","Alpha-3 code":"KAZ","Numeric code":398,Latitude:48,Longitude:68},{Country:"Kenya","Alpha-2 code":"KE","Alpha-3 code":"KEN","Numeric code":404,Latitude:1,Longitude:38},{Country:"Kiribati","Alpha-2 code":"KI","Alpha-3 code":"KIR","Numeric code":296,Latitude:1.4167,Longitude:173},{Country:"Korea","Alpha-2 code":"KP","Alpha-3 code":"PRK","Numeric code":408,Latitude:40,Longitude:127},{Country:"South Korea","Alpha-2 code":"KR","Alpha-3 code":"KOR","Numeric code":410,Latitude:37,Longitude:127.5},{Country:"Kuwait","Alpha-2 code":"KW","Alpha-3 code":"KWT","Numeric code":414,Latitude:29.3375,Longitude:47.6581},{Country:"Kyrgyzstan","Alpha-2 code":"KG","Alpha-3 code":"KGZ","Numeric code":417,Latitude:41,Longitude:75},{Country:"Lao People's Democratic Republic","Alpha-2 code":"LA","Alpha-3 code":"LAO","Numeric code":418,Latitude:18,Longitude:105},{Country:"Latvia","Alpha-2 code":"LV","Alpha-3 code":"LVA","Numeric code":428,Latitude:57,Longitude:25},{Country:"Lebanon","Alpha-2 code":"LB","Alpha-3 code":"LBN","Numeric code":422,Latitude:33.8333,Longitude:35.8333},{Country:"Lesotho","Alpha-2 code":"LS","Alpha-3 code":"LSO","Numeric code":426,Latitude:-29.5,Longitude:28.5},{Country:"Liberia","Alpha-2 code":"LR","Alpha-3 code":"LBR","Numeric code":430,Latitude:6.5,Longitude:-9.5},{Country:"Libya","Alpha-2 code":"LY","Alpha-3 code":"LBY","Numeric code":434,Latitude:25,Longitude:17},{Country:"Liechtenstein","Alpha-2 code":"LI","Alpha-3 code":"LIE","Numeric code":438,Latitude:47.1667,Longitude:9.5333},{Country:"Lithuania","Alpha-2 code":"LT","Alpha-3 code":"LTU","Numeric code":440,Latitude:56,Longitude:24},{Country:"Luxembourg","Alpha-2 code":"LU","Alpha-3 code":"LUX","Numeric code":442,Latitude:49.75,Longitude:6.1667},{Country:"Macao","Alpha-2 code":"MO","Alpha-3 code":"MAC","Numeric code":446,Latitude:22.1667,Longitude:113.55},{Country:"Macedonia","Alpha-2 code":"MK","Alpha-3 code":"MKD","Numeric code":807,Latitude:41.8333,Longitude:22},{Country:"Madagascar","Alpha-2 code":"MG","Alpha-3 code":"MDG","Numeric code":450,Latitude:-20,Longitude:47},{Country:"Malawi","Alpha-2 code":"MW","Alpha-3 code":"MWI","Numeric code":454,Latitude:-13.5,Longitude:34},{Country:"Malaysia","Alpha-2 code":"MY","Alpha-3 code":"MYS","Numeric code":458,Latitude:2.5,Longitude:112.5},{Country:"Maldives","Alpha-2 code":"MV","Alpha-3 code":"MDV","Numeric code":462,Latitude:3.25,Longitude:73},{Country:"Mali","Alpha-2 code":"ML","Alpha-3 code":"MLI","Numeric code":466,Latitude:17,Longitude:-4},{Country:"Malta","Alpha-2 code":"MT","Alpha-3 code":"MLT","Numeric code":470,Latitude:35.8333,Longitude:14.5833},{Country:"Marshall Islands","Alpha-2 code":"MH","Alpha-3 code":"MHL","Numeric code":584,Latitude:9,Longitude:168},{Country:"Martinique","Alpha-2 code":"MQ","Alpha-3 code":"MTQ","Numeric code":474,Latitude:14.6667,Longitude:-61},{Country:"Mauritania","Alpha-2 code":"MR","Alpha-3 code":"MRT","Numeric code":478,Latitude:20,Longitude:-12},{Country:"Mauritius","Alpha-2 code":"MU","Alpha-3 code":"MUS","Numeric code":480,Latitude:-20.2833,Longitude:57.55},{Country:"Mayotte","Alpha-2 code":"YT","Alpha-3 code":"MYT","Numeric code":175,Latitude:-12.8333,Longitude:45.1667},{Country:"Mexico","Alpha-2 code":"MX","Alpha-3 code":"MEX","Numeric code":484,Latitude:23,Longitude:-102},{Country:"Micronesia","Alpha-2 code":"FM","Alpha-3 code":"FSM","Numeric code":583,Latitude:6.9167,Longitude:158.25},{Country:"Moldova","Alpha-2 code":"MD","Alpha-3 code":"MDA","Numeric code":498,Latitude:47,Longitude:29},{Country:"Monaco","Alpha-2 code":"MC","Alpha-3 code":"MCO","Numeric code":492,Latitude:43.7333,Longitude:7.4},{Country:"Mongolia","Alpha-2 code":"MN","Alpha-3 code":"MNG","Numeric code":496,Latitude:46,Longitude:105},{Country:"Montenegro","Alpha-2 code":"ME","Alpha-3 code":"MNE","Numeric code":499,Latitude:42,Longitude:19},{Country:"Montserrat","Alpha-2 code":"MS","Alpha-3 code":"MSR","Numeric code":500,Latitude:16.75,Longitude:-62.2},{Country:"Morocco","Alpha-2 code":"MA","Alpha-3 code":"MAR","Numeric code":504,Latitude:32,Longitude:-5},{Country:"Mozambique","Alpha-2 code":"MZ","Alpha-3 code":"MOZ","Numeric code":508,Latitude:-18.25,Longitude:35},{Country:"Myanmar","Alpha-2 code":"MM","Alpha-3 code":"MMR","Numeric code":104,Latitude:22,Longitude:98},{Country:"Namibia","Alpha-2 code":"NA","Alpha-3 code":"NAM","Numeric code":516,Latitude:-22,Longitude:17},{Country:"Nauru","Alpha-2 code":"NR","Alpha-3 code":"NRU","Numeric code":520,Latitude:-.5333,Longitude:166.9167},{Country:"Nepal","Alpha-2 code":"NP","Alpha-3 code":"NPL","Numeric code":524,Latitude:28,Longitude:84},{Country:"Netherlands","Alpha-2 code":"NL","Alpha-3 code":"NLD","Numeric code":528,Latitude:52.5,Longitude:5.75},{Country:"Netherlands Antilles","Alpha-2 code":"AN","Alpha-3 code":"ANT","Numeric code":530,Latitude:12.25,Longitude:-68.75},{Country:"New Caledonia","Alpha-2 code":"NC","Alpha-3 code":"NCL","Numeric code":540,Latitude:-21.5,Longitude:165.5},{Country:"New Zealand","Alpha-2 code":"NZ","Alpha-3 code":"NZL","Numeric code":554,Latitude:-41,Longitude:174},{Country:"Nicaragua","Alpha-2 code":"NI","Alpha-3 code":"NIC","Numeric code":558,Latitude:13,Longitude:-85},{Country:"Niger","Alpha-2 code":"NE","Alpha-3 code":"NER","Numeric code":562,Latitude:16,Longitude:8},{Country:"Nigeria","Alpha-2 code":"NG","Alpha-3 code":"NGA","Numeric code":566,Latitude:10,Longitude:8},{Country:"Niue","Alpha-2 code":"NU","Alpha-3 code":"NIU","Numeric code":570,Latitude:-19.0333,Longitude:-169.8667},{Country:"Norfolk Island","Alpha-2 code":"NF","Alpha-3 code":"NFK","Numeric code":574,Latitude:-29.0333,Longitude:167.95},{Country:"Northern Mariana Islands","Alpha-2 code":"MP","Alpha-3 code":"MNP","Numeric code":580,Latitude:15.2,Longitude:145.75},{Country:"Norway","Alpha-2 code":"NO","Alpha-3 code":"NOR","Numeric code":578,Latitude:62,Longitude:10},{Country:"Oman","Alpha-2 code":"OM","Alpha-3 code":"OMN","Numeric code":512,Latitude:21,Longitude:57},{Country:"Pakistan","Alpha-2 code":"PK","Alpha-3 code":"PAK","Numeric code":586,Latitude:30,Longitude:70},{Country:"Palau","Alpha-2 code":"PW","Alpha-3 code":"PLW","Numeric code":585,Latitude:7.5,Longitude:134.5},{Country:"Palestinian Territory, Occupied","Alpha-2 code":"PS","Alpha-3 code":"PSE","Numeric code":275,Latitude:32,Longitude:35.25},{Country:"Panama","Alpha-2 code":"PA","Alpha-3 code":"PAN","Numeric code":591,Latitude:9,Longitude:-80},{Country:"Papua New Guinea","Alpha-2 code":"PG","Alpha-3 code":"PNG","Numeric code":598,Latitude:-6,Longitude:147},{Country:"Paraguay","Alpha-2 code":"PY","Alpha-3 code":"PRY","Numeric code":600,Latitude:-23,Longitude:-58},{Country:"Peru","Alpha-2 code":"PE","Alpha-3 code":"PER","Numeric code":604,Latitude:-10,Longitude:-76},{Country:"Philippines","Alpha-2 code":"PH","Alpha-3 code":"PHL","Numeric code":608,Latitude:13,Longitude:122},{Country:"Pitcairn","Alpha-2 code":"PN","Alpha-3 code":"PCN","Numeric code":612,Latitude:-24.7,Longitude:-127.4},{Country:"Poland","Alpha-2 code":"PL","Alpha-3 code":"POL","Numeric code":616,Latitude:52,Longitude:20},{Country:"Portugal","Alpha-2 code":"PT","Alpha-3 code":"PRT","Numeric code":620,Latitude:39.5,Longitude:-8},{Country:"Puerto Rico","Alpha-2 code":"PR","Alpha-3 code":"PRI","Numeric code":630,Latitude:18.25,Longitude:-66.5},{Country:"Qatar","Alpha-2 code":"QA","Alpha-3 code":"QAT","Numeric code":634,Latitude:25.5,Longitude:51.25},{Country:"Réunion","Alpha-2 code":"RE","Alpha-3 code":"REU","Numeric code":638,Latitude:-21.1,Longitude:55.6},{Country:"Romania","Alpha-2 code":"RO","Alpha-3 code":"ROU","Numeric code":642,Latitude:46,Longitude:25},{Country:"Russia","Alpha-2 code":"RU","Alpha-3 code":"RUS","Numeric code":643,Latitude:60,Longitude:100},{Country:"Rwanda","Alpha-2 code":"RW","Alpha-3 code":"RWA","Numeric code":646,Latitude:-2,Longitude:30},{Country:"Saint Helena, Ascension and Tristan da Cunha","Alpha-2 code":"SH","Alpha-3 code":"SHN","Numeric code":654,Latitude:-15.9333,Longitude:-5.7},{Country:"Saint Kitts and Nevis","Alpha-2 code":"KN","Alpha-3 code":"KNA","Numeric code":659,Latitude:17.3333,Longitude:-62.75},{Country:"Saint Lucia","Alpha-2 code":"LC","Alpha-3 code":"LCA","Numeric code":662,Latitude:13.8833,Longitude:-61.1333},{Country:"Saint Pierre and Miquelon","Alpha-2 code":"PM","Alpha-3 code":"SPM","Numeric code":666,Latitude:46.8333,Longitude:-56.3333},{Country:"St. Vincent and the Grenadines","Alpha-2 code":"VC","Alpha-3 code":"VCT","Numeric code":670,Latitude:13.25,Longitude:-61.2},{Country:"Samoa","Alpha-2 code":"WS","Alpha-3 code":"WSM","Numeric code":882,Latitude:-13.5833,Longitude:-172.3333},{Country:"San Marino","Alpha-2 code":"SM","Alpha-3 code":"SMR","Numeric code":674,Latitude:43.7667,Longitude:12.4167},{Country:"Sao Tome and Principe","Alpha-2 code":"ST","Alpha-3 code":"STP","Numeric code":678,Latitude:1,Longitude:7},{Country:"Saudi Arabia","Alpha-2 code":"SA","Alpha-3 code":"SAU","Numeric code":682,Latitude:25,Longitude:45},{Country:"Senegal","Alpha-2 code":"SN","Alpha-3 code":"SEN","Numeric code":686,Latitude:14,Longitude:-14},{Country:"Serbia","Alpha-2 code":"RS","Alpha-3 code":"SRB","Numeric code":688,Latitude:44,Longitude:21},{Country:"Seychelles","Alpha-2 code":"SC","Alpha-3 code":"SYC","Numeric code":690,Latitude:-4.5833,Longitude:55.6667},{Country:"Sierra Leone","Alpha-2 code":"SL","Alpha-3 code":"SLE","Numeric code":694,Latitude:8.5,Longitude:-11.5},{Country:"Singapore","Alpha-2 code":"SG","Alpha-3 code":"SGP","Numeric code":702,Latitude:1.3667,Longitude:103.8},{Country:"Slovakia","Alpha-2 code":"SK","Alpha-3 code":"SVK","Numeric code":703,Latitude:48.6667,Longitude:19.5},{Country:"Slovenia","Alpha-2 code":"SI","Alpha-3 code":"SVN","Numeric code":705,Latitude:46,Longitude:15},{Country:"Solomon Islands","Alpha-2 code":"SB","Alpha-3 code":"SLB","Numeric code":90,Latitude:-8,Longitude:159},{Country:"Somalia","Alpha-2 code":"SO","Alpha-3 code":"SOM","Numeric code":706,Latitude:10,Longitude:49},{Country:"South Africa","Alpha-2 code":"ZA","Alpha-3 code":"ZAF","Numeric code":710,Latitude:-29,Longitude:24},{Country:"South Georgia and the South Sandwich Islands","Alpha-2 code":"GS","Alpha-3 code":"SGS","Numeric code":239,Latitude:-54.5,Longitude:-37},{Country:"South Sudan","Alpha-2 code":"SS","Alpha-3 code":"SSD","Numeric code":728,Latitude:8,Longitude:30},{Country:"Spain","Alpha-2 code":"ES","Alpha-3 code":"ESP","Numeric code":724,Latitude:40,Longitude:-4},{Country:"Sri Lanka","Alpha-2 code":"LK","Alpha-3 code":"LKA","Numeric code":144,Latitude:7,Longitude:81},{Country:"Sudan","Alpha-2 code":"SD","Alpha-3 code":"SDN","Numeric code":736,Latitude:15,Longitude:30},{Country:"Suriname","Alpha-2 code":"SR","Alpha-3 code":"SUR","Numeric code":740,Latitude:4,Longitude:-56},{Country:"Svalbard and Jan Mayen","Alpha-2 code":"SJ","Alpha-3 code":"SJM","Numeric code":744,Latitude:78,Longitude:20},{Country:"Swaziland","Alpha-2 code":"SZ","Alpha-3 code":"SWZ","Numeric code":748,Latitude:-26.5,Longitude:31.5},{Country:"Sweden","Alpha-2 code":"SE","Alpha-3 code":"SWE","Numeric code":752,Latitude:61,Longitude:15},{Country:"Switzerland","Alpha-2 code":"CH","Alpha-3 code":"CHE","Numeric code":756,Latitude:47,Longitude:8},{Country:"Syrian Arab Republic","Alpha-2 code":"SY","Alpha-3 code":"SYR","Numeric code":760,Latitude:35,Longitude:38},{Country:"Taiwan","Alpha-2 code":"TW","Alpha-3 code":"TWN","Numeric code":158,Latitude:23.5,Longitude:121},{Country:"Tajikistan","Alpha-2 code":"TJ","Alpha-3 code":"TJK","Numeric code":762,Latitude:39,Longitude:71},{Country:"Tanzania","Alpha-2 code":"TZ","Alpha-3 code":"TZA","Numeric code":834,Latitude:-6,Longitude:35},{Country:"Thailand","Alpha-2 code":"TH","Alpha-3 code":"THA","Numeric code":764,Latitude:15,Longitude:100},{Country:"Timor-Leste","Alpha-2 code":"TL","Alpha-3 code":"TLS","Numeric code":626,Latitude:-8.55,Longitude:125.5167},{Country:"Togo","Alpha-2 code":"TG","Alpha-3 code":"TGO","Numeric code":768,Latitude:8,Longitude:1.1667},{Country:"Tokelau","Alpha-2 code":"TK","Alpha-3 code":"TKL","Numeric code":772,Latitude:-9,Longitude:-172},{Country:"Tonga","Alpha-2 code":"TO","Alpha-3 code":"TON","Numeric code":776,Latitude:-20,Longitude:-175},{Country:"Trinidad and Tobago","Alpha-2 code":"TT","Alpha-3 code":"TTO","Numeric code":780,Latitude:11,Longitude:-61},{Country:"Tunisia","Alpha-2 code":"TN","Alpha-3 code":"TUN","Numeric code":788,Latitude:34,Longitude:9},{Country:"Turkey","Alpha-2 code":"TR","Alpha-3 code":"TUR","Numeric code":792,Latitude:39,Longitude:35},{Country:"Turkmenistan","Alpha-2 code":"TM","Alpha-3 code":"TKM","Numeric code":795,Latitude:40,Longitude:60},{Country:"Turks and Caicos Islands","Alpha-2 code":"TC","Alpha-3 code":"TCA","Numeric code":796,Latitude:21.75,Longitude:-71.5833},{Country:"Tuvalu","Alpha-2 code":"TV","Alpha-3 code":"TUV","Numeric code":798,Latitude:-8,Longitude:178},{Country:"Uganda","Alpha-2 code":"UG","Alpha-3 code":"UGA","Numeric code":800,Latitude:1,Longitude:32},{Country:"Ukraine","Alpha-2 code":"UA","Alpha-3 code":"UKR","Numeric code":804,Latitude:49,Longitude:32},{Country:"United Arab Emirates","Alpha-2 code":"AE","Alpha-3 code":"ARE","Numeric code":784,Latitude:24,Longitude:54},{Country:"United Kingdom","Alpha-2 code":"GB","Alpha-3 code":"GBR","Numeric code":826,Latitude:54,Longitude:-2},{Country:"United States","Alpha-2 code":"US","Alpha-3 code":"USA","Numeric code":840,Latitude:38,Longitude:-97},{Country:"United States Minor Outlying Islands","Alpha-2 code":"UM","Alpha-3 code":"UMI","Numeric code":581,Latitude:19.2833,Longitude:166.6},{Country:"Uruguay","Alpha-2 code":"UY","Alpha-3 code":"URY","Numeric code":858,Latitude:-33,Longitude:-56},{Country:"Uzbekistan","Alpha-2 code":"UZ","Alpha-3 code":"UZB","Numeric code":860,Latitude:41,Longitude:64},{Country:"Vanuatu","Alpha-2 code":"VU","Alpha-3 code":"VUT","Numeric code":548,Latitude:-16,Longitude:167},{Country:"Venezuela","Alpha-2 code":"VE","Alpha-3 code":"VEN","Numeric code":862,Latitude:8,Longitude:-66},{Country:"Vietnam","Alpha-2 code":"VN","Alpha-3 code":"VNM","Numeric code":704,Latitude:16,Longitude:106},{Country:"Virgin Islands, British","Alpha-2 code":"VG","Alpha-3 code":"VGB","Numeric code":92,Latitude:18.5,Longitude:-64.5},{Country:"Virgin Islands, U.S.","Alpha-2 code":"VI","Alpha-3 code":"VIR","Numeric code":850,Latitude:18.3333,Longitude:-64.8333},{Country:"Wallis and Futuna","Alpha-2 code":"WF","Alpha-3 code":"WLF","Numeric code":876,Latitude:-13.3,Longitude:-176.2},{Country:"Western Sahara","Alpha-2 code":"EH","Alpha-3 code":"ESH","Numeric code":732,Latitude:24.5,Longitude:-13},{Country:"Yemen","Alpha-2 code":"YE","Alpha-3 code":"YEM","Numeric code":887,Latitude:15,Longitude:48},{Country:"Zambia","Alpha-2 code":"ZM","Alpha-3 code":"ZMB","Numeric code":894,Latitude:-15,Longitude:30},{Country:"Zimbabwe","Alpha-2 code":"ZW","Alpha-3 code":"ZWE","Numeric code":716,Latitude:-20,Longitude:30}];function Ip(a){return a}function Op(a){if(a==null)return Ip;var e,t,n=a.scale[0],i=a.scale[1],r=a.translate[0],s=a.translate[1];return function(o,l){l||(e=t=0);var u=2,c=o.length,_=new Array(c);for(_[0]=(e+=o[0])*n+r,_[1]=(t+=o[1])*i+s;u<c;)_[u]=o[u],++u;return _}}function Bp(a,e){for(var t,n=a.length,i=n-e;i<--n;)t=a[i],a[i++]=a[n],a[n]=t}function Fp(a,e){return e.type==="GeometryCollection"?{type:"FeatureCollection",features:e.geometries.map(function(t){return Ms(a,t)})}:Ms(a,e)}function Ms(a,e){var t=e.id,n=e.bbox,i=e.properties==null?{}:e.properties,r=Gp(a,e);return t==null&&n==null?{type:"Feature",properties:i,geometry:r}:n==null?{type:"Feature",id:t,properties:i,geometry:r}:{type:"Feature",id:t,bbox:n,properties:i,geometry:r}}function Gp(a,e){var t=Op(a.transform),n=a.arcs;function i(c,_){_.length&&_.pop();for(var p=n[c<0?~c:c],f=0,h=p.length;f<h;++f)_.push(t(p[f],f));c<0&&Bp(_,h)}function r(c){return t(c)}function s(c){for(var _=[],p=0,f=c.length;p<f;++p)i(c[p],_);return _.length<2&&_.push(_[0]),_}function o(c){for(var _=s(c);_.length<4;)_.push(_[0]);return _}function l(c){return c.map(o)}function u(c){var _=c.type,p;switch(_){case"GeometryCollection":return{type:_,geometries:c.geometries.map(u)};case"Point":p=r(c.coordinates);break;case"MultiPoint":p=c.coordinates.map(r);break;case"LineString":p=s(c.arcs);break;case"MultiLineString":p=c.arcs.map(s);break;case"Polygon":p=l(c.arcs);break;case"MultiPolygon":p=c.arcs.map(l);break;default:return null}return{type:_,coordinates:p}}return u(e)}class Es{constructor(){Je(this,"mesh",new ra)}drawPlanet(e){const t=new sr(this.radius,128,128),n=new Ge(e??16777215),i=new Ki({color:n.lerp(new Ge(0),.1)}),r=new tn(t,i);this.mesh=new ra,this.mesh.add(r)}}class xs{constructor(e,t,n){Je(this,"position");this.lat=e,this.long=t,this.name=n,this.position=La.fromLLd(t,e,1e4)}}class ws extends Es{constructor({color:t,fgColor:n}){super();Je(this,"fgColor",3355443);Je(this,"countryOutlineMaterial");n&&(this.fgColor=n),this.countryOutlineMaterial=new _s({color:this.fgColor,linewidth:1}),this.drawPlanet(t),this.drawCountriesOutlines(),this.drawCountryNames()}get radius(){return 6731e3}drawCountryNames(){for(const t of Up){const n=new xs(t.Latitude,t.Longitude,t.Country);this.drawPointOfInterest(n)}}drawPointOfInterest(t){const n=new xt,i=new Float32Array([0,0,0]);n.setAttribute("position",new Mt(i,3));const r=new hs({size:5,color:this.fgColor,sizeAttenuation:!1}),s=new Rp(n,r);s.position.x=t.position.x,s.position.y=t.position.y,s.position.z=t.position.z,this.mesh.add(s);const o=La.fromLLd(t.long,t.lat,1e5),l=Dp(t.name,{fontsize:14,color:new Ge(this.fgColor).getStyle()});l.position.x=o.x,l.position.y=o.y,l.position.z=o.z;const u=.001;l.scale.set(256*this.radius*u,64*this.radius*u,1),this.mesh.add(l)}drawCountriesOutlines(){const t=Fp(cr,cr.objects.countries);console.log(cr),console.log("data",t);for(const n of t.features)this.drawCountry(n)}addCountryGeometry(t){const n=t.flatMap(s=>{const o=La.fromLLd(s[0],s[1],1e4);return[o.x,o.y,o.z]}),i=new xt;i.setAttribute("position",new Mt(new Float32Array(n),3));const r=new Lp(i,this.countryOutlineMaterial);this.mesh.add(r)}drawCountry(t){for(let n in t.geometry.coordinates)if(t.geometry.type!="Polygon")for(const i of t.geometry.coordinates)this.addCountryGeometry(i[0]);else{const i=t.geometry.coordinates[n];this.addCountryGeometry(i)}}}const Ts={type:"change"},dr={type:"start"},Ls={type:"end"},_i=new Fa,Rs=new mn,Hp=Math.cos(70*Zl.DEG2RAD);class zp extends vn{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new C,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Rt.ROTATE,MIDDLE:Rt.DOLLY,RIGHT:Rt.PAN},this.touches={ONE:kn.ROTATE,TWO:kn.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return o.phi},this.getAzimuthalAngle=function(){return o.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(w){w.addEventListener("keydown",g),this._domElementKeyEvents=w},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",g),this._domElementKeyEvents=null},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(Ts),n.update(),r=i.NONE},this.update=function(){const w=new C,Z=new Sn().setFromUnitVectors(e.up,new C(0,1,0)),ce=Z.clone().invert(),oe=new C,ue=new Sn,we=new C,Oe=2*Math.PI;return function(le=null){const B=n.object.position;w.copy(B).sub(n.target),w.applyQuaternion(Z),o.setFromVector3(w),n.autoRotate&&r===i.NONE&&q(v(le)),n.enableDamping?(o.theta+=l.theta*n.dampingFactor,o.phi+=l.phi*n.dampingFactor):(o.theta+=l.theta,o.phi+=l.phi);let ee=n.minAzimuthAngle,re=n.maxAzimuthAngle;isFinite(ee)&&isFinite(re)&&(ee<-Math.PI?ee+=Oe:ee>Math.PI&&(ee-=Oe),re<-Math.PI?re+=Oe:re>Math.PI&&(re-=Oe),ee<=re?o.theta=Math.max(ee,Math.min(re,o.theta)):o.theta=o.theta>(ee+re)/2?Math.max(ee,o.theta):Math.min(re,o.theta)),o.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,o.phi)),o.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(c,n.dampingFactor):n.target.add(c),n.zoomToCursor&&P||n.object.isOrthographicCamera?o.radius=j(o.radius):o.radius=j(o.radius*u),w.setFromSpherical(o),w.applyQuaternion(ce),B.copy(n.target).add(w),n.object.lookAt(n.target),n.enableDamping===!0?(l.theta*=1-n.dampingFactor,l.phi*=1-n.dampingFactor,c.multiplyScalar(1-n.dampingFactor)):(l.set(0,0,0),c.set(0,0,0));let De=!1;if(n.zoomToCursor&&P){let He=null;if(n.object.isPerspectiveCamera){const Ve=w.length();He=j(Ve*u);const Tt=Ve-He;n.object.position.addScaledVector(L,Tt),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){const Ve=new C(x.x,x.y,0);Ve.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/u)),n.object.updateProjectionMatrix(),De=!0;const Tt=new C(x.x,x.y,0);Tt.unproject(n.object),n.object.position.sub(Tt).add(Ve),n.object.updateMatrixWorld(),He=w.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;He!==null&&(this.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(He).add(n.object.position):(_i.origin.copy(n.object.position),_i.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(_i.direction))<Hp?e.lookAt(n.target):(Rs.setFromNormalAndCoplanarPoint(n.object.up,n.target),_i.intersectPlane(Rs,n.target))))}else n.object.isOrthographicCamera&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/u)),n.object.updateProjectionMatrix(),De=!0);return u=1,P=!1,De||oe.distanceToSquared(n.object.position)>s||8*(1-ue.dot(n.object.quaternion))>s||we.distanceToSquared(n.target)>0?(n.dispatchEvent(Ts),oe.copy(n.object.position),ue.copy(n.object.quaternion),we.copy(n.target),De=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",$),n.domElement.removeEventListener("pointerdown",ke),n.domElement.removeEventListener("pointercancel",Fe),n.domElement.removeEventListener("wheel",S),n.domElement.removeEventListener("pointermove",Le),n.domElement.removeEventListener("pointerup",Fe),n._domElementKeyEvents!==null&&(n._domElementKeyEvents.removeEventListener("keydown",g),n._domElementKeyEvents=null)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let r=i.NONE;const s=1e-6,o=new Ss,l=new Ss;let u=1;const c=new C,_=new ve,p=new ve,f=new ve,h=new ve,y=new ve,m=new ve,d=new ve,E=new ve,b=new ve,L=new C,x=new ve;let P=!1;const T=[],W={};function v(w){return w!==null?2*Math.PI/60*n.autoRotateSpeed*w:2*Math.PI/60/60*n.autoRotateSpeed}function M(){return Math.pow(.95,n.zoomSpeed)}function q(w){l.theta-=w}function ie(w){l.phi-=w}const F=function(){const w=new C;return function(ce,oe){w.setFromMatrixColumn(oe,0),w.multiplyScalar(-ce),c.add(w)}}(),H=function(){const w=new C;return function(ce,oe){n.screenSpacePanning===!0?w.setFromMatrixColumn(oe,1):(w.setFromMatrixColumn(oe,0),w.crossVectors(n.object.up,w)),w.multiplyScalar(ce),c.add(w)}}(),G=function(){const w=new C;return function(ce,oe){const ue=n.domElement;if(n.object.isPerspectiveCamera){const we=n.object.position;w.copy(we).sub(n.target);let Oe=w.length();Oe*=Math.tan(n.object.fov/2*Math.PI/180),F(2*ce*Oe/ue.clientHeight,n.object.matrix),H(2*oe*Oe/ue.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(F(ce*(n.object.right-n.object.left)/n.object.zoom/ue.clientWidth,n.object.matrix),H(oe*(n.object.top-n.object.bottom)/n.object.zoom/ue.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function Q(w){n.object.isPerspectiveCamera||n.object.isOrthographicCamera?u/=w:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function X(w){n.object.isPerspectiveCamera||n.object.isOrthographicCamera?u*=w:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function Y(w){if(!n.zoomToCursor)return;P=!0;const Z=n.domElement.getBoundingClientRect(),ce=w.clientX-Z.left,oe=w.clientY-Z.top,ue=Z.width,we=Z.height;x.x=ce/ue*2-1,x.y=-(oe/we)*2+1,L.set(x.x,x.y,1).unproject(n.object).sub(n.object.position).normalize()}function j(w){return Math.max(n.minDistance,Math.min(n.maxDistance,w))}function J(w){_.set(w.clientX,w.clientY)}function U(w){Y(w),d.set(w.clientX,w.clientY)}function K(w){h.set(w.clientX,w.clientY)}function de(w){p.set(w.clientX,w.clientY),f.subVectors(p,_).multiplyScalar(n.rotateSpeed);const Z=n.domElement;q(2*Math.PI*f.x/Z.clientHeight),ie(2*Math.PI*f.y/Z.clientHeight),_.copy(p),n.update()}function _e(w){E.set(w.clientX,w.clientY),b.subVectors(E,d),b.y>0?Q(M()):b.y<0&&X(M()),d.copy(E),n.update()}function pe(w){y.set(w.clientX,w.clientY),m.subVectors(y,h).multiplyScalar(n.panSpeed),G(m.x,m.y),h.copy(y),n.update()}function ye(w){Y(w),w.deltaY<0?X(M()):w.deltaY>0&&Q(M()),n.update()}function xe(w){let Z=!1;switch(w.code){case n.keys.UP:w.ctrlKey||w.metaKey||w.shiftKey?ie(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):G(0,n.keyPanSpeed),Z=!0;break;case n.keys.BOTTOM:w.ctrlKey||w.metaKey||w.shiftKey?ie(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):G(0,-n.keyPanSpeed),Z=!0;break;case n.keys.LEFT:w.ctrlKey||w.metaKey||w.shiftKey?q(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):G(n.keyPanSpeed,0),Z=!0;break;case n.keys.RIGHT:w.ctrlKey||w.metaKey||w.shiftKey?q(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):G(-n.keyPanSpeed,0),Z=!0;break}Z&&(w.preventDefault(),n.update())}function he(){if(T.length===1)_.set(T[0].pageX,T[0].pageY);else{const w=.5*(T[0].pageX+T[1].pageX),Z=.5*(T[0].pageY+T[1].pageY);_.set(w,Z)}}function Be(){if(T.length===1)h.set(T[0].pageX,T[0].pageY);else{const w=.5*(T[0].pageX+T[1].pageX),Z=.5*(T[0].pageY+T[1].pageY);h.set(w,Z)}}function ut(){const w=T[0].pageX-T[1].pageX,Z=T[0].pageY-T[1].pageY,ce=Math.sqrt(w*w+Z*Z);d.set(0,ce)}function Ce(){n.enableZoom&&ut(),n.enablePan&&Be()}function k(){n.enableZoom&&ut(),n.enableRotate&&he()}function it(w){if(T.length==1)p.set(w.pageX,w.pageY);else{const ce=O(w),oe=.5*(w.pageX+ce.x),ue=.5*(w.pageY+ce.y);p.set(oe,ue)}f.subVectors(p,_).multiplyScalar(n.rotateSpeed);const Z=n.domElement;q(2*Math.PI*f.x/Z.clientHeight),ie(2*Math.PI*f.y/Z.clientHeight),_.copy(p)}function ge(w){if(T.length===1)y.set(w.pageX,w.pageY);else{const Z=O(w),ce=.5*(w.pageX+Z.x),oe=.5*(w.pageY+Z.y);y.set(ce,oe)}m.subVectors(y,h).multiplyScalar(n.panSpeed),G(m.x,m.y),h.copy(y)}function Te(w){const Z=O(w),ce=w.pageX-Z.x,oe=w.pageY-Z.y,ue=Math.sqrt(ce*ce+oe*oe);E.set(0,ue),b.set(0,Math.pow(E.y/d.y,n.zoomSpeed)),Q(b.y),d.copy(E)}function Se(w){n.enableZoom&&Te(w),n.enablePan&&ge(w)}function We(w){n.enableZoom&&Te(w),n.enableRotate&&it(w)}function ke(w){n.enabled!==!1&&(T.length===0&&(n.domElement.setPointerCapture(w.pointerId),n.domElement.addEventListener("pointermove",Le),n.domElement.addEventListener("pointerup",Fe)),ne(w),w.pointerType==="touch"?I(w):rt(w))}function Le(w){n.enabled!==!1&&(w.pointerType==="touch"?te(w):st(w))}function Fe(w){fe(w),T.length===0&&(n.domElement.releasePointerCapture(w.pointerId),n.domElement.removeEventListener("pointermove",Le),n.domElement.removeEventListener("pointerup",Fe)),n.dispatchEvent(Ls),r=i.NONE}function rt(w){let Z;switch(w.button){case 0:Z=n.mouseButtons.LEFT;break;case 1:Z=n.mouseButtons.MIDDLE;break;case 2:Z=n.mouseButtons.RIGHT;break;default:Z=-1}switch(Z){case Rt.DOLLY:if(n.enableZoom===!1)return;U(w),r=i.DOLLY;break;case Rt.ROTATE:if(w.ctrlKey||w.metaKey||w.shiftKey){if(n.enablePan===!1)return;K(w),r=i.PAN}else{if(n.enableRotate===!1)return;J(w),r=i.ROTATE}break;case Rt.PAN:if(w.ctrlKey||w.metaKey||w.shiftKey){if(n.enableRotate===!1)return;J(w),r=i.ROTATE}else{if(n.enablePan===!1)return;K(w),r=i.PAN}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(dr)}function st(w){switch(r){case i.ROTATE:if(n.enableRotate===!1)return;de(w);break;case i.DOLLY:if(n.enableZoom===!1)return;_e(w);break;case i.PAN:if(n.enablePan===!1)return;pe(w);break}}function S(w){n.enabled===!1||n.enableZoom===!1||r!==i.NONE||(w.preventDefault(),n.dispatchEvent(dr),ye(w),n.dispatchEvent(Ls))}function g(w){n.enabled===!1||n.enablePan===!1||xe(w)}function I(w){switch(ae(w),T.length){case 1:switch(n.touches.ONE){case kn.ROTATE:if(n.enableRotate===!1)return;he(),r=i.TOUCH_ROTATE;break;case kn.PAN:if(n.enablePan===!1)return;Be(),r=i.TOUCH_PAN;break;default:r=i.NONE}break;case 2:switch(n.touches.TWO){case kn.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Ce(),r=i.TOUCH_DOLLY_PAN;break;case kn.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;k(),r=i.TOUCH_DOLLY_ROTATE;break;default:r=i.NONE}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(dr)}function te(w){switch(ae(w),r){case i.TOUCH_ROTATE:if(n.enableRotate===!1)return;it(w),n.update();break;case i.TOUCH_PAN:if(n.enablePan===!1)return;ge(w),n.update();break;case i.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Se(w),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;We(w),n.update();break;default:r=i.NONE}}function $(w){n.enabled!==!1&&w.preventDefault()}function ne(w){T.push(w)}function fe(w){delete W[w.pointerId];for(let Z=0;Z<T.length;Z++)if(T[Z].pointerId==w.pointerId){T.splice(Z,1);return}}function ae(w){let Z=W[w.pointerId];Z===void 0&&(Z=new ve,W[w.pointerId]=Z),Z.set(w.pageX,w.pageY)}function O(w){const Z=w.pointerId===T[0].pointerId?T[1]:T[0];return W[Z.pointerId]}n.domElement.addEventListener("contextmenu",$),n.domElement.addEventListener("pointerdown",ke),n.domElement.addEventListener("pointercancel",Fe),n.domElement.addEventListener("wheel",S,{passive:!1}),this.update()}}class Vp{constructor(e,t={}){Je(this,"w");Je(this,"h");Je(this,"planet");Je(this,"rate");Je(this,"camera");Je(this,"scene",new xp);Je(this,"renderer");Je(this,"controls");Je(this,"light");this.DOM=e;const{clearColor:n=16118257}=t;this.DOM=e,this.planet=t.planet??new ws({color:n,fgColor:t.fgColor}),this.rate=1e-6,this.w=e.offsetWidth,this.h=e.offsetHeight,this.render=this.render.bind(this),this.renderer=new ss({antialias:!0}),this.renderer.setSize(this.w,this.h),this.DOM.appendChild(this.renderer.domElement),this.renderer.setClearColor(t.clearColor??16118257,1),this.renderer.autoClear=!1,this.camera=new wt(75,this.w/this.h,.01,1e3),this.camera.position.x=this.planet.radius*this.rate*.6,this.camera.position.y=this.planet.radius*this.rate*1.4,this.camera.position.z=this.planet.radius*this.rate*.9,this.camera.lookAt(new C(0,0,0)),this.initControls(),this.initPlanet(),this.initLight()}initControls(){if(!this.renderer||!this.camera)throw new Error("initControls: no renderer or camera");this.controls=new zp(this.camera,this.renderer.domElement),this.controls.minDistance=9,this.controls.maxDistance=15,this.controls.enablePan=!1}initPlanet(){this.planet.mesh.scale.set(this.rate,this.rate,this.rate),this.scene.add(this.planet.mesh)}initLight(){this.light=new kp(16777215,14e3,0),this.light.position.set(-2*this.planet.radius*this.rate,10*this.planet.radius*this.rate,5*this.planet.radius*this.rate),this.scene.add(this.light)}render(){requestAnimationFrame(this.render);const e=this.renderer;e.clear(),e.render(this.scene,this.camera)}start(){this.render()}}pt.Earth=ws,pt.Engine=Vp,pt.Planet=Es,pt.PointOfInterest=xs,Object.defineProperty(pt,Symbol.toStringTag,{value:"Module"})});
